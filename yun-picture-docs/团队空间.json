{"nodes":[{"block_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","block_type":1,"children":["GFzEdOro6oPH1mxZmk0c8NIIn6e","TH3fdC8fVo8nMMxJCM7clU0EnBb","OnjVdDAHbouo54xasSTcG62cnbg","CNhSdvqm2oF9NMxrxcqcsyTSndh","JPQpd9QJwoxQwqx8m0DcKPWonec","GDhsdSY84oZMHlxsT1YcXhKansf","Vm9fd7EHyoYnnqxYQb1cHDpJnTc","TZDHdOciionI6QxZbNAcLNlcnxg","Mg0Xd56SnoeDyLx2YYrcZFoDnmg","GylXdaZsJoLVXbxOQEUcgQacnOb","B9LcdcLDsoZneuxdEswcyq8CnUb","RW2Pd2rbeoUNgqxHxJvc3pGGnwf","XDUndrUu7o5yxexHMFDcLuuMnLh","QCygdGNSAonFoAx8cPeckfkEnod","F2GwduW6woVkCAxJHiZcN60Pntb","ZhdrduzPVodkMaxoakjc9FY7n6e","U3L2dCN3XofO33xCqF1cKJxXnoc","KE7hdxKsxo310UxT3jVcHEU7n3d","Mm9mdRDHYofmStxd9C6cwlytnEc","U0SNdaFnvokruyxjzJ3cZyTcnNd","EEKydYxVYoOfPHxNGpzcdqVenod","QuxsdivinoNQJ7xTbyZcnZL9nLH","LOFbdLi4so5apex7GdscWAtKnEd","NvX3dQc4dode4kx5DA3ctVpkntd","Y9eYdB7FdoA0pWxq5Dvc1H5CnRc","LoQEd3EWHo46sxxr5ijcfljqnvc","DenedOcvkoDy3kxcgZac35UNnUb","Axr4dqa6foQk6IxjQjScChFfn4b","MbJPdOjKRofS7Gx5jUbcDFlsnnh","Qr6KdYlJ3ojoW0xUDpUcLTQwnrc","Lx3CdY8SGoCRjaxDwMicW97DnNb","YXq8dSJ7ToMz6uxCnIZcRlHqnrf","YhtmdEAGzo6sXdxjMpscw0xKndc","WperdjgpOoVK3oxxI2acOJIdnwg","TFojdQfoUo85LLxua8icNDqLnJd","FfYmdpEdaoHRcdxEeLhc26manWc","BAREdFqHKo6YUix20d7cKhi4nqx","Wpj3dRDAnoaSHIxAhiQcGZDknxb","N6vQdUwXBovzfnx57AQcctQQnsd","PBJbdKSGKoEMz6xckO5ceu6bnbg","WacHdLjsOoc3SEx7mehcxiP7nOb","PxLpd9G0OotMP9xWR3McgajFnKX","Jz01drsYWoQ5wuxw1MncXXo7nec","K3NUdD6m6oA0GdxXAR3cHy8dnxd","Ba8BdmmDvoZpP6xU8Sxcg9ugnLh","CU36dk9NLoc3ycx1JIUcALAMnge","OFLnd6ElXomnlDxhLlMcn3ronXe","DUbvd7U8xo3b1TxZJIycxqPBnrc","ARzBdN5oJozShBxdKM8cvCXDnFf","YsUYdTnmZotnuRxzppZcfmqXnCh","V1oMdly92omsLwxYXZlcPxwDnrA","NegSdozHho7jukx6nN9cDG8YnR3","OrjldrCFeo6IEZxy3nvcwjamnVc","ZtKydiJDOofsyyxBjQIcS6sknli","WsOYdHa2gou1A0xDWJPcQtRHnyc","PJmUddSQZog4FZxxTL9chEq7nmc","Kdtbd80C2oHZjFxBtsmc2zsenkh","TqZddGBEEoU9qzxlnHpcK25UnSd","ZeesdTavIozw2uxuphkcdfVSnde","GO3sddPlDoYqMWxFVDhcNzLsnTh","ILUUdSFD2owiwpxLaB0cz3ePnXe","B7lvd8oVdoNsL2xenFDcIVySnCc","YUiudqyDAolN8Rxv4Tdc4Qd1nge","Vfasd6JpQoflThxx83jcMUkCnMf","DndJd1YU8oHPOVx00mDcGn1WnQf","JgxhdtBgzoeJLSxHojmcNSZDnpb","Fd2AdOb8no8bFUxNdDwc9nh2n6f","WFYpdVU7Jov432xyKQKcRJY3njb","GhFJdfZnbovMbfxOyFGcahAdnFh","TVPDdIAu0o8zkHxluRzcu6Jondd","SzbUdXmSSoCJApxor9NccMVgnob","NSmjdXlAvoIez6xLilFctWBKnEh","Bkr0dF2BEoq7axxXABDc0gjen3f","GnWSdkOx5o8jGAxIKmTcwgu7nwc","UPo8dPRdTosVixxWjsCcurgfnse","QpBtdFznKowOUOx9LSJcJG1enAg","EIqWdwVFOoeSpUxWqFPcZHidnYd","SNHPdiuk4oLdz1x4M15cYBSwnNd","GmKmd9sDeoJoXlxdCmscSaN7nns","CI65d9yaVoBN5txeTwLcXHv8nSc","FZ51dKCbdoFDrjxS6GrcmKOMn8g","IrWXdGAnHos8uGxnZmWcmhcLnNf","LLgcdGE1poAtlexQN2WcT18xnMd","KRVidyOPnos5L3xAoxVcckpdnhh","OEvcdZfcoohQsKx7pkYcu4ZcnRh","IUiyd6F18orQ5bxfRLccoQulnjh","TIGud9uXUo3BnRxVfuRchmFpn2d","Tn43dO6DdoPeiBxXbEycBdCmnHm","D7yldYCrnoTrpbx1x9ecG5QYn2b","IHx9dZ2sSoHpV4x4j3wcnsCCneQ","TUbsdV0B4oe37vxau35c3v41nNf","HueZdOja0oV7FexesDEc4BFLnYe","ZlzbdSbBcoc0TbxBf4Wccq8pnmh","YzxQdu2J7oYlQIxZ9WgclYKvnNc","GcdBdVKedoKcZSxYRQ1cLHOPn2d","Rggadtk0yo0u7uxB4u8csO31nsg","OLeydpCVHof7r0xry92ckRkEnJe","FUugd5KiioiezwxQ8kscLLuRnkd","PYy0dBjNHoIVyVxjjmvch8K5nzb","MUD0dHhhCoqMPJxitjHcs0N3nJc","FEngdsm2Do1BvyxrRqMcpJ6Inzh","PZy5dkKzzoguZZx7cnqchmcyn6e","McXidxra9otN1Jxrda5coUpxnqd","TN0Vd57RioS6aDx3uE3cBO5fnRT","HlpAdMIvDopb1vx6aogczCpSn4d","IMFqdb5q0o0xb0xsVOAcCTBHnos","Kff5dK5eyoRqXuxi78RcWF3QnPh","BOoFd894forkWnxPHnNcORFOnKe","NrYIdDaoootXL6x6qgfcTY9OnCd","QTCCdzIjqov7nwxZc5hcBU9gnk6","QvXSdZWvcohbFdxbz73cSIOBnKc","WjEudN3zyoyHYaxNjCccj45Mnhg","HYMKdir26oPczvxzuNLcKhzCnQf","SwgjdlZCMol94nxNzl9crIEVnxb","EN4QdSfQBoCVgixi3a9cC7Zpnoc","MzfVdVlDNobKWExSj0Ucf4OmnWb","DNB1d9UUZo5fM0xUY3CcVAGMncg","MyWEdMnn1o54shxjufscdQz0nGg","Gy2KdWRGkoKWnoxcjxLcKABNnFc","CZk5dVslJoF2JZx0DRHcC2vUnFe","Gn8CdUXSpostgHxIZxRcYtgvnnh","DKsfdMrYCokUU7xn491cRLWDnad","RFk9daN3hoFJsIxq59PcWolJnic","YUTLdOEFUo4fVnx12E7c0y9gn3s","KSmqdVpuYorFuRxtT6rc0frVnyc","UlXhdhX6eoVcJDxEHZ8ctTuKnMh","UhOXdT5xno4tLnx1ztpcX6XcnHh","H1ZsdfjgkoFyVJxMedpcUubjnOq","Zt30doUuPocplZxkYVEcVUokndh","DJ6UdUCtQozMeLxDzZhcuvw0nRc","FRMqdWOacoob5bx7guMcBqXjnZf","JFyrdmwFhoIkGBxQkBaccgLcnHg","BjXRdmNFFozTYVx5dH2cfeo3nDc","OojCdjkaNoRPhUx9lyqcwHmvn9A","TDcnddgYnosJ7VxkFtncXdKUnLc","BytYdfngkoSGDVxpd3gcEdeRnWf","Rqv7d7Ezyo3SawxvDzyc3Efwn86","DvzTdZIFVoT5cCxvR4bcsV4HnBf","LKsOdCFpmo5iCexhuyucLvCvnnh","UtvydYB91o0CxSxcQsjcOVOCnkg","JuwddXlMcoaEoyxdleucCXdfnie","MY5YdoaS3oDzB8xek0vcUQLonJH","B05tdataMoneCZxgqdgcTBctnSb","N07Rdr4TfoVZHRxjGT9ct74Pnah","QOLhdJVZaoRsHrx77fBckZNRnbh","DxSxd0jUPocpBQxkEAqcQs4mnqe","UyeEdKSozoORJjxMyPpcFvxDnEd","I1rpd2T1yoFhoOx21u9c01TpnMh","RVm2dA57GojXMnxWlN2c36yxnlf","PotOd3NM7olCDmxRTemcCANMnMf","GKuBd24gso6OIQxoPLMcvPJRn2c","QzT7duB52o2I3lxmaY0cgP1Znig","WRa6da9cuo5HSSxqUAnc7kFrn3f","LIFWdB706oK38kxZQSjcmAc1nZc","YU5XdOrifoNjZjx7DWjcSkvknZc","Pt0qdxw57o6fqGxoTbNcnI9jnSg","LhkTdqHBBoIUnOxYH3xcLz90nud","ACF0dCBPGoj5ErxPY7Rchh1nn60","YBSJdxbSJohP2pxtEGkcL7z7nyh","JWSwdRC58oBJIKxr6dwc9TCinJb","DNT1d5c49oWrh3xbODQcEnYnn0g","UkMEdVsZOoeBeNxVY6xceYx7nZg","BrAVdkyrcooydSxAjfGcwlEInte","XlO1dMeBWo6V5xxC7CvcKyYjnnc","SBAedDjSSohDWaxJhiFcAzLsnmd","N3t0d5M2RofzGSxtdEVcOEZMnHh","OkbhdiQDCosm8MxELzgcifW3nqm","QnCLdHWgqoBwP4xraQ2cIEWqneh","MNE3d5Inqo07AyxuYzJchfKdnIb","D0dYdyDHRoKyKqxrVAWcqDbmn2e","Geysdt0NJo0C9JxPfmVcG9wxnK2","G3u4dwXk7oNjHhx1MtEcbmfPnLc","P8QldqzpDoslSmxY0Y8cExCNnLf","JnHidMMe0oIeksxRPYlcj6GvnAh","FYZwdKxwkoJ6WMx2KEvcORtRnEh","QbAcdz21roxagDxBrmdcgZLOn2d","SlZQd4hXdo8RDGxKPAkcVKiunWe","NDa1dBRQwoYW7XxDo9UcUjjPnZd","SOWXdja4roS6r8xOf9vc5aJ2nOK","H6VRdHC7DoKRMfxVXKscSPhonkd","NOc2dQKjzodYYKxJyqoc8fdInrd","I7HgdnqoioeMjHxKGTTc6cain3g","Ms65dld6BopClmxXdrDcE5cnnvg","VhESdLNDjoOPWdx2mdlc6fYpngf","C5dkdChbnopFjdxM2hQctjeOnOd","Zr0ndRqMMonUY9xB5wNceY2jnTg","DyDFdIx4doCgMGxCWPhck2Rznwc","LgDvdGG5oomKEbxGl0bcqyCzneb","W8PodKlrgoRaisxQeuZcXNBTnxe","EyAxdUoxDopn5Lx8RxzckSUlnfh","Z7p3dISREo55z4xqcBXcYhNtnHe","F74ZdLw1Qoc6bNx8v8Lcf4fgnYf","BBwMdttYKoXTwTxZ3K4cI7aUn6d","Uj04dDlyboQnbuxTxV2cpuw6ntg","HgPbdKDVzotBtwxcu7AcWNQyngd","GWVydfUGGoJOmnxrxnecbTY1nn8","PBT6dn0two76BcxmWrFc99jpnPh","BeKEdMJmvoJQz7xQy4fciarOnwf","FNXUd7bKOoMq9Ax2UiVctW0Qn29","AtQPdP7MLork3kxUpr1c8fgjnqh","P3nKd7CmloMpEvxVjhxcGeotnMb","Q6yPdrWvnotIw8x402TcPmvwnme","BIkydEw9cozdsexYaMIcIU2cnRg","Vh1rdmSKKoOkmXxbVjacBjDznVf","UTPmdkkRroVuPyxxJRnc02XanEc","NVqKdZ4LTod4sixsg6Lcay14nxd","NApKdoSiwocjZrxa0yMcxSKpn4K","KRmUdnlNvoXbgMxoMeRcxIyxnCf","Cwepdf74TobILFxQsnFcaztinjh","WjPkdbwtYouhJ3xNhzGcjq0zn4i","AO5Od0tWboYPdgxixb6cwbX5nhe","W4xbddCLcoC0q8xhZDlcnoM3nwf","F8f1ddG28og0VXxN2EjcaNQxnLA","GxoJdqJuooGbWZxDX8Ecj1Zwnzg","AVSXdRT0joUsrix8o6bcgNOfnOf","HuS1dH25QoVjlXxmY7dcRnVwnjh","SHyodWaLQoF2NZxyriRcM0Apn5d","UC4AdkmgvoHABAxjwBFcDbu0ngf","Rn78dytPco8gGdxPVNNcaX0pnle","FUvRdSCejoixFxxpZnCcfFtYnMg","Zm1YdKTd5ofUT2xyl66cVPwVnRg","VEUrdvEHAoUSSQxtoCQcPVLNnbb","WLJCdBy8Wox7EpxQC74c0vBPnRf","V583drcSNo0DE4xqwbJc3Slanze","BVG1d1Eufo9rjQxs8qZcceiyn5c","QipMdWQ5moSGDUxnAo9cAcGjnsd","VtmjdVc03o7AaUxAfIAcDITEndg","MxZwdtDLWorrO7xqjS2cvclAnth","SnG8dMdAhowOaGxX0xlckIExnm9","LXpVdy4YnoGTHCxDY9TctQyBnWd","F6yvdGvT1orfrTxQXSQct2Lmnb0","G8oCdlC6WoziOJx7WCUcqb3Mnjc","WbxKdlty0o7iKjxASP9cGLjknqe","Mdm0dUcDhobbb7xfyhJcmtwRn5f","MaUidQJk8ovCRYxw37Dcpe3rnXb","QBGDdT6CSoMjtZxx91lcNFZSnjm","O0AGdIihLoBNX4xhPi1ccMoPn4g","V3BTdGPPXo9yNOxZKercDWmAnuf","Uu0QdvwG1oa1cpxxaDgc7qTkn0e","Bbr9d0dc1oavOKxsxGzc0Fvgn9e","RFQyd5i3NohaNixA8jocXB2ynzc","HZmUdMagEoulAbx5hKgcr3LRnQP","LHBCdeDpSocUA4xjzXickH2gncg","TuwIdLYQZo93D9xAH4ec3yTOnLb","O4X5dkXf0oo54sxjs8YcSK2Wn1e","DDjqdx4D1opYaCxcZ1ecl3P1nud","SfqBdKrO1oJ68wxbPFicLOnunEe","KlxWdfmeAoGLGjxiYoucn6wMnFb","Q2RDdmnSOo9pBLxipWHcUSSBn0g","NtivdeFTlop98lxfjrYcZ26On7g","IYQ8dcDQ0oQ5qIxjtOHc6Eognhb","K3PVdSxk4oG9A9xYqUHchCpinSg","X8egdfBKkoBv1LxvJPKc2hwInHg","IZUJdBvnUoNFaBxwaCgcwLIDnEb","MDKldndUZoOFrzxkCROcIQ15nZf","HKAmdBfnGojT3TxoPn0czoQYnUc","L7fVdpYVdo3Nbax98zFcwulbnme","N4VFdDLMGo75wExQKlycJwLOnzb","IAI5dQy8SoBZYUxisD6cSCGHnRg","XPeBdEVnuoprr9xTIaKcs1gJnaf","OKp8dE7ZboSkevxyBCBcT9Omnv7","ERrqdQuLJod1WIxc6lhc7oFDnBc","MSUmdp5YkojE8jxFyEVcItFunsh","Ar5fdJJlKosYnyxIb82cm6n6n0c","VdrvdNTXRov87axsXLXc4sJVnrc","Ao5BdcQkVopwGHxlA59cDDC0ncd","WYk7d9RyVoutJMxeBeKcvDA0nqf","GNY6duTyJoBBOkxFedEckLUGnFL","PSPUdOW2JoqiVKxHeb1ccqJ7nIb","Y4JWdWfNioaIZexJUA5cLDE5nmd","OtP6dUop7oNLXlxKRYscotgynwh","I5ZTdmogNoeIIBxHmnmcXVHinhX","KWtkd87Lyo3AfYxDOcccQ2nKnGA","VkYfdw5apopWOzxOsEzcRbyHnic","PW7ndu1r2oW7SSxoaBtchTZondh","HEYOdWT8yoF0jpxFF4ccEIrCndb","RSrVdAu7boiN9OxPc9PcTq4WnQe","EGTzdseyBo0P4OxiB3Scxr1EnjF","AOyFdM88poUYEUxWOVVcrHFWnjl","WTE6d1b7HoQrRAxvaxfc91vUnKf","IPH6dfEDSoAFfrxiLIScLCVYnZb","DOokdJG20o2vl7xCYeNcc54TnBc","OWqtdjwwboLe1LxvIknc5oLVnfb","UTNydF03Po5fPTx7IjXclf4fnAh","PPf6dnUz8oJRKuxMSwJclNSnn8f","AueCdRWRmoQ7JWxOuXSc1UM1nJg","ZINodnYj9opI0xxXhnUc1aIfnvf","KV5QdpyilomYd1x0NPEctM0Mnbf","RtdPdYIsCoH67UxjJ0Mcx7lfnne","UvZrd0bjUo2BqLxjuNNcfM2VnIe","SPMadVHKMoh42yxujuPcghf8nFf","IjfRdCpyfo5Q5oxII4BcK0lQnnd","OkV7d6DWuoqezgxDwogc74UZnPb","RFWqdHN0QoLU4nxVf6Xc4msCnkM","Z0IzdWrHMocga4xIz26cQZXunlh","URSxdAbc4oSHNNxWdbWcA9cVnSd","FZrcdgtEdoxdBQxPEejcTQE7nme","WCNJdwtRTo9s8Dx5guXcmtXDnhf","C1awdejv3oFl4pxpXI8cjRufnhe","Dxjud5xyTo4MzWxVlpZce9WwnIc","TUqcd6PDJoATZAxFuAecaWBDn2g","O2hVdHSjQoZTx8xZ6gVcIQG9n3b","COG9dyYk3ouXN9xFRiecHoV8nBb","O1FJdM2FroyKtkxenhwcn0xNngb","Eyovdf5yHoblYFxoawyccKCSn7f","NxpcdIGXloWwB9xUGarczempndf","WTrSdOyVVoeQorxSpnPcgONVnof","QHWFdkU6VoywzJxvywPcxNdXnFg","SNBadDtWAodMtnxf58ac5KTQnob","CB8Td2cp1oyd1bx7yitc4PpUnMg","U3qZd3iPHohc7PxBog5ckFh6nGK","G7fYdSv7voFv50xA8R7cRkmenRb","UrvQdFrQ9o1oQ1xA2lmcuRzfnKe","U5OKdpSXcoYqwgxnay7clKOGnKd","GgJcdp9KyoHwtSxp5hEcm1x6nLc","Z0WmdMNEhocMZmxPDOscNs5YnEf","E70QdmDxlozDc8xW2QwcxcnjnbP","RxI1dyvGxoj1OgxxoXHcNVsAn6c","W7dId26JSo1KRnxJctocopAQnsg","KXmfdBi8dobmExxsBPRck1iMned","KEtAdKDlMoyylWx3O9kckFzGnGh","GE35d7rdtoW14NxRJHrckSzvnQg","LxxRdWhbboIz5JxL6KqcGUmenGg","SDx6dH0BioQXYsxhbeoc7t7rnu1","DmU4dd8mJoreosxdUpecdJIfnCg","Q86GdehZaop1b7x8QuHcD9Ehnbc","BcRfdPfMRoyGivxuokTcey95n8c","JYZSd1b1foNMbox8Cr8c9pQznce","LrP3dSw4dobtFxxy3xFcfquNnPb","Xzigdi1Mpo2bD7x9WolcAk1pnKd","NF8jdFvKcoXOrSxKTeucM8NPn1d","FrIgd2hliosAq5xfrhtcSRyMnhg","JB4IddLs9oeyTUxiTLecbBn3ndd","WHY4dEsMxo25XBxjsqWch12Rn2g","AKpidGEAuoDhv8x0RdBcJ1oInJe","WQypdQZdZorZpnxy840cFXolnRe","EatHdu9UeoxhH2xzqLicTmninuh","FLBVdCQcLoucYHxOcBpcV2aTnee","SdqFdfILYoKUwOx5T3Tckr07n7d","YTUEdqxR1ocDVxxiPcpchzcMnLe","Mr4tdEEZWoyMERxUymqc5ig6nIb","TGlcduaT8oj0LfxnOxDcArHEnVf","CpLRdjsGworsKuxOD3mcy5ann4N","RRkSdUJ26oPiCexn43ZcrgZ3nxb","D8QGd10troyQSXxWEorc898snkY","ZAtpdNfv4owVvQxT7elc9UcUn3g","MbgydKeNLo1wmMxLcWlcyr4unUe","UjQUd6HYvo34skxrIotcEgPNnEe","BpUvd8Py6o1JAkxB8qecWzBAnLb","Ep5BdE0P0oHyw5xg4O1cXZY9nXd","J3R1dX8iKod3jExY10pcHGFVndd","KNcfdywIJowpGrxSKOfcrmllnN2","Q9dCd3JxSoV2M0xvdiscBhbTnP1","JPKod0yumoorYNxIM7xcAYRPnZg","Ahxrd9u28osysnxW3duc05pXnCb","JQuXdpLTtoSKa0x4ScjcEqCtnzc","Q4pzdmvNwol7xFx0xcLcQ1ZInef","XuoMdMvIqoSgQmx09zncNMFcnNf","Jrz7daOGioEdJExwEHkcKBIwntj","NDRfdgQB7ocOeHxCHyecsGxxnKe","NVRadfTpvoVBxFxDT7zcukeWn6e","Qg0zdKuzfo20y6xpmpfcXI6on3f","AbRKdSsPqoVpSwxpTeVcMaaan0e","XdG3dN8NCoiZqTxXj2ycMrZUn9d","Q7ECdYR78otF8bxkKOXcxeYrnnf","T9IWdxmEyoKbjdx3gv8c8ilOnvd","UmaSd41gqoEqaLxBolrc7mt2nOe","KOa3d72kfo0HpRx3vMDcWHkMnye","TMVMd312qoexIJx9bVzcRsJgnFg","E8P0d7BPDoGNboxhOcxcfcuJnqf","Gj3EdaZ2so1lWrxPdz1cxk9cn4B","YWhOdAtXdow1StxlSADcYQzdnec","GOCTd21WyokoyyxPeWGc7us6nsd","DwLldB9Pzo6XGqxfdUbcy4xDnlc","YSV2dehf0oAp3SxlZA6cL9cUnBe","JwtGdQpvVotmH8xHS1vcP14pnJh","LIOZdCKhpozcGKxikwIcdarJn3f","GXScd86njo1h7rxrLnGcdrUTnDd","GLhtdxikaoKXyWxE1SzcO2GAnfh","DJPpd1WSuoNqo2xVfFlcTS9mnHf","Uec3dmq7hoEG5exczxbcTfsYnkb","AVI4dUJRJoFMAlxQlUycUWqZneg","LMkCdtlO3oa401xzATHcIseWnYb","RjjldbS2eoTtqrx22YAcOo7Un1c","MnTodsEACoxaKYxs8lJcZeAQnoc","Sl6GdB13IoO1srxcXIRcWX5JnGb","JzOHdZ1vVoiH6jxSAO5cmqtFnGc","LPQAdLsqDo86jxxMRe0cHBLYnfh","NL3cdZxIToPsQFxDBAXcHj9WnQf","PmlTdYjYionzRTxescEcS1xQneg","E9c2dBYP7oueGWxBhyLcUKJknCe","KAEZd0panoI8RfxDV5acPA7lnHd","GhyYdKG6qomGzixqXUIcYaFZnf5","K4GRdqdjtoJ6nQxV9xbc9jQBnec","BJZOdr74Oo8m0px6WWKcFcIDnsc","IRHrdUASgo7Tgox945cc37rqnYd","M6drd3Lf5oEiT4xhPVgcKmYmn4e","VAtld72ohonR92xW3CLcpZnjnVb","OHVfdCOL2oYoMIxgJzGc9ziDnsc","SVqwdGvVCoMyZBxLgmQc9UeAnab","MXt0dHaJRoaWuoxxvo7cPTSynlg","RIBXds0iWoz9qCxHxGSch0NknEb","UP2CdsPVPoZV7TxmjCDcNrImnKh","XD4qd2XRwo6VgGxHTywcW0FZn1c","BHwEdc1m2o4ttLxnZ42crb7Sndf","YN4gdc0oJoXCQMx2Fqic92qYnud","RZXNd0vSooiyHLxRnwycehtPndf","SN2Jd0BYXoVadHxOaw2cJlfwnXb","TfHVdPOQBo8SXpxv7urcZoXCnUg","C0mqdOOYYo1cKIxBpvUcSxtCnqb","DzEDduBMooy25IxtlTtc9klvn6b","OmE4dRSTDoVY00x90RBcLEfvnoe","D1kGdi92VoBUkOxk9skcBIrdnHf","TmSvdju2vo7wAsxzbqmcdl9dnng","SXKSdzwHKoyWUjxYXozcIVBZn1c","KTOSd1CA4o8x9mxLcw9cl9byngg","SAIydM1Zio73b8xsjTwctqjpnh3","J2fIdmRlIokCy3xZlllcT4p2nWe","A1rtd4Kfio7IRKxVkogcw42cnUb","XchfdM743oEJMjx6V6ucvqGxnse","K25tduiz2o9IHQxidBLcwwtOn4d","YiAgdqbj5olLZZxDzYqco2xpnHd","EHc4dRk78ocojzxSEZ0cntc1nOb","W4RCdcYEWovS2zxPQA7clcCGnNf","Wg2jdRKypoN5e8xnDgvc5gbqnXe","EWtNdL1vGoD0AqxgoHRc1m8PnGd","C4vhdtpHDoVfXjxCFvdciAYFnqe","FZQIdsYMIoCrEZxuxMIc19Bbnzb","FlBYdUnx8oJY1dxYKx6cXsYanNf","GjwOdDTCEoUx7pxkQSLcQEbqnAg"],"page":{"elements":[{"text_run":{"content":"团队空间","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1}},"parent_id":""},{"block_id":"GFzEdOro6oPH1mxZmk0c8NIIn6e","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"我们现在将进行项目第三阶段 —— 团队空间的开发，让项目能够面向 B 端（企业）提供服务，比如作为团队共享素材、团队活动相册等，增强项目的商业价值。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"TH3fdC8fVo8nMMxJCM7clU0EnBb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"本节先给项目增加团队共享空间的能力，大纲：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OnjVdDAHbouo54xasSTcG62cnbg","block_type":12,"bullet":{"elements":[{"text_run":{"content":"团队空间需求分析","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"CNhSdvqm2oF9NMxrxcqcsyTSndh","block_type":12,"bullet":{"elements":[{"text_run":{"content":"团队空间方案设计","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"JPQpd9QJwoxQwqx8m0DcKPWonec","block_type":12,"bullet":{"elements":[{"text_run":{"content":"团队空间后端开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"GDhsdSY84oZMHlxsT1YcXhKansf","block_type":12,"bullet":{"elements":[{"text_run":{"content":"团队空间前端开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Vm9fd7EHyoYnnqxYQb1cHDpJnTc","block_type":3,"heading1":{"elements":[{"text_run":{"content":"需求分析","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"TZDHdOciionI6QxZbNAcLNlcnxg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"之前我们已؜经完成了私有空间模块，团队空间和它类似，我们可以拆分为 4 个需求：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Mg0Xd56SnoeDyLx2YYrcZFoDnmg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）创建团队共享空间","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GylXdaZsJoLVXbxOQEUcgQacnOb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"用户可以创建 最多一个 团队共享空间，用于团队协作和资源共享，空间管理员拥有私有空间的所有能力，包括自由上传图片、检索图片、管理图片、分析空间等。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"B9LcdcLDsoZneuxdEswcyq8CnUb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）空间成员管理","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"RW2Pd2rbeoUNgqxHxJvc3pGGnwf","block_type":12,"bullet":{"elements":[{"text_run":{"content":"成员邀请：空间管理员可以邀请新成员加入团队，共享空间内的图片。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"XDUndrUu7o5yxexHMFDcLuuMnLh","block_type":12,"bullet":{"elements":[{"text_run":{"content":"设置权限：空间管理员可以为成员设置不同的角色（如查看者、编辑者、管理员），控制成员的权限范围。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"QCygdGNSAonFoAx8cPeckfkEnod","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）空间成؜员权限控制：仅特定角色的成员可访问或操作团队空间内的图片。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"F2GwduW6woVkCAxJHiZcN60Pntb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"4）空间数据管理：؜考虑到团队空间的图片数量可能比较多，可以对特定空间的数据进行单独的管理，而不是和公共图库、私有空间的图片混在一起。    ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZhdrduzPVodkMaxoakjc9FY7n6e","block_type":3,"heading1":{"elements":[{"text_run":{"content":"方案设计","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"U3L2dCN3XofO33xCqF1cKJxXnoc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"让我们先依次分析上述需求，并思考对应的解决方案。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"KE7hdxKsxo310UxT3jVcHEU7n3d","block_type":4,"heading2":{"elements":[{"text_run":{"content":"创建团队共享空间","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Mm9mdRDHYofmStxd9C6cwlytnEc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"之前已经开发了؜空间模块，团队空间可以直接复用私有空间的大多数能力。因此可以给空间表新增一个 spaceType 字段，用于区分私有和团队空间。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"U0SNdaFnvokruyxjzJ3cZyTcnNd","block_type":14,"code":{"elements":[{"text_run":{"content":"ALTER TABLE space\n    ADD COLUMN spaceType int default 0 not null comment '空间类型：0-私有 1-团队';\n\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"CREATE INDEX idx_spaceType ON space (spaceType);","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":56,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"EEKydYxVYoOfPHxNGpzcdqVenod","block_type":4,"heading2":{"elements":[{"text_run":{"content":"空间成员管理","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"QuxsdivinoNQJ7xTbyZcnZL9nLH","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、业务流程","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"LOFbdLi4so5apex7GdscWAtKnEd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"为了让项目更容易扩展，减少原有代码的修改，我们约定 只有团队空间才有成员的概念。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"NvX3dQc4dode4kx5DA3ctVpkntd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）成员邀؜请：空间管理员可以直接输入成员 id 来添加新成员，无需该用户确认，这样可以提高开发效率。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Y9eYdB7FdoA0pWxq5Dvc1H5CnRc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）设置权؜限：空间管理员可以为已加入成员设置不同的角色，控制成员的权限范围，类似于编辑成员信息。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"LoQEd3EWHo46sxxr5ijcfljqnvc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、库表设计","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"DenedOcvkoDy3kxcgZac35UNnUb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"由于空间和؜用户是多对多的关系，还要同时记录用户在某空间的角色，所以需要新建关联表：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Axr4dqa6foQk6IxjQjScChFfn4b","block_type":14,"code":{"elements":[{"text_run":{"content":"-- 空间成员表create table if not exists space_user\n(\n    id         bigint auto_increment comment 'id' primary key,\n    spaceId    bigint                                 not null comment '空间 id',\n    userId     bigint                                 not null comment '用户 id',\n    spaceRole  varchar(128) default 'viewer'          null comment '空间角色：viewer/editor/admin',\n    createTime datetime     default CURRENT_TIMESTAMP not null comment '创建时间',\n    updateTime datetime     default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP comment '更新时间',\n    -- 索引设计UNIQUE KEY uk_spaceId_userId (spaceId, userId), -- 唯一索引，用户在一个空间中只能有一个角色\n    INDEX idx_spaceId (spaceId),                    -- 提升按空间查询的性能\n    INDEX idx_userId (userId)                       -- 提升按用户查询的性能\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":") comment '空间用户关联' collate = utf8mb4_unicode_ci;","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":56,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"MbJPdOjKRofS7Gx5jUbcDFlsnnh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"注意几个细节：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Qr6KdYlJ3ojoW0xUDpUcLTQwnrc","block_type":13,"ordered":{"elements":[{"text_run":{"content":"给 spaceId 和 userId 添加唯一索引，确保同一用户在同一空间中只能有一个角色（不能重复加入）。由于有唯一键，不需要使用逻辑删除字段，否则无法退出后再重新加入。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"1"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Lx3CdY8SGoCRjaxDwMicW97DnNb","block_type":13,"ordered":{"elements":[{"text_run":{"content":"给关联字段添加索引，提高查询效率","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"YXq8dSJ7ToMz6uxCnIZcRlHqnrf","block_type":13,"ordered":{"elements":[{"text_run":{"content":"为了跟用户自身在项目中的角色 userRole 区分开，空间角色的名称使用 spaceRole","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"YhtmdEAGzo6sXdxjMpscw0xKndc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"为保证逻辑的统一，创建团队空间时要自动将创建人作为空间管理员，保存到空间成员表中。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"WperdjgpOoVK3oxxI2acOJIdnwg","block_type":4,"heading2":{"elements":[{"text_run":{"content":"空间成员权限控制","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"TFojdQfoUo85LLxua8icNDqLnJd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"仅特定角色的成员可访问或操作团队空间内的图片。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"FfYmdpEdaoHRcdxEeLhc26manWc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"团队空间的权؜限管理可比私有空间的权限复杂多了，除了创建人外还有其他成员，涉及到查看图片、上传图片、管理空间图片、管理空间等多种不同的权限。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BAREdFqHKo6YUix20d7cKhi4nqx","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、RBAC 权限控制","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Wpj3dRDAnoaSHIxAhiQcGZDknxb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"对于复杂的权限控制场景，我们可以采用经典的 RBAC 权限控制模型（基于角色的访问控制，Role-Based Access Control），核心概念包括 用户、角色、权限。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"N6vQdUwXBovzfnx57AQcctQQnsd","block_type":12,"bullet":{"elements":[{"text_run":{"content":"一个用户可以有多个角色","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"PBJbdKSGKoEMz6xckO5ceu6bnbg","block_type":12,"bullet":{"elements":[{"text_run":{"content":"一个角色可以有多个权限","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"WacHdLjsOoc3SEx7mehcxiP7nOb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"这样一来，就可以灵活地配置用户具有的权限了。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"PxLpd9G0OotMP9xWR3McgajFnKX","block_type":27,"image":{"align":2,"height":938,"token":"ZYTnbUflwok8ZxxYInEcko1lnqb","width":930},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Jz01drsYWoQ5wuxw1MncXXo7nec","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"一般来说，标准的 RBA؜C 实现需要 5 张表：用户表、角色表、权限表、用户角色关联表、角色权限关联表，还是有一定开发成本的。由于我们的项目中，团队空间不需要那么多角色，可以简化 RBAC 的实现方式，比如将角色和权限直接定义到配置文件中。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"K3NUdD6m6oA0GdxXAR3cHy8dnxd","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、角色和权限定义","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Ba8BdmmDvoZpP6xU8Sxcg9ugnLh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"本项目的角色：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"CU36dk9NLoc3ycx1JIUcALAMnge","block_type":30,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","sheet":{"token":"MyYvs08R6hOeLktIeLjciQv1nnh_gSgenH"}},{"block_id":"OFLnd6ElXomnlDxhLlMcn3ronXe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"本项目的权限：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"DUbvd7U8xo3b1TxZJIycxqPBnrc","block_type":30,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","sheet":{"token":"MyYvs08R6hOeLktIeLjciQv1nnh_AL4gRB"}},{"block_id":"ARzBdN5oJozShBxdKM8cvCXDnFf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"角色与权限映射：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"YsUYdTnmZotnuRxzppZcfmqXnCh","block_type":30,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","sheet":{"token":"MyYvs08R6hOeLktIeLjciQv1nnh_CUDalS"}},{"block_id":"V1oMdly92omsLwxYXZlcPxwDnrA","block_type":5,"heading3":{"elements":[{"text_run":{"content":"3、权限校验实现方案","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"NegSdozHho7jukx6nN9cDG8YnR3","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"RBAC ؜只是一种权限设计模型，我们在 Java 代码中如何实现权限校验呢？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OrjldrCFeo6IEZxy3nvcwjamnVc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）最直接的؜方案是像之前校验私有空间权限一样，封装个团队空间的权限校验方法；或者类似用户权限校验一样，写个注解 + AOP 切面。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZtKydiJDOofsyyxBjQIcS6sknli","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）对于复杂؜的角色和权限管理，可以选用现成的第三方权限校验框架来实现，编写一套权限校验规则代码后，就能整体管理系统的权限校验逻辑了。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"WsOYdHa2gou1A0xDWJPcQtRHnyc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"其实在本项目中，由于角色和权限不多，采用方案 1 实现会更方便一些，我也建议大家优先选择这种方案。方案 2 的代码量虽然未必比方案 1 少，但是会让整个系统的权限校验逻辑更加清晰，为了让大家后续能够应对更复杂的权限管理需求，此处使用方案 2，并选用国内主流的 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"权限校验框架 Sa-Token","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fsa-token.cc%2Fdoc.html%23%2Fstart%2Fexample"},"strikethrough":false,"underline":false}}},{"text_run":{"content":" 实现。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"PJmUddSQZog4FZxxTL9chEq7nmc","block_type":4,"heading2":{"elements":[{"text_run":{"content":"空间数据管理","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Kdtbd80C2oHZjFxBtsmc2zsenkh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"考虑到团队؜空间的图片数量可能比较多，可以对特定空间的数据进行单独的管理。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"TqZddGBEEoU9qzxlnHpcK25UnSd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"如何对数据进行单独的管理呢？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZeesdTavIozw2uxuphkcdfVSnde","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、图片信息数据","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"GO3sddPlDoYqMWxFVDhcNzLsnTh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"可以给每个团队空间单独创建一张图片表 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture_{spaceId}","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，也就是分库分表中的 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"分表","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，而不是和公共图库、私有空间的图片混在一起。这样不仅查询空间内的图片效率更高，还便于整体管理和清理空间。但是要注意，仅对旗舰版空间生效，否则分表的数量会特别多，反而可能影响性能。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ILUUdSFD2owiwpxLaB0cz3ePnXe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"注意，我们要实现的，还不是普通的静态分表，而是会随着新增空间不断增加分表数量的动态分表，会使用分库分表框架 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"Apache ShardingSphere","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fshardingsphere.apache.org%2F"},"strikethrough":false,"underline":false}}},{"text_run":{"content":" 带大家实现。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"B7lvd8oVdoNsL2xenFDcIVySnCc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、图片文件数据","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"YUiudqyDAolN8Rxv4Tdc4Qd1nge","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"已经将每个؜空间的图片存到不同的路径中了，实现了隔离，无需额外开发。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Vfasd6JpQoflThxx83jcMUkCnMf","block_type":3,"heading1":{"elements":[{"text_run":{"content":"后端开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"DndJd1YU8oHPOVx00mDcGn1WnQf","block_type":4,"heading2":{"elements":[{"text_run":{"content":"创建团队共享空间","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"JgxhdtBgzoeJLSxHojmcNSZDnpb","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、数据模型","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Fd2AdOb8no8bFUxNdDwc9nh2n6f","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"Space、؜SpaceVO、SpaceAddRequest、SpaceQueryRequest 补充 spaceType 字段：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"WFYpdVU7Jov432xyKQKcRJY3njb","block_type":14,"code":{"elements":[{"text_run":{"content":"/**\n * 空间类型：0-私有 1-团队\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" */private Integer spaceType;","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"GhFJdfZnbovMbfxOyFGcahAdnFh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"定义空间类型枚举：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"TVPDdIAu0o8zkHxluRzcu6Jondd","block_type":14,"code":{"elements":[{"text_run":{"content":"@Getterpublic enum SpaceTypeEnum {\n\n    PRIVATE(\"私有空间\", 0),\n    TEAM(\"团队空间\", 1);\n\n    private final String text;\n\n    private final int value;\n\n    SpaceTypeEnum(String text, int value) {\n        this.text = text;\n        this.value = value;\n    }\n\n    /**\n     * 根据 value 获取枚举\n     */public static SpaceTypeEnum getEnumByValue(Integer value) {\n        if (ObjUtil.isEmpty(value)) {\n            return null;\n        }\n        for (SpaceTypeEnum spaceTypeEnum : SpaceTypeEnum.values()) {\n            if (spaceTypeEnum.value == value) {\n                return spaceTypeEnum;\n            }\n        }\n        return null;\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"SzbUdXmSSoCJApxor9NccMVgnob","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、新建团队空间","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"NSmjdXlAvoIez6xLilFctWBKnEh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"可以直接复用创建空间的方法，只需要做一些改动即可。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Bkr0dF2BEoq7axxXABDc0gjen3f","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）创建空间时为空间类型指定默认值：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GnWSdkOx5o8jGAxIKmTcwgu7nwc","block_type":14,"code":{"elements":[{"text_run":{"content":"// 默认值if (StrUtil.isBlank(spaceAddRequest.getSpaceName())) {\n    spaceAddRequest.setSpaceName(\"默认空间\");\n}\nif (spaceAddRequest.getSpaceLevel() == null) {\n    spaceAddRequest.setSpaceLevel(SpaceLevelEnum.COMMON.getValue());\n}\nif (spaceAddRequest.getSpaceType() == null) {\n    spaceAddRequest.setSpaceType(SpaceTypeEnum.PRIVATE.getValue());\n}\n// 在此处将实体类和 DTO 进行转换Space space = new Space();\nBeanUtils.copyProperties(spaceAddRequest, space);\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"// 填充数据this.fillSpaceBySpaceLevel(space);","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"UPo8dPRdTosVixxWjsCcurgfnse","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）validSpace 方法补充对空间类型的校验：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"QpBtdFznKowOUOx9LSJcJG1enAg","block_type":14,"code":{"elements":[{"text_run":{"content":"public void validSpace(Space space, boolean add) {\n    Integer spaceType = space.getSpaceType();\n    SpaceTypeEnum spaceTypeEnum = SpaceTypeEnum.getEnumByValue(spaceType);\n    // 要创建if (add) {\n        if (spaceType == null) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR, \"空间类型不能为空\");\n        }\n    }\n    // 修改数据时，如果要改空间级别if (spaceType != null && spaceTypeEnum == null) {\n        throw new BusinessException(ErrorCode.PARAMS_ERROR, \"空间类型不存在\");\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"EIqWdwVFOoeSpUxWqFPcZHidnYd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）限制每个普通用户仅能创建一个团队空间（管理员可以创建多个），由于普通用户也仅能创建一个私有空间，相当于 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"普通用户每类空间只能创建 1 个。","text_element_style":{"bold":true,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 因此，只要在判断是否已创建空间时，补充 spaceType 作为查询条件即可：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SNHPdiuk4oLdz1x4M15cYBSwnNd","block_type":14,"code":{"elements":[{"text_run":{"content":"Long newSpaceId = transactionTemplate.execute(status -> {\n    if (!userService.isAdmin(loginUser)) {\n        boolean exists = this.lambdaQuery()\n                .eq(Space::getUserId, userId)\n                .eq(Space::getSpaceType, spaceAddRequest.getSpaceType())\n                .exists();\n        ThrowUtils.throwIf(exists, ErrorCode.OPERATION_ERROR, \"每个用户每类空间仅能创建一个\");\n    }\n    // 写入数据库boolean result = this.save(space);\n    ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);\n    // 返回新写入的数据 idreturn space.getId();\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"});","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"GmKmd9sDeoJoXlxdCmscSaN7nns","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"当然，这里؜的逻辑你可以自由调整，比如不允许用户创建团队空间，需要联系管理员或付费开通。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"CI65d9yaVoBN5txeTwLcXHv8nSc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"3、查询团队空间","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"FZ51dKCbdoFDrjxS6GrcmKOMn8g","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"给 Spa؜ceService 的 getQueryWrapper 方法补充 spaceType 的查询条件：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IrWXdGAnHos8uGxnZmWcmhcLnNf","block_type":14,"code":{"elements":[{"text_run":{"content":"Integer spaceType = spaceQueryRequest.getSpaceType();\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"queryWrapper.eq(ObjUtil.isNotEmpty(spaceType), \"spaceType\", spaceType);","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"LLgcdGE1poAtlexQN2WcT18xnMd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"之后前端就能够按照空间类别获取空间列表了。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"KRVidyOPnos5L3xAoxVcckpdnhh","block_type":4,"heading2":{"elements":[{"text_run":{"content":"空间成员管理","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"OEvcdZfcoohQsKx7pkYcu4ZcnRh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"空间成员管理的开发比较简单，其实就是 “增删改查”。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IUiyd6F18orQ5bxfRLccoQulnjh","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、数据模型","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"TIGud9uXUo3BnRxVfuRchmFpn2d","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）首先利؜用 MyBatisX 插件生成空间成员表相关的基础代码，包括实体类、Mapper、Service。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Tn43dO6DdoPeiBxXbEycBdCmnHm","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"用户模块中有讲解详细流程，此处不再赘述。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"D7yldYCrnoTrpbx1x9ecG5QYn2b","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）每个操作都需要提供一个请求类，都放在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"model.dto.spaceuser","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包下。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IHx9dZ2sSoHpV4x4j3wcnsCCneQ","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"添加空间成员请求，给空间管理员使用：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"TUbsdV0B4oe37vxau35c3v41nNf","block_type":14,"code":{"elements":[{"text_run":{"content":"@Datapublic class SpaceUserAddRequest implements Serializable {\n\n    /**\n     * 空间 ID\n     */private Long spaceId;\n\n    /**\n     * 用户 ID\n     */private Long userId;\n\n    /**\n     * 空间角色：viewer/editor/admin\n     */private String spaceRole;\n\n    private static final long serialVersionUID = 1L;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"HueZdOja0oV7FexesDEc4BFLnYe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"编辑空间成؜员请求，给空间管理员使用，可以设置空间成员的角色：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZlzbdSbBcoc0TbxBf4Wccq8pnmh","block_type":14,"code":{"elements":[{"text_run":{"content":"@Datapublic class SpaceUserEditRequest implements Serializable {\n\n    /**\n     * id\n     */private Long id;\n\n    /**\n     * 空间角色：viewer/editor/admin\n     */private String spaceRole;\n\n    private static final long serialVersionUID = 1L;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"YzxQdu2J7oYlQIxZ9WgclYKvnNc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"查询空间成员请求，可以不用分页：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GcdBdVKedoKcZSxYRQ1cLHOPn2d","block_type":14,"code":{"elements":[{"text_run":{"content":"@Datapublic class SpaceUserQueryRequest implements Serializable {\n\n    /**\n     * ID\n     */private Long id;\n\n    /**\n     * 空间 ID\n     */private Long spaceId;\n\n    /**\n     * 用户 ID\n     */private Long userId;\n\n    /**\n     * 空间角色：viewer/editor/admin\n     */private String spaceRole;\n\n    private static final long serialVersionUID = 1L;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Rggadtk0yo0u7uxB4u8csO31nsg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"model.dto.vo","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 下新建空间成员的视图包装类，可以额外关联空间信息和创建空间的用户信息。还可以编写 SpaceUser 实体类和该 VO 类的转换方法，便于后续快速传值。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OLeydpCVHof7r0xry92ckRkEnJe","block_type":14,"code":{"elements":[{"text_run":{"content":"@Datapublic class SpaceUserVO implements Serializable {\n\n    /**\n     * id\n     */private Long id;\n\n    /**\n     * 空间 id\n     */private Long spaceId;\n\n    /**\n     * 用户 id\n     */private Long userId;\n\n    /**\n     * 空间角色：viewer/editor/admin\n     */private String spaceRole;\n\n    /**\n     * 创建时间\n     */private Date createTime;\n\n    /**\n     * 更新时间\n     */private Date updateTime;\n\n    /**\n     * 用户信息\n     */private UserVO user;\n\n    /**\n     * 空间信息\n     */private SpaceVO space;\n\n    private static final long serialVersionUID = 1L;\n\n    /**\n     * 封装类转对象\n     *\n     * @param spaceUserVO\n     * @return\n     */public static SpaceUser voToObj(SpaceUserVO spaceUserVO) {\n        if (spaceUserVO == null) {\n            return null;\n        }\n        SpaceUser spaceUser = new SpaceUser();\n        BeanUtils.copyProperties(spaceUserVO, spaceUser);\n        return spaceUser;\n    }\n\n    /**\n     * 对象转封装类\n     *\n     * @param spaceUser\n     * @return\n     */public static SpaceUserVO objToVo(SpaceUser spaceUser) {\n        if (spaceUser == null) {\n            return null;\n        }\n        SpaceUserVO spaceUserVO = new SpaceUserVO();\n        BeanUtils.copyProperties(spaceUser, spaceUserVO);\n        return spaceUserVO;\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"FUugd5KiioiezwxQ8kscLLuRnkd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"4）在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"model.enums","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包下新建空间角色枚举：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"PYy0dBjNHoIVyVxjjmvch8K5nzb","block_type":14,"code":{"elements":[{"text_run":{"content":"@Getterpublic enum SpaceRoleEnum {\n\n    VIEWER(\"浏览者\", \"viewer\"),\n    EDITOR(\"编辑者\", \"editor\"),\n    ADMIN(\"管理员\", \"admin\");\n\n    private final String text;\n\n    private final String value;\n\n    SpaceRoleEnum(String text, String value) {\n        this.text = text;\n        this.value = value;\n    }\n\n    /**\n     * 根据 value 获取枚举\n     *\n     * @param value 枚举值的 value\n     * @return 枚举值\n     */public static SpaceRoleEnum getEnumByValue(String value) {\n        if (ObjUtil.isEmpty(value)) {\n            return null;\n        }\n        for (SpaceRoleEnum anEnum : SpaceRoleEnum.values()) {\n            if (anEnum.value.equals(value)) {\n                return anEnum;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 获取所有枚举的文本列表\n     *\n     * @return 文本列表\n     */public static List<String> getAllTexts() {\n        return Arrays.stream(SpaceRoleEnum.values())\n                .map(SpaceRoleEnum::getText)\n                .collect(Collectors.toList());\n    }\n\n    /**\n     * 获取所有枚举的值列表\n     *\n     * @return 值列表\n     */public static List<String> getAllValues() {\n        return Arrays.stream(SpaceRoleEnum.values())\n                .map(SpaceRoleEnum::getValue)\n                .collect(Collectors.toList());\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"MUD0dHhhCoqMPJxitjHcs0N3nJc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、基础服务开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"FEngdsm2Do1BvyxrRqMcpJ6Inzh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"可以参考图؜片服务的开发方法，完成 SpaceUserService 和实现类，大多数代码可以直接复用。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"PZy5dkKzzoguZZx7cnqchmcyn6e","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"我们主要开发下列方法：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"McXidxra9otN1Jxrda5coUpxnqd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）添加空间成员：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"TN0Vd57RioS6aDx3uE3cBO5fnRT","block_type":14,"code":{"elements":[{"text_run":{"content":"@Overridepublic long addSpaceUser(SpaceUserAddRequest spaceUserAddRequest) {\n    // 参数校验\n    ThrowUtils.throwIf(spaceUserAddRequest == null, ErrorCode.PARAMS_ERROR);\n    SpaceUser spaceUser = new SpaceUser();\n    BeanUtils.copyProperties(spaceUserAddRequest, spaceUser);\n    validSpaceUser(spaceUser, true);\n    // 数据库操作boolean result = this.save(spaceUser);\n    ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);\n    return spaceUser.getId();\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"HlpAdMIvDopb1vx6aogczCpSn4d","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）校验空间؜成员对象，增加 add 参数用来区分是创建数据时校验还是编辑时校验，判断条件是不一样的。比如创建成员时要检查用户是否存在。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IMFqdb5q0o0xb0xsVOAcCTBHnos","block_type":14,"code":{"elements":[{"text_run":{"content":"@Overridepublic void validSpaceUser(SpaceUser spaceUser, boolean add) {\n    ThrowUtils.throwIf(spaceUser == null, ErrorCode.PARAMS_ERROR);\n    // 创建时，空间 id 和用户 id 必填Long spaceId = spaceUser.getSpaceId();\n    Long userId = spaceUser.getUserId();\n    if (add) {\n        ThrowUtils.throwIf(ObjectUtil.hasEmpty(spaceId, userId), ErrorCode.PARAMS_ERROR);\n        User user = userService.getById(userId);\n        ThrowUtils.throwIf(user == null, ErrorCode.NOT_FOUND_ERROR, \"用户不存在\");\n        Space space = spaceService.getById(spaceId);\n        ThrowUtils.throwIf(space == null, ErrorCode.NOT_FOUND_ERROR, \"空间不存在\");\n    }\n    // 校验空间角色String spaceRole = spaceUser.getSpaceRole();\n    SpaceRoleEnum spaceRoleEnum = SpaceRoleEnum.getEnumByValue(spaceRole);\n    if (spaceRole != null && spaceRoleEnum == null) {\n        throw new BusinessException(ErrorCode.PARAMS_ERROR, \"空间角色不存在\");\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Kff5dK5eyoRqXuxi78RcWF3QnPh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"还可以校验是否已添加该成员，可自行实现。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BOoFd894forkWnxPHnNcORFOnKe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）将查询؜请求对象转换为 MyBatis-Plus 的查询封装对象：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"NrYIdDaoootXL6x6qgfcTY9OnCd","block_type":14,"code":{"elements":[{"text_run":{"content":"@Overridepublic QueryWrapper<SpaceUser> getQueryWrapper(SpaceUserQueryRequest spaceUserQueryRequest) {\n    QueryWrapper<SpaceUser> queryWrapper = new QueryWrapper<>();\n    if (spaceUserQueryRequest == null) {\n        return queryWrapper;\n    }\n    // 从对象中取值Long id = spaceUserQueryRequest.getId();\n    Long spaceId = spaceUserQueryRequest.getSpaceId();\n    Long userId = spaceUserQueryRequest.getUserId();\n    String spaceRole = spaceUserQueryRequest.getSpaceRole();\n    queryWrapper.eq(ObjUtil.isNotEmpty(id), \"id\", id);\n    queryWrapper.eq(ObjUtil.isNotEmpty(spaceId), \"spaceId\", spaceId);\n    queryWrapper.eq(ObjUtil.isNotEmpty(userId), \"userId\", userId);\n    queryWrapper.eq(ObjUtil.isNotEmpty(spaceRole), \"spaceRole\", spaceRole);\n    return queryWrapper;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"QTCCdzIjqov7nwxZc5hcBU9gnk6","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"4）获取空间成员封装类，需要关联查询用户和空间的信息。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"QvXSdZWvcohbFdxbz73cSIOBnKc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"查询单个封装类：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"WjEudN3zyoyHYaxNjCccj45Mnhg","block_type":14,"code":{"elements":[{"text_run":{"content":"@Overridepublic SpaceUserVO getSpaceUserVO(SpaceUser spaceUser, HttpServletRequest request) {\n    // 对象转封装类SpaceUserVO spaceUserVO = SpaceUserVO.objToVo(spaceUser);\n    // 关联查询用户信息Long userId = spaceUser.getUserId();\n    if (userId != null && userId > 0) {\n        User user = userService.getById(userId);\n        UserVO userVO = userService.getUserVO(user);\n        spaceUserVO.setUser(userVO);\n    }\n    // 关联查询空间信息Long spaceId = spaceUser.getSpaceId();\n    if (spaceId != null && spaceId > 0) {\n        Space space = spaceService.getById(spaceId);\n        SpaceVO spaceVO = spaceService.getSpaceVO(space, request);\n        spaceUserVO.setSpace(spaceVO);\n    }\n    return spaceUserVO;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"HYMKdir26oPczvxzuNLcKhzCnQf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"查询封装类列表：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SwgjdlZCMol94nxNzl9crIEVnxb","block_type":14,"code":{"elements":[{"text_run":{"content":"@Overridepublic List<SpaceUserVO> getSpaceUserVOList(List<SpaceUser> spaceUserList) {\n    // 判断输入列表是否为空if (CollUtil.isEmpty(spaceUserList)) {\n        return Collections.emptyList();\n    }\n    // 对象列表 => 封装对象列表\n    List<SpaceUserVO> spaceUserVOList = spaceUserList.stream().map(SpaceUserVO::objToVo).collect(Collectors.toList());\n    // 1. 收集需要关联查询的用户 ID 和空间 ID\n    Set<Long> userIdSet = spaceUserList.stream().map(SpaceUser::getUserId).collect(Collectors.toSet());\n    Set<Long> spaceIdSet = spaceUserList.stream().map(SpaceUser::getSpaceId).collect(Collectors.toSet());\n    // 2. 批量查询用户和空间\n    Map<Long, List<User>> userIdUserListMap = userService.listByIds(userIdSet).stream()\n            .collect(Collectors.groupingBy(User::getId));\n    Map<Long, List<Space>> spaceIdSpaceListMap = spaceService.listByIds(spaceIdSet).stream()\n            .collect(Collectors.groupingBy(Space::getId));\n    // 3. 填充 SpaceUserVO 的用户和空间信息\n    spaceUserVOList.forEach(spaceUserVO -> {\n        Long userId = spaceUserVO.getUserId();\n        Long spaceId = spaceUserVO.getSpaceId();\n        // 填充用户信息User user = null;\n        if (userIdUserListMap.containsKey(userId)) {\n            user = userIdUserListMap.get(userId).get(0);\n        }\n        spaceUserVO.setUser(userService.getUserVO(user));\n        // 填充空间信息Space space = null;\n        if (spaceIdSpaceListMap.containsKey(spaceId)) {\n            space = spaceIdSpaceListMap.get(spaceId).get(0);\n        }\n        spaceUserVO.setSpace(SpaceVO.objToVo(space));\n    });\n    return spaceUserVOList;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"EN4QdSfQBoCVgixi3a9cC7Zpnoc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"3、接口开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"MzfVdVlDNobKWExSj0Ucf4OmnWb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"参考图片接؜口的开发方法，完成 SpaceUserController 类，大多数代码可以直接复用。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"DNB1d9UUZo5fM0xUY3CcVAGMncg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"需要开发的接口包括：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"MyWEdMnn1o54shxjufscdQz0nGg","block_type":12,"bullet":{"elements":[{"text_run":{"content":"添加成员到空间：仅拥有成员管理权限的用户可使用。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Gy2KdWRGkoKWnoxcjxLcKABNnFc","block_type":12,"bullet":{"elements":[{"text_run":{"content":"从空间移除成员：仅拥有成员管理权限的用户可使用。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"CZk5dVslJoF2JZx0DRHcC2vUnFe","block_type":12,"bullet":{"elements":[{"text_run":{"content":"查询某个成员在空间的信息：仅拥有成员管理权限的用户可使用。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Gn8CdUXSpostgHxIZxRcYtgvnnh","block_type":12,"bullet":{"elements":[{"text_run":{"content":"查询空间成员列表：仅拥有成员管理权限的用户可使用。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"DKsfdMrYCokUU7xn491cRLWDnad","block_type":12,"bullet":{"elements":[{"text_run":{"content":"编辑成员信息：仅拥有成员管理权限的用户可使用。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"RFk9daN3hoFJsIxq59PcWolJnic","block_type":12,"bullet":{"elements":[{"text_run":{"content":"查询我加入的团队空间列表：所有已登录用户可使用。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"YUTLdOEFUo4fVnx12E7c0y9gn3s","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"由于我们后续会使用统一的权限管理框架，这个阶段可以先只实现功能，不进行权限校验。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"KSmqdVpuYorFuRxtT6rc0frVnyc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"代码如下：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"UlXhdhX6eoVcJDxEHZ8ctTuKnMh","block_type":14,"code":{"elements":[{"text_run":{"content":"@RestController@RequestMapping(\"/spaceUser\")@Slf4jpublic class SpaceUserController {\n\n    @Resourceprivate SpaceUserService spaceUserService;\n\n    @Resourceprivate UserService userService;\n\n    /**\n     * 添加成员到空间\n     */@PostMapping(\"/add\")public BaseResponse<Long> addSpaceUser(@RequestBody SpaceUserAddRequest spaceUserAddRequest, HttpServletRequest request) {\n        ThrowUtils.throwIf(spaceUserAddRequest == null, ErrorCode.PARAMS_ERROR);\n        long id = spaceUserService.addSpaceUser(spaceUserAddRequest);\n        return ResultUtils.success(id);\n    }\n\n    /**\n     * 从空间移除成员\n     */@PostMapping(\"/delete\")public BaseResponse<Boolean> deleteSpaceUser(@RequestBody DeleteRequest deleteRequest,\n                                                 HttpServletRequest request) {\n        if (deleteRequest == null || deleteRequest.getId() <= 0) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR);\n        }\n        long id = deleteRequest.getId();\n        // 判断是否存在SpaceUser oldSpaceUser = spaceUserService.getById(id);\n        ThrowUtils.throwIf(oldSpaceUser == null, ErrorCode.NOT_FOUND_ERROR);\n        // 操作数据库boolean result = spaceUserService.removeById(id);\n        ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);\n        return ResultUtils.success(true);\n    }\n\n    /**\n     * 查询某个成员在某个空间的信息\n     */@PostMapping(\"/get\")public BaseResponse<SpaceUser> getSpaceUser(@RequestBody SpaceUserQueryRequest spaceUserQueryRequest) {\n        // 参数校验\n        ThrowUtils.throwIf(spaceUserQueryRequest == null, ErrorCode.PARAMS_ERROR);\n        Long spaceId = spaceUserQueryRequest.getSpaceId();\n        Long userId = spaceUserQueryRequest.getUserId();\n        ThrowUtils.throwIf(ObjectUtil.hasEmpty(spaceId, userId), ErrorCode.PARAMS_ERROR);\n        // 查询数据库SpaceUser spaceUser = spaceUserService.getOne(spaceUserService.getQueryWrapper(spaceUserQueryRequest));\n        ThrowUtils.throwIf(spaceUser == null, ErrorCode.NOT_FOUND_ERROR);\n        return ResultUtils.success(spaceUser);\n    }\n\n    /**\n     * 查询成员信息列表\n     */@PostMapping(\"/list\")public BaseResponse<List<SpaceUserVO>> listSpaceUser(@RequestBody SpaceUserQueryRequest spaceUserQueryRequest,\n                                                         HttpServletRequest request) {\n        ThrowUtils.throwIf(spaceUserQueryRequest == null, ErrorCode.PARAMS_ERROR);\n        List<SpaceUser> spaceUserList = spaceUserService.list(\n                spaceUserService.getQueryWrapper(spaceUserQueryRequest)\n        );\n        return ResultUtils.success(spaceUserService.getSpaceUserVOList(spaceUserList));\n    }\n\n    /**\n     * 编辑成员信息（设置权限）\n     */@PostMapping(\"/edit\")public BaseResponse<Boolean> editSpaceUser(@RequestBody SpaceUserEditRequest spaceUserEditRequest,\n                                               HttpServletRequest request) {\n        if (spaceUserEditRequest == null || spaceUserEditRequest.getId() <= 0) {\n            throw new BusinessException(ErrorCode.PARAMS_ERROR);\n        }\n        // 将实体类和 DTO 进行转换SpaceUser spaceUser = new SpaceUser();\n        BeanUtils.copyProperties(spaceUserEditRequest, spaceUser);\n        // 数据校验\n        spaceUserService.validSpaceUser(spaceUser, false);\n        // 判断是否存在long id = spaceUserEditRequest.getId();\n        SpaceUser oldSpaceUser = spaceUserService.getById(id);\n        ThrowUtils.throwIf(oldSpaceUser == null, ErrorCode.NOT_FOUND_ERROR);\n        // 操作数据库boolean result = spaceUserService.updateById(spaceUser);\n        ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);\n        return ResultUtils.success(true);\n    }\n\n    /**\n     * 查询我加入的团队空间列表\n     */@PostMapping(\"/list/my\")public BaseResponse<List<SpaceUserVO>> listMyTeamSpace(HttpServletRequest request) {\n        User loginUser = userService.getLoginUser(request);\n        SpaceUserQueryRequest spaceUserQueryRequest = new SpaceUserQueryRequest();\n        spaceUserQueryRequest.setUserId(loginUser.getId());\n        List<SpaceUser> spaceUserList = spaceUserService.list(\n                spaceUserService.getQueryWrapper(spaceUserQueryRequest)\n        );\n        return ResultUtils.success(spaceUserService.getSpaceUserVOList(spaceUserList));\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"UhOXdT5xno4tLnx1ztpcX6XcnHh","block_type":5,"heading3":{"elements":[{"text_run":{"content":"4、创建团队空间时自动新增成员记录","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"H1ZsdfjgkoFyVJxMedpcUubjnOq","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"根据需求，؜用户在创建团队空间时，会默认作为空间的管理员，需要在空间成员表中新增一条记录。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Zt30doUuPocplZxkYVEcVUokndh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"修改 ad؜dSpace 方法，在事务中补充插入空间成员记录：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"DJ6UdUCtQozMeLxDzZhcuvw0nRc","block_type":14,"code":{"elements":[{"text_run":{"content":"// 写入数据库boolean result = this.save(space);\nThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);\n// 如果是团队空间，关联新增团队成员记录if (SpaceTypeEnum.TEAM.getValue() == spaceAddRequest.getSpaceType()) {\n    SpaceUser spaceUser = new SpaceUser();\n    spaceUser.setSpaceId(space.getId());\n    spaceUser.setUserId(userId);\n    spaceUser.setSpaceRole(SpaceRoleEnum.ADMIN.getValue());\n    result = spaceUserService.save(spaceUser);\n    ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR, \"创建团队成员记录失败\");\n}\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"// 返回新写入的数据 idreturn space.getId();","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"FRMqdWOacoob5bx7guMcBqXjnZf","block_type":4,"heading2":{"elements":[{"text_run":{"content":"空间成员权限控制","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"JFyrdmwFhoIkGBxQkBaccgLcnHg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"引入团队空间后，需要؜给空间操作、图片操作、空间成员操作添加权限控制逻辑。为了简化开发，同时防止一些空间重要信息的修改冲突，空间操作（空间信息的增删改查）仍然复用之前私有空间的校验逻辑 —— 仅创建人可操作。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BjXRdmNFFozTYVx5dH2cfeo3nDc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"由于权限校验属于整个项目的公共服务，统一放在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"manager.auth","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包中。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OojCdjkaNoRPhUx9lyqcwHmvn9A","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、权限定义","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"TDcnddgYnosJ7VxkFtncXdKUnLc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"根据 RBAC 权限模型，需要定义角色和权限。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BytYdfngkoSGDVxpd3gcEdeRnWf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）此处选用؜ JSON 配置文件来定义角色、权限、角色和权限之间的关系，相比从数据库表中获取，实现更方便，查询也更高效。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Rqv7d7Ezyo3SawxvDzyc3Efwn86","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"resources/biz","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 目录下新建 JSON 配置文件 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"spaceUserAuthConfig.json","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"DvzTdZIFVoT5cCxvR4bcsV4HnBf","block_type":14,"code":{"elements":[{"text_run":{"content":"{\"permissions\": [{\"key\": \"spaceUser:manage\",\"name\": \"成员管理\",\"description\": \"管理空间成员，添加或移除成员\"},{\"key\": \"picture:view\",\"name\": \"查看图片\",\"description\": \"查看空间中的图片内容\"},{\"key\": \"picture:upload\",\"name\": \"上传图片\",\"description\": \"上传图片到空间中\"},{\"key\": \"picture:edit\",\"name\": \"修改图片\",\"description\": \"编辑已上传的图片信息\"},{\"key\": \"picture:delete\",\"name\": \"删除图片\",\"description\": \"删除空间中的图片\"}],\"roles\": [{\"key\": \"viewer\",\"name\": \"浏览者\",\"permissions\": [\"picture:view\"],\"description\": \"查看图片\"},{\"key\": \"editor\",\"name\": \"编辑者\",\"permissions\": [\"picture:view\",\"picture:upload\",\"picture:edit\",\"picture:delete\"],\"description\": \"查看图片、上传图片、修改图片、删除图片\"},{\"key\": \"admin\",\"name\": \"管理员\",\"permissions\": [\"spaceUser:manage\",\"picture:view\",\"picture:upload\",\"picture:edit\",\"picture:delete\"],\"description\": \"成员管理、查看图片、上传图片、修改图片、删除图片\"}]}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":28,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"LKsOdCFpmo5iCexhuyucLvCvnnh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"auth.model","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包下新建数据模型，用于接收配置文件的值。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"UtvydYB91o0CxSxcQsjcOVOCnkg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"权限配置类：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JuwddXlMcoaEoyxdleucCXdfnie","block_type":14,"code":{"elements":[{"text_run":{"content":"@Datapublic class SpaceUserAuthConfig implements Serializable {\n\n    /**\n     * 权限列表\n     */private List<SpaceUserPermission> permissions;\n\n    /**\n     * 角色列表\n     */private List<SpaceUserRole> roles;\n\n    private static final long serialVersionUID = 1L;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"MY5YdoaS3oDzB8xek0vcUQLonJH","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"空间成员权限：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"B05tdataMoneCZxgqdgcTBctnSb","block_type":14,"code":{"elements":[{"text_run":{"content":"@Datapublic class SpaceUserPermission implements Serializable {\n\n    /**\n     * 权限键\n     */private String key;\n\n    /**\n     * 权限名称\n     */private String name;\n\n    /**\n     * 权限描述\n     */private String description;\n\n    private static final long serialVersionUID = 1L;\n\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"N07Rdr4TfoVZHRxjGT9ct74Pnah","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"空间成员角色：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"QOLhdJVZaoRsHrx77fBckZNRnbh","block_type":14,"code":{"elements":[{"text_run":{"content":"@Datapublic class SpaceUserRole implements Serializable {\n\n    /**\n     * 角色键\n     */private String key;\n\n    /**\n     * 角色名称\n     */private String name;\n\n    /**\n     * 权限键列表\n     */private List<String> permissions;\n\n    /**\n     * 角色描述\n     */private String description;\n\n    private static final long serialVersionUID = 1L;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"DxSxd0jUPocpBQxkEAqcQs4mnqe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）定义空间成员权限常量类，便于后续校验权限时使用：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"UyeEdKSozoORJjxMyPpcFvxDnEd","block_type":14,"code":{"elements":[{"text_run":{"content":"public interface SpaceUserPermissionConstant {\n    /**\n     * 空间用户管理权限\n     */String SPACE_USER_MANAGE = \"spaceUser:manage\";\n\n    /**\n     * 图片查看权限\n     */String PICTURE_VIEW = \"picture:view\";\n\n    /**\n     * 图片上传权限\n     */String PICTURE_UPLOAD = \"picture:upload\";\n\n    /**\n     * 图片编辑权限\n     */String PICTURE_EDIT = \"picture:edit\";\n\n    /**\n     * 图片删除权限\n     */String PICTURE_DELETE = \"picture:delete\";\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"I1rpd2T1yoFhoOx21u9c01TpnMh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"4）在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"auth","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包下新建 SpaceUserAuthManager，可加载配置文件到对象，并提供根据角色获取权限列表的方法。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"RVm2dA57GojXMnxWlN2c36yxnlf","block_type":14,"code":{"elements":[{"text_run":{"content":"@Componentpublic class SpaceUserAuthManager {\n\n    @Resourceprivate SpaceUserService spaceUserService;\n\n    @Resourceprivate UserService userService;\n\n    public static final SpaceUserAuthConfig SPACE_USER_AUTH_CONFIG;\n\n    static {\n        String json = ResourceUtil.readUtf8Str(\"biz/spaceUserAuthConfig.json\");\n        SPACE_USER_AUTH_CONFIG = JSONUtil.toBean(json, SpaceUserAuthConfig.class);\n    }\n\n    /**\n     * 根据角色获取权限列表\n     */public List<String> getPermissionsByRole(String spaceUserRole) {\n        if (StrUtil.isBlank(spaceUserRole)) {\n            return new ArrayList<>();\n        }\n        // 找到匹配的角色SpaceUserRole role = SPACE_USER_AUTH_CONFIG.getRoles().stream()\n                .filter(r -> spaceUserRole.equals(r.getKey()))\n                .findFirst()\n                .orElse(null);\n        if (role == null) {\n            return new ArrayList<>();\n        }\n        return role.getPermissions();\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"PotOd3NM7olCDmxRTemcCANMnMf","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、Sa-Token 入门","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"GKuBd24gso6OIQxoPLMcvPJRn2c","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"Sa-Token؜ 是一个轻量级 Java 权限认证框架，相比 Spring Security 等更加简单易学，用作者的话说，使用该框架可以让鉴权变得简单、优雅~","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"QzT7duB52o2I3lxmaY0cgP1Znig","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"框架的学习并不难，参考 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"官方文档","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fsa-token.cc%2Fdoc.html%23%2Fstart%2Fexample"},"strikethrough":false,"underline":false}}},{"text_run":{"content":" 就好，等下我们要学习实战 Sa-Token 的主流特性和高级用法。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"WRa6da9cuo5HSSxqUAnc7kFrn3f","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）引入 Sa-Token：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"LIFWdB706oK38kxZQSjcmAc1nZc","block_type":14,"code":{"elements":[{"text_run":{"content":"<!-- Sa-Token 权限认证 --><dependency><groupId>cn.dev33</groupId><artifactId>sa-token-spring-boot-starter</artifactId><version>1.39.0</version></dependency>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":66,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"YU5XdOrifoNjZjx7DWjcSkvknZc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"Sa-Token؜ 默认将数据（比如用户登录态）保存在内存中，此模式读写速度最快，且避免了序列化与反序列化带来的性能消耗，但缺点是重启后数据会丢失、无法在分布式环境中共享数据。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Pt0qdxw57o6fqGxoTbNcnI9jnSg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"我们项目中既然已经使用了 Redis，那么可以 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"参考官方文档","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fsa-token.cc%2Fdoc.html%23%2Fup%2Finteg-redis"},"strikethrough":false,"underline":false}}},{"text_run":{"content":" 让 Sa-Token 整合 Redis，将用户的登录态等内容保存在 Redis 中。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"LhkTdqHBBoIUnOxYH3xcLz90nud","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"此处选择 ؜jackson 序列化方式整合 Redis，这样存到 Redis 的数据是可读的：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ACF0dCBPGoj5ErxPY7Rchh1nn60","block_type":14,"code":{"elements":[{"text_run":{"content":"<!-- Sa-Token 整合 Redis （使用 jackson 序列化方式） --><dependency><groupId>cn.dev33</groupId><artifactId>sa-token-redis-jackson</artifactId><version>1.39.0</version></dependency><!-- 提供Redis连接池 --><dependency><groupId>org.apache.commons</groupId><artifactId>commons-pool2</artifactId></dependency>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":66,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"YBSJdxbSJohP2pxtEGkcL7z7nyh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）了解 Sa-Token 的基本用法","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JWSwdRC58oBJIKxr6dwc9TCinJb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"Sa-To؜ken 的使用方式比较简单，首先是用户登录时调用 login 方法，产生一个新的会话：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"DNT1d5c49oWrh3xbODQcEnYnn0g","block_type":14,"code":{"elements":[{"text_run":{"content":"StpUtil.login(10001);","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"UkMEdVsZOoeBeNxVY6xceYx7nZg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"还可以给会话保存一些信息，比如登录用户的信息：OV4I80kv0cP2dox35o771C+j0cD0caQ3fcjbjWSOsKU=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BrAVdkyrcooydSxAjfGcwlEInte","block_type":14,"code":{"elements":[{"text_run":{"content":"StpUtil.getSession().set(\"user\", user)","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"XlO1dMeBWo6V5xxC7CvcKyYjnnc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"接下来你就؜可以判断用户是否登录、获取用户信息了，可以通过代码进行判断：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SBAedDjSSohDWaxJhiFcAzLsnmd","block_type":14,"code":{"elements":[{"text_run":{"content":"// 检验当前会话是否已经登录, 如果未登录，则抛出异常：`NotLoginException`\nStpUtil.checkLogin();\n// 获取用户信息\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"StpUtil.getSession().get(\"user\");","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"N3t0d5M2RofzGSxtdEVcOEZMnHh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"也可以参考 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"官方文档","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fsa-token.cc%2Fdoc.html%23%2Fuse%2Fat-check"},"strikethrough":false,"underline":false}}},{"text_run":{"content":"，使用注解进行鉴权：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OkbhdiQDCosm8MxELzgcifW3nqm","block_type":14,"code":{"elements":[{"text_run":{"content":"// 登录校验：只有登录之后才能进入该方法 @SaCheckLogin                        \n@RequestMapping(\"info\")public String info() {\n    return \"查询用户信息\";\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"QnCLdHWgqoBwP4xraQ2cIEWqneh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"这是 Sa؜-Token 最基本的用法，下面我们正式在项目中使用 Sa-Token。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"MNE3d5Inqo07AyxuYzJchfKdnIb","block_type":5,"heading3":{"elements":[{"text_run":{"content":"3、新建空间账号体系","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"D0dYdyDHRoKyKqxrVAWcqDbmn2e","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"目前，我们的项目؜中其实存在两套权限校验体系。一套是最开始就有的，对 user 表的角色进行校验，分为普通用户和管理员；另一套是本节新学习的，对团队空间的权限进行校验。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Geysdt0NJo0C9JxPfmVcG9wxnK2","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"为了更轻松地扩展؜项目，减少对原有代码的改动，我们原有的 user 表权限校验依然使用自定义注解 + AOP 的方式实现。而团队空间权限校验，采用 Sa-Token 来管理。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"G3u4dwXk7oNjHhx1MtEcbmfPnLc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"相当于我们؜不是整个项目都交给 Sa-Token，只是把 Sa-Token 当做实现团队空间权限管理的工具罢了。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"P8QldqzpDoslSmxY0Y8cExCNnLf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"这种同一项目有多账号体系的情况下，不建议使用 Sa-Token 默认的账号体系，而是使用 Sa-Token 提供的 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"多账号认证特性","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fsa-token.cc%2Fdoc.html%23%2Fup%2Fmany-account%3Fid%3D_5%25e3%2580%2581kit%25e6%25a8%25a1%25e5%25bc%258f"},"strikethrough":false,"underline":false}}},{"text_run":{"content":"，可以将多套账号的授权给区分开，让它们互不干扰。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JnHidMMe0oIeksxRPYlcj6GvnAh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）可以参考官方文档，使用 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"Kit 模式","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fsa-token.cc%2Fdoc.html%23%2Fup%2Fmany-account%3Fid%3D_5%25e3%2580%2581kit%25e6%25a8%25a1%25e5%25bc%258f"},"strikethrough":false,"underline":false}}},{"text_run":{"content":" 实现多账号认证，在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"auth","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包下新建 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"StpKit.java","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，定义空间账号体系：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"FYZwdKxwkoJ6WMx2KEvcORtRnEh","block_type":14,"code":{"elements":[{"text_run":{"content":"/**\n * StpLogic 门面类，管理项目中所有的 StpLogic 账号体系\n * 添加 @Component 注解的目的是确保静态属性 DEFAULT 和 SPACE 被初始化\n */@Componentpublic class StpKit {\n\n    public static final String SPACE_TYPE = \"space\";\n\n    /**\n     * 默认原生会话对象，项目中目前没使用到\n     */public static final StpLogic DEFAULT = StpUtil.stpLogic;\n\n    /**\n     * Space 会话对象，管理 Space 表所有账号的登录、权限认证\n     */public static final StpLogic SPACE = new StpLogic(SPACE_TYPE);\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"QbAcdz21roxagDxBrmdcgZLOn2d","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"之后就可以在代码中使用账号体系，以下是示例代码：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SlZQd4hXdo8RDGxKPAkcVKiunWe","block_type":14,"code":{"elements":[{"text_run":{"content":"// 在当前会话进行 Space 账号登录\nStpKit.SPACE.login(10001);\n\n// 检测当前会话是否以 Space 账号登录，并具有 picture:edit 权限\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"StpKit.SPACE.checkPermission(\"picture:edit\");","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"NDa1dBRQwoYW7XxDo9UcUjjPnZd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）修改用؜户服务的 userLogin 方法，用户登录成功后，保存登录态到 Sa-Token 的空间账号体系中：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SOWXdja4roS6r8xOf9vc5aJ2nOK","block_type":14,"code":{"elements":[{"text_run":{"content":"// 3. 记录用户的登录态\nrequest.getSession().setAttribute(USER_LOGIN_STATE, user);\n// 4. 记录用户登录态到 Sa-token，便于空间鉴权时使用，注意保证该用户信息与 SpringSession 中的信息过期时间一致\nStpKit.SPACE.login(user.getId());\nStpKit.SPACE.getSession().set(USER_LOGIN_STATE, user);\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"return this.getLoginUserVO(user);","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"H6VRdHC7DoKRMfxVXKscSPhonkd","block_type":5,"heading3":{"elements":[{"text_run":{"content":"4、权限认证逻辑","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"NOc2dQKjzodYYKxJyqoc8fdInrd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"Sa-Token 开发的核؜心是编写权限认证类，我们需要在该类中实现 “如何根据登录用户 id 获取到用户已有的角色和权限列表” 方法。当要判断某用户是否有某个角色或权限时，Sa-Token 会先执行我们编写的方法，得到该用户的角色或权限列表，然后跟需要的角色权限进行比对。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"I7HgdnqoioeMjHxKGTTc6cain3g","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"参考 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"官方文档","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fsa-token.cc%2Fdoc.html%23%2Fuse%2Fjur-auth"},"strikethrough":false,"underline":false}}},{"text_run":{"content":"，示例权限认证类如下：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Ms65dld6BopClmxXdrDcE5cnnvg","block_type":14,"code":{"elements":[{"text_run":{"content":"/**\n * 自定义权限加载接口实现类\n */@Component    // 保证此类被 SpringBoot 扫描，完成 Sa-Token 的自定义权限验证扩展 public class StpInterfaceImpl implements StpInterface {\n\n    /**\n     * 返回一个账号所拥有的权限码集合 \n     */@Overridepublic List<String> getPermissionList(Object loginId, String loginType) {\n        // 本 list 仅做模拟，实际项目中要根据具体业务逻辑来查询权限\n        List<String> list = new ArrayList<String>();    \n        list.add(\"user.add\");\n        list.add(\"user.update\");\n        list.add(\"user.get\");\n        list.add(\"art.*\");\n        return list;\n    }\n\n    /**\n     * 返回一个账号所拥有的角色标识集合 (权限与角色可分开校验)\n     */@Overridepublic List<String> getRoleList(Object loginId, String loginType) {\n        // 本 list 仅做模拟，实际项目中要根据具体业务逻辑来查询角色\n        List<String> list = new ArrayList<String>();    \n        list.add(\"admin\");\n        list.add(\"super-admin\");\n        return list;\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"VhESdLNDjoOPWdx2mdlc6fYpngf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"Sa-Token 支持按照角色和权限校验，对于权限不多的项目，基于角色校验即可；对于权限较多的项目，建议根据权限校验。对于本项目，虽然权限并不多，但是考虑到扩展性，还是 选择更细粒度的权限校验，业务含义会更明确。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"C5dkdChbnopFjdxM2hQctjeOnOd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"观察上述代码我们会发现，","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"getPermissionList","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 方法只提供了 loginId（登录用户 id）和 loginType（账号体系）两个参数。这会给我们造成很大的难度：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Zr0ndRqMMonUY9xB5wNceY2jnTg","block_type":12,"bullet":{"elements":[{"text_run":{"content":"我们光有用户 id 是没办法进行权限校验的，因为我们要给图片操作和空间成员操作增加权限校验逻辑，还需要获取到空间 id，才知道用户是否具有某个团队空间的权限。那么如何获取到空间 id 呢？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"DyDFdIx4doCgMGxCWPhck2Rznwc","block_type":12,"bullet":{"elements":[{"text_run":{"content":"如果要进行统一的权限校验，也包括了公共图库和私有空间，更要命的是，公共图库是没有空间 id 的！这就意味着要根据操作的图片情况动态判断。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"LgDvdGG5oomKEbxGl0bcqyCzneb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"所以我们要解决的关键问题有 2 个：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"W8PodKlrgoRaisxQeuZcXNBTnxe","block_type":13,"ordered":{"elements":[{"text_run":{"content":"如何在 Sa-Token 中获取当前请求操作的参数？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"1"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"EyAxdUoxDopn5Lx8RxzckSUlnfh","block_type":13,"ordered":{"elements":[{"text_run":{"content":"如何编写一套权限校验逻辑，同时兼容公共图库、私有空间和团队空间？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Z7p3dISREo55z4xqcBXcYhNtnHe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）先看第一个问题，使用 Sa-Token 有 2 种方式 —— 注解式和编程式。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"F74ZdLw1Qoc6bNx8v8Lcf4fgnYf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"如果使用注解؜式，那么在接口被调用时就会立刻触发 Sa-Token 的权限校验，此时参数只能通过 Servlet 的请求对象传递。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BBwMdttYKoXTwTxZ3K4cI7aUn6d","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"如果使用编程式؜，可以在代码任意位置执行权限校验，只要在执行前将参数放到当前线程的上下文 ThreadLocal 对象中，就能在鉴权时获取到了。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Uj04dDlyboQnbuxTxV2cpuw6ntg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"为了后续我们给接؜口添加鉴权更直观方便，我们选择注解式鉴权。那就有一个关键问题，不同接口的请求参数是不同的，有的请求参数有 spaceId、有的只有 pictureId，怎么办呢？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"HgPbdKDVzotBtwxcu7AcWNQyngd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"我们可以定义一个 上下文类，用于统一接收请求中传递来的参数：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GWVydfUGGoJOmnxrxnecbTY1nn8","block_type":14,"code":{"elements":[{"text_run":{"content":"/**\n * SpaceUserAuthContext\n * 表示用户在特定空间内的授权上下文，包括关联的图片、空间和用户信息。\n */@Datapublic class SpaceUserAuthContext {\n\n    /**\n     * 临时参数，不同请求对应的 id 可能不同\n     */private Long id;\n\n    /**\n     * 图片 ID\n     */private Long pictureId;\n\n    /**\n     * 空间 ID\n     */private Long spaceId;\n\n    /**\n     * 空间用户 ID\n     */private Long spaceUserId;\n\n    /**\n     * 图片信息\n     */private Picture picture;\n\n    /**\n     * 空间信息\n     */private Space space;\n\n    /**\n     * 空间用户信息\n     */private SpaceUser spaceUser;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"PBT6dn0two76BcxmWrFc99jpnPh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"如何知道哪个请求包含؜了哪些字段呢？别忘了，我们每类操作（图片 / 空间成员）的请求前缀都是固定的，可以从请求路径中提取到要访问的是哪个 Controller，而每类 Controller 的请求参数，都是一致的。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BeKEdMJmvoJQz7xQy4fciarOnwf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"举个例子，如果访问地址是 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"/api/picture/xxx","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，那么一定是要调用 PictureController 的接口，这些接口的 id 字段都表示 pictureId。我们就可以通过访问地址来决定应该给上下文传递哪些字段，代码如下：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"FNXUd7bKOoMq9Ax2UiVctW0Qn29","block_type":14,"code":{"elements":[{"text_run":{"content":"@Value(\"${server.servlet.context-path}\")private String contextPath;\n\n/**\n * 从请求中获取上下文对象\n */private SpaceUserAuthContext getAuthContextByRequest() {\n    HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.currentRequestAttributes()).getRequest();\n    String contentType = request.getHeader(Header.CONTENT_TYPE.getValue());\n    SpaceUserAuthContext authRequest;\n    // 兼容 get 和 post 操作if (ContentType.JSON.getValue().equals(contentType)) {\n        String body = ServletUtil.getBody(request);\n        authRequest = JSONUtil.toBean(body, SpaceUserAuthContext.class);\n    } else {\n        Map<String, String> paramMap = ServletUtil.getParamMap(request);\n        authRequest = BeanUtil.toBean(paramMap, SpaceUserAuthContext.class);\n    }\n    // 根据请求路径区分 id 字段的含义Long id = authRequest.getId();\n    if (ObjUtil.isNotNull(id)) {\n        String requestUri = request.getRequestURI();\n        String partUri = requestUri.replace(contextPath + \"/\", \"\");\n        String moduleName = StrUtil.subBefore(partUri, \"/\", false);\n        switch (moduleName) {\n            case \"picture\":\n                authRequest.setPictureId(id);\n                break;\n            case \"spaceUser\":\n                authRequest.setSpaceUserId(id);\n                break;\n            case \"space\":\n                authRequest.setSpaceId(id);\n                break;\n            default:\n        }\n    }\n    return authRequest;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"AtQPdP7MLork3kxUpr1c8fgjnqh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"注意，上述代码中，我们使用 Hutool 的工具类 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"ServletUtil","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 从 HttpServletRequest 中获取到了参数信息，但是坑爹的是，HttpServletRequest 的 body 值是个流，","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"只支持读取一次，读完就没了！","text_element_style":{"bold":true,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 所以为了解决这个问题，我们还要在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"config","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包下自定义请求包装类和请求包装类过滤器。这些就是样板代码了，大家直接复制粘贴即可，不用编码。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"P3nKd7CmloMpEvxVjhxcGeotnMb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"RequestWrapper 请求包装类：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Q6yPdrWvnotIw8x402TcPmvwnme","block_type":14,"code":{"elements":[{"text_run":{"content":"/**\n * 包装请求，使 InputStream 可以重复读取\n *\n * @author pine\n */@Slf4jpublic class RequestWrapper extends HttpServletRequestWrapper {\n\n    private final String body;\n\n    public RequestWrapper(HttpServletRequest request) {\n        super(request);\n        StringBuilder stringBuilder = new StringBuilder();\n        try (InputStream inputStream = request.getInputStream(); BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))) {\n            char[] charBuffer = new char[128];\n            int bytesRead = -1;\n            while ((bytesRead = bufferedReader.read(charBuffer)) > 0) {\n                stringBuilder.append(charBuffer, 0, bytesRead);\n            }\n        } catch (IOException ignored) {\n        }\n        body = stringBuilder.toString();\n    }\n\n    @Overridepublic ServletInputStream getInputStream() throws IOException {\n        final ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(body.getBytes());\n        return new ServletInputStream() {\n            @Overridepublic boolean isFinished() {\n                return false;\n            }\n\n            @Overridepublic boolean isReady() {\n                return false;\n            }\n\n            @Overridepublic void setReadListener(ReadListener readListener) {\n            }\n\n            @Overridepublic int read() throws IOException {\n                return byteArrayInputStream.read();\n            }\n        };\n\n    }\n\n    @Overridepublic BufferedReader getReader() throws IOException {\n        return new BufferedReader(new InputStreamReader(this.getInputStream()));\n    }\n\n    public String getBody() {\n        return this.body;\n    }\n\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"BIkydEw9cozdsexYaMIcIU2cnRg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"HttpR؜equestWrapperFilter 请求包装过滤器：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Vh1rdmSKKoOkmXxbVjacBjDznVf","block_type":14,"code":{"elements":[{"text_run":{"content":"/**\n * 请求包装过滤器\n *\n * @author pine\n */@Order(1)@Componentpublic class HttpRequestWrapperFilter implements Filter {\n\n    @Overridepublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws ServletException, IOException {\n        if (request instanceof HttpServletRequest) {\n            HttpServletRequest servletRequest = (HttpServletRequest) request;\n            String contentType = servletRequest.getHeader(Header.CONTENT_TYPE.getValue());\n            if (ContentType.JSON.getValue().equals(contentType)) {\n                // 可以再细粒度一些，只有需要进行空间权限校验的接口才需要包一层\n                chain.doFilter(new RequestWrapper(servletRequest), response);\n            } else {\n                chain.doFilter(request, response);\n            }\n        }\n    }\n\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"UTPmdkkRroVuPyxxJRnc02XanEc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"这样我们就能正常获取到请求参数了~","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"NVqKdZ4LTod4sixsg6Lcay14nxd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）编写通用的权限校验逻辑，兼容公共图库、私有空间和团队空间","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"NApKdoSiwocjZrxa0yMcxSKpn4K","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"这个没啥好؜说的，就是写业务逻辑，而且是比较复杂的业务逻辑，所以建议一定要先把业务流程梳理清楚，再编写代码。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"KRmUdnlNvoXbgMxoMeRcxIyxnCf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"业务流程如下：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Cwepdf74TobILFxQsnFcaztinjh","block_type":13,"ordered":{"elements":[{"text_run":{"content":"校验登录类型：如果 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"loginType","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 不是 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"space\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，直接返回空权限列表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"1"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"WjPkdbwtYouhJ3xNhzGcjq0zn4i","block_type":13,"ordered":{"elements":[{"text_run":{"content":"管理员权限处理：如果当前用户为管理员，直接返回管理员权限列表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"AO5Od0tWboYPdgxixb6cwbX5nhe","block_type":13,"ordered":{"elements":[{"text_run":{"content":"获取上下文对象：从请求中获取 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"SpaceUserAuthContext","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 上下文，检查上下文字段是否为空。如果上下文中所有字段均为空（如没有空间或图片信息），视为公共图库操作，直接返回管理员权限列表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"W4xbddCLcoC0q8xhZDlcnoM3nwf","block_type":13,"ordered":{"elements":[{"text_run":{"content":"校验登录状态：通过 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"loginId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 获取当前登录用户信息。如果用户未登录，抛出未授权异常；否则获取用户的唯一标识 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"userId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，用于后续权限判断。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"F8f1ddG28og0VXxN2EjcaNQxnLA","block_type":13,"ordered":{"elements":[{"text_run":{"content":"从上下文中优先获取 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"SpaceUser","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 对象：如果上下文中存在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"SpaceUser","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 对象，直接根据其角色获取权限码列表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"GxoJdqJuooGbWZxDX8Ecj1Zwnzg","block_type":13,"ordered":{"elements":[{"text_run":{"content":"通过 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"spaceUserId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 获取空间用户信息：如果上下文中存在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"spaceUserId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"AVSXdRT0joUsrix8o6bcgNOfnOf","block_type":12,"bullet":{"elements":[{"text_run":{"content":"查询对应的 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"SpaceUser","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 数据。如果未找到，抛出数据未找到异常。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"HuS1dH25QoVjlXxmY7dcRnVwnjh","block_type":12,"bullet":{"elements":[{"text_run":{"content":"校验当前登录用户是否属于该空间，如果不是，返回空权限列表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"SHyodWaLQoF2NZxyriRcM0Apn5d","block_type":12,"bullet":{"elements":[{"text_run":{"content":"否则，根据登录用户在该空间的角色，返回相应的权限码列表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"UC4AdkmgvoHABAxjwBFcDbu0ngf","block_type":13,"ordered":{"elements":[{"text_run":{"content":"通过 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"spaceId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 或 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"pictureId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 获取空间或图片信息","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"7"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Rn78dytPco8gGdxPVNNcaX0pnle","block_type":12,"bullet":{"elements":[{"text_run":{"content":"如果 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"spaceId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 不存在：使用 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"pictureId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 查询图片信息，并通过图片的 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"spaceId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 继续判断权限；如果 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"pictureId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 和 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"spaceId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 均为空，默认视为管理员权限。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"FUvRdSCejoixFxxpZnCcfFtYnMg","block_type":12,"bullet":{"elements":[{"text_run":{"content":"对于公共图库：如果图片是当前用户上传的，或者当前用户为管理员，返回管理员权限列表；如果图片不是当前用户上传的，返回仅允许查看的权限码。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Zm1YdKTd5ofUT2xyl66cVPwVnRg","block_type":13,"ordered":{"elements":[{"text_run":{"content":"获取 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"Space","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 对象并判断空间类型：查询 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"Space","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 信息，如果未找到空间数据，抛出数据未找到异常。否则根据空间类型进行判断","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"8"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"VEUrdvEHAoUSSQxtoCQcPVLNnbb","block_type":12,"bullet":{"elements":[{"text_run":{"content":"私有空间：仅空间所有者和管理员有权限（即返回全部权限），其他用户返回空权限列表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"WLJCdBy8Wox7EpxQC74c0vBPnRf","block_type":12,"bullet":{"elements":[{"text_run":{"content":"团队空间：查询登录用户在该空间的角色，并返回对应的权限码列表。如果用户不属于该空间，返回空权限列表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"V583drcSNo0DE4xqwbJc3Slanze","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"根据业务流程编写代码：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BVG1d1Eufo9rjQxs8qZcceiyn5c","block_type":14,"code":{"elements":[{"text_run":{"content":"public List<String> getPermissionList(Object loginId, String loginType) {\n    // 判断 loginType，仅对类型为 \"space\" 进行权限校验if (!StpKit.SPACE_TYPE.equals(loginType)) {\n        return new ArrayList<>();\n    }\n    // 管理员权限，表示权限校验通过\n    List<String> ADMIN_PERMISSIONS = spaceUserAuthManager.getPermissionsByRole(SpaceRoleEnum.ADMIN.getValue());\n    // 获取上下文对象SpaceUserAuthContext authContext = getAuthContextByRequest();\n    // 如果所有字段都为空，表示查询公共图库，可以通过if (isAllFieldsNull(authContext)) {\n        return ADMIN_PERMISSIONS;\n    }\n    // 获取 userIdUser loginUser = (User) StpKit.SPACE.getSessionByLoginId(loginId).get(USER_LOGIN_STATE);\n    if (loginUser == null) {\n        throw new BusinessException(ErrorCode.NO_AUTH_ERROR, \"用户未登录\");\n    }\n    Long userId = loginUser.getId();\n    // 优先从上下文中获取 SpaceUser 对象SpaceUser spaceUser = authContext.getSpaceUser();\n    if (spaceUser != null) {\n        return spaceUserAuthManager.getPermissionsByRole(spaceUser.getSpaceRole());\n    }\n    // 如果有 spaceUserId，必然是团队空间，通过数据库查询 SpaceUser 对象Long spaceUserId = authContext.getSpaceUserId();\n    if (spaceUserId != null) {\n        spaceUser = spaceUserService.getById(spaceUserId);\n        if (spaceUser == null) {\n            throw new BusinessException(ErrorCode.NOT_FOUND_ERROR, \"未找到空间用户信息\");\n        }\n        // 取出当前登录用户对应的 spaceUserSpaceUser loginSpaceUser = spaceUserService.lambdaQuery()\n                .eq(SpaceUser::getSpaceId, spaceUser.getSpaceId())\n                .eq(SpaceUser::getUserId, userId)\n                .one();\n        if (loginSpaceUser == null) {\n            return new ArrayList<>();\n        }\n        // 这里会导致管理员在私有空间没有权限，可以再查一次库处理return spaceUserAuthManager.getPermissionsByRole(loginSpaceUser.getSpaceRole());\n    }\n    // 如果没有 spaceUserId，尝试通过 spaceId 或 pictureId 获取 Space 对象并处理Long spaceId = authContext.getSpaceId();\n    if (spaceId == null) {\n        // 如果没有 spaceId，通过 pictureId 获取 Picture 对象和 Space 对象Long pictureId = authContext.getPictureId();\n        // 图片 id 也没有，则默认通过权限校验if (pictureId == null) {\n            return ADMIN_PERMISSIONS;\n        }\n        Picture picture = pictureService.lambdaQuery()\n                .eq(Picture::getId, pictureId)\n                .select(Picture::getId, Picture::getSpaceId, Picture::getUserId)\n                .one();\n        if (picture == null) {\n            throw new BusinessException(ErrorCode.NOT_FOUND_ERROR, \"未找到图片信息\");\n        }\n        spaceId = picture.getSpaceId();\n        // 公共图库，仅本人或管理员可操作if (spaceId == null) {\n            if (picture.getUserId().equals(userId) || userService.isAdmin(loginUser)) {\n                return ADMIN_PERMISSIONS;\n            } else {\n                // 不是自己的图片，仅可查看return Collections.singletonList(SpaceUserPermissionConstant.PICTURE_VIEW);\n            }\n        }\n    }\n    // 获取 Space 对象Space space = spaceService.getById(spaceId);\n    if (space == null) {\n        throw new BusinessException(ErrorCode.NOT_FOUND_ERROR, \"未找到空间信息\");\n    }\n    // 根据 Space 类型判断权限if (space.getSpaceType() == SpaceTypeEnum.PRIVATE.getValue()) {\n        // 私有空间，仅本人或管理员有权限if (space.getUserId().equals(userId) || userService.isAdmin(loginUser)) {\n            return ADMIN_PERMISSIONS;\n        } else {\n            return new ArrayList<>();\n        }\n    } else {\n        // 团队空间，查询 SpaceUser 并获取角色和权限\n        spaceUser = spaceUserService.lambdaQuery()\n                .eq(SpaceUser::getSpaceId, spaceId)\n                .eq(SpaceUser::getUserId, userId)\n                .one();\n        if (spaceUser == null) {\n            return new ArrayList<>();\n        }\n        return spaceUserAuthManager.getPermissionsByRole(spaceUser.getSpaceRole());\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"QipMdWQ5moSGDUxnAo9cAcGjnsd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"上述代码依؜赖 “判断所有字段都为空” 的方法，通过反射获取对象的所有字段，进行判空：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"VtmjdVc03o7AaUxAfIAcDITEndg","block_type":14,"code":{"elements":[{"text_run":{"content":"private boolean isAllFieldsNull(Object object) {\n    if (object == null) {\n        return true; // 对象本身为空\n    }\n    // 获取所有字段并判断是否所有字段都为空return Arrays.stream(ReflectUtil.getFields(object.getClass()))\n            // 获取字段值\n            .map(field -> ReflectUtil.getFieldValue(object, field))\n            // 检查是否所有字段都为空\n            .allMatch(ObjectUtil::isEmpty);\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"MxZwdtDLWorrO7xqjS2cvclAnth","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"OK，这就是 Sa-Token 动态权限校验的核心代码，你会发现编写一套统一的权限校验逻辑并不容易，所以实际项目中要 按需使用 第三方权限校验框架。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SnG8dMdAhowOaGxX0xlckIExnm9","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"💡 注意，采用注解式鉴权 + 通过请求对象获取参数时，可能会重复查询数据库。比如业务代码中已经有根据 id 查询空间信息的代码了，但为了权限校验，也查库获取了一次空间信息，会对性能造成影响。如果想更灵活、更高性能地实现鉴权，可以考虑使用编程式鉴权。获取权限的方法和上下文类都是可以复用的，只需要将 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"getAuthContextByRequest","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 方法的逻辑改为从 ThreadLocal 上下文中获取即可。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"LXpVdy4YnoGTHCxDY9TctQyBnWd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"基于 ThreadLocal 实现上下文管理的示例代码：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"F6yvdGvT1orfrTxQXSQct2Lmnb0","block_type":14,"code":{"elements":[{"text_run":{"content":"public class SaTokenContextHolder {\n\n    private static final ThreadLocal<Map<String, Object>> CONTEXT = ThreadLocal.withInitial(HashMap::new);\n\n    // 设置上下文数据public static void set(String key, Object value) {\n        CONTEXT.get().put(key, value);\n    }\n\n    // 获取上下文数据public static Object get(String key) {\n        return CONTEXT.get().get(key);\n    }\n\n    // 清理上下文数据（防止内存泄漏）public static void clear() {\n        CONTEXT.remove();\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"G8oCdlC6WoziOJx7WCUcqb3Mnjc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"5、权限校验注解","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"WbxKdlty0o7iKjxASP9cGLjknqe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"默认情况下使用 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"注解式鉴权","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fsa-token.cc%2Fdoc.html%23%2Fuse%2Fat-check"},"strikethrough":false,"underline":false}}},{"text_run":{"content":"，需要新建配置类：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Mdm0dUcDhobbb7xfyhJcmtwRn5f","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"但由于我们؜使用了多账号体系，每次使用注解时都要指定账号体系的 loginType，会比较麻烦：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"MaUidQJk8ovCRYxw37Dcpe3rnXb","block_type":14,"code":{"elements":[{"text_run":{"content":"@SaCheckLogin(type = StpUserUtil.TYPE)","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"QBGDdT6CSoMjtZxx91lcNFZSnjm","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"所以可以参考官方文档，使用 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"注解合并","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fsa-token.cc%2Fdoc.html%23%2Fup%2Fmany-account%3Fid%3D_7%25e3%2580%2581%25e4%25bd%25bf%25e7%2594%25a8%25e6%25b3%25a8%25e8%25a7%25a3%25e5%2590%2588%25e5%25b9%25b6%25e7%25ae%2580%25e5%258c%2596%25e4%25bb%25a3%25e7%25a0%2581"},"strikethrough":false,"underline":false}}},{"text_run":{"content":" 简化代码。在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"auth.annotation","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包下新建 Sa-Token 配置类，开启注解鉴权和注解合并：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"O0AGdIihLoBNX4xhPi1ccMoPn4g","block_type":14,"code":{"elements":[{"text_run":{"content":"@Configurationpublic class SaTokenConfigure implements WebMvcConfigurer {\n\n    // 注册 Sa-Token 拦截器，打开注解式鉴权功能@Overridepublic void addInterceptors(InterceptorRegistry registry) {\n        // 注册 Sa-Token 拦截器，打开注解式鉴权功能\n        registry.addInterceptor(new SaInterceptor()).addPathPatterns(\"/**\");\n    }\n\n    @PostConstructpublic void rewriteSaStrategy() {\n        // 重写Sa-Token的注解处理器，增加注解合并功能 \n        SaAnnotationStrategy.instance.getAnnotation = (element, annotationClass) -> {\n            return AnnotatedElementUtils.getMergedAnnotation(element, annotationClass);\n        };\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"V3BTdGPPXo9yNOxZKercDWmAnuf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"然后参考 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"官方提供的示例代码","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fgitee.com%2Fdromara%2Fsa-token%2Fblob%2Fmaster%2Fsa-token-demo%2Fsa-token-demo-case%2Fsrc%2Fmain%2Fjava%2Fcom%2Fpj%2Fsatoken%2Fmerge_annotation%2FSaUserCheckPermission.java%23"},"strikethrough":false,"underline":false}}},{"text_run":{"content":"，在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"auth.annotation","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包下新建空间账号体系的鉴权注解：OTsSx2bzs2C13D2pB4s4on5rzOarAwg0YtGpfccE/pk=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Uu0QdvwG1oa1cpxxaDgc7qTkn0e","block_type":14,"code":{"elements":[{"text_run":{"content":"/**\n * 空间权限认证：必须具有指定权限才能进入该方法\n * <p> 可标注在函数、类上（效果等同于标注在此类的所有方法上）\n */@SaCheckPermission(type = StpKit.SPACE_TYPE)@Retention(RetentionPolicy.RUNTIME)@Target({ElementType.METHOD, ElementType.TYPE})public @interface SaSpaceCheckPermission {\n\n    /**\n     * 需要校验的权限码\n     *\n     * @return 需要校验的权限码\n     */@AliasFor(annotation = SaCheckPermission.class)\n    String[] value() default {};\n\n    /**\n     * 验证模式：AND | OR，默认AND\n     *\n     * @return 验证模式\n     */@AliasFor(annotation = SaCheckPermission.class)\n    SaMode mode() default SaMode.AND;\n\n    /**\n     * 在权限校验不通过时的次要选择，两者只要其一校验成功即可通过校验\n     *\n     * <p>\n     * 例1：@SaCheckPermission(value=\"user-add\", orRole=\"admin\")，\n     * 代表本次请求只要具有 user-add权限 或 admin角色 其一即可通过校验。\n     * </p>\n     *\n     * <p>\n     * 例2： orRole = {\"admin\", \"manager\", \"staff\"}，具有三个角色其一即可。 <br>\n     * 例3： orRole = {\"admin, manager, staff\"}，必须三个角色同时具备。\n     * </p>\n     *\n     * @return /\n     */@AliasFor(annotation = SaCheckPermission.class)\n    String[] orRole() default {};\n\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Bbr9d0dc1oavOKxsxGzc0Fvgn9e","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"之后就可以直接使用该注解了。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"RFQyd5i3NohaNixA8jocXB2ynzc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"6、应用权限注解","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"HZmUdMagEoulAbx5hKgcr3LRnQP","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"认真核对一遍各个操作接口؜的代码、以及接口调用的 Service 代码，包括图片操作 PictureController 和PictureService、空间成员操作 SpaceUserController 和 SpaceUserService。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"LHBCdeDpSocUA4xjzXickH2gncg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）给 C؜ontroller 接口补充上合适的权限注解，PictureController 图片接口：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"TuwIdLYQZo93D9xAH4ec3yTOnLb","block_type":14,"code":{"elements":[{"text_run":{"content":"// 上传图片（可重新上传）@PostMapping(\"/upload\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.PICTURE_UPLOAD)public BaseResponse<PictureVO> uploadPicture() {\n}\n\n// 通过 URL 上传图片（可重新上传）@PostMapping(\"/upload/url\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.PICTURE_UPLOAD)public BaseResponse<PictureVO> uploadPictureByUrl() {\n}\n\n// 删除图片@PostMapping(\"/delete\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.PICTURE_DELETE)public BaseResponse<Boolean> deletePicture() {\n}\n\n// 编辑图片（给用户使用）@PostMapping(\"/edit\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.PICTURE_EDIT)public BaseResponse<Boolean> editPicture() {\n}\n\n// 根据颜色搜索图片@PostMapping(\"/search/color\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.PICTURE_VIEW)public BaseResponse<List<PictureVO>> searchPictureByColor() {\n}\n\n// 批量编辑图片@PostMapping(\"/edit/batch\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.PICTURE_EDIT)public BaseResponse<Boolean> editPictureByBatch() {\n}\n\n// 创建 AI 扩图任务@PostMapping(\"/out_painting/create_task\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.PICTURE_EDIT)public BaseResponse<CreateOutPaintingTaskResponse> createPictureOutPaintingTask() {\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"O4X5dkXf0oo54sxjs8YcSK2Wn1e","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"SpaceUserController 接口：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"DDjqdx4D1opYaCxcZ1ecl3P1nud","block_type":14,"code":{"elements":[{"text_run":{"content":"// 添加成员到空间@PostMapping(\"/add\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.SPACE_USER_MANAGE)public BaseResponse<Long> addSpaceUser() {\n}\n\n// 从空间移除成员@PostMapping(\"/delete\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.SPACE_USER_MANAGE)public BaseResponse<Boolean> deleteSpaceUser() {\n}\n\n// 查询某个成员在某个空间的信息@PostMapping(\"/get\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.SPACE_USER_MANAGE)public BaseResponse<SpaceUser> getSpaceUser() {\n}\n\n// 查询成员信息列表@PostMapping(\"/list\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.SPACE_USER_MANAGE)public BaseResponse<List<SpaceUserVO>> listSpaceUser() {\n}\n\n// 编辑成员信息（设置权限）@PostMapping(\"/edit\")@SaSpaceCheckPermission(value = SpaceUserPermissionConstant.SPACE_USER_MANAGE)public BaseResponse<Boolean> editSpaceUser() {\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"SfqBdKrO1oJ68wxbPFicLOnunEe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）移除这些接口和相关服务原本的权限校验逻辑，比如 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"PictureService#checkPictureAuth","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，确保该方法变成了灰色（未被使用）。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"KlxWdfmeAoGLGjxiYoucn6wMnFb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"还有 Pi؜ctureServiceImpl 的 uploadPicture 方法中的权限校验，也要注释掉：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Q2RDdmnSOo9pBLxipWHcUSSBn0g","block_type":14,"code":{"elements":[{"text_run":{"content":"//            // 校验是否有空间的权限，仅空间管理员才能上传//            if (!loginUser.getId().equals(space.getUserId())) {//                throw new BusinessException(ErrorCode.NO_AUTH_ERROR, \"没有空间权限\");//            }//            // 仅本人或管理员可编辑图片//            if (!oldPicture.getUserId().equals(loginUser.getId()) && !userService.isAdmin(loginUser)) {//                throw new BusinessException(ErrorCode.NO_AUTH_ERROR);//            }","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"NtivdeFTlop98lxfjrYcZ26On7g","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）注意，只要加上了 ؜Sa-Token 注解，框架就会强制要求用户登录，未登录会抛出异常。所以针对未登录也可以调用的接口，需要改为编程式权限校验，比如 getPictureVOById 和 listPictureVOByPage 方法。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IYQ8dcDQ0oQ5qIxjtOHc6Eognhb","block_type":14,"code":{"elements":[{"text_run":{"content":"@GetMapping(\"/get/vo\")public BaseResponse<PictureVO> getPictureVOById(long id, HttpServletRequest request) {\n    ThrowUtils.throwIf(id <= 0, ErrorCode.PARAMS_ERROR);\n    // 查询数据库Picture picture = pictureService.getById(id);\n    ThrowUtils.throwIf(picture == null, ErrorCode.NOT_FOUND_ERROR);\n    // 空间的图片，需要校验权限Space space = null;\n    Long spaceId = picture.getSpaceId();\n    if (spaceId != null) {\n        boolean hasPermission = StpKit.SPACE.hasPermission(SpaceUserPermissionConstant.PICTURE_VIEW);\n        ThrowUtils.throwIf(!hasPermission, ErrorCode.NO_AUTH_ERROR);\n    }\n    PictureVO pictureVO = pictureService.getPictureVO(picture, request);\n    // 获取封装类return ResultUtils.success(pictureVO);\n}\n\n@PostMapping(\"/list/page/vo\")public BaseResponse<Page<PictureVO>> listPictureVOByPage(@RequestBody PictureQueryRequest pictureQueryRequest, HttpServletRequest request) {\n    long current = pictureQueryRequest.getCurrent();\n    long size = pictureQueryRequest.getPageSize();\n    // 限制爬虫\n    ThrowUtils.throwIf(size > 20, ErrorCode.PARAMS_ERROR);\n    // 空间权限校验Long spaceId = pictureQueryRequest.getSpaceId();\n    // 公开图库if (spaceId == null) {\n        // 普通用户默认只能查看已过审的公开数据\n        pictureQueryRequest.setReviewStatus(PictureReviewStatusEnum.PASS.getValue());\n        pictureQueryRequest.setNullSpaceId(true);\n    } else {\n        boolean hasPermission = StpKit.SPACE.hasPermission(SpaceUserPermissionConstant.PICTURE_VIEW);\n        ThrowUtils.throwIf(!hasPermission, ErrorCode.NO_AUTH_ERROR);\n    }\n    // 查询数据库\n    Page<Picture> picturePage = pictureService.page(new Page<>(current, size), pictureService.getQueryWrapper(pictureQueryRequest));\n    // 获取封装类return ResultUtils.success(pictureService.getPictureVOPage(picturePage, request));\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"K3PVdSxk4oG9A9xYqUHchCpinSg","block_type":5,"heading3":{"elements":[{"text_run":{"content":"7、全局异常处理","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"X8egdfBKkoBv1LxvJPKc2hwInHg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"如果 Sa-Token 校验用户没有符合要求的权限、或者用户未登录，就会抛出它定义的异常，","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"参考文档","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fsa-token.cc%2Fdoc.html%23%2Ffun%2Fexception-code%3Fid%3D%25e8%258e%25b7%25e5%258f%2596%25e5%25bc%2582%25e5%25b8%25b8%25e7%25bb%2586%25e5%2588%2586%25e7%258a%25b6%25e6%2580%2581%25e7%25a0%2581"},"strikethrough":false,"underline":false}}},{"text_run":{"content":"。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IZUJdBvnUoNFaBxwaCgcwLIDnEb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"需要将框架؜的异常全局处理为我们自己定义的业务异常，在全局异常处理器中添加代码：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"MDKldndUZoOFrzxkCROcIQ15nZf","block_type":14,"code":{"elements":[{"text_run":{"content":"@ExceptionHandler(NotLoginException.class)public BaseResponse<?> notLoginException(NotLoginException e) {\n    log.error(\"NotLoginException\", e);\n    return ResultUtils.error(ErrorCode.NOT_LOGIN_ERROR, e.getMessage());\n}\n\n@ExceptionHandler(NotPermissionException.class)public BaseResponse<?> notPermissionExceptionHandler(NotPermissionException e) {\n    log.error(\"NotPermissionException\", e);\n    return ResultUtils.error(ErrorCode.NO_AUTH_ERROR, e.getMessage());\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"HKAmdBfnGojT3TxoPn0czoQYnUc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"8、补充获取权限的接口","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"L7fVdpYVdo3Nbax98zFcwulbnme","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"前面写的都是后端权؜限校验的代码，但对于用户来说，如果没有空间图片的编辑权限，进入空间详情页时不应该能看到编辑按钮。也就是说，前端也需要根据用户的权限来进行一些页面内容的展示和隐藏。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"N4VFdDLMGo75wExQKlycJwLOnzb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"因此，后端؜需要将用户具有的权限返回给前端，帮助前端进行判断，这样就不用让前端编写复杂的角色和权限校验逻辑了。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IAI5dQy8SoBZYUxisD6cSCGHnRg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"思考下具体的使؜用场景：如果是团队空间（空间详情页）或团队空间的图片（图片详情页），返回给前端用户具有的权限（比如能否编辑、能否上传、能否删除、能否管理成员）。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"XPeBdEVnuoprr9xTIaKcs1gJnaf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）比起新写一؜个获取权限的接口，我们可以直接在返回图片或空间详情时，额外传递权限列表。给 SpaceVO 和 PictureVO 新增权限列表字段：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OKp8dE7ZboSkevxyBCBcT9Omnv7","block_type":14,"code":{"elements":[{"text_run":{"content":"/**\n * 权限列表\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" */private List<String> permissionList = new ArrayList<>();","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"ERrqdQuLJod1WIxc6lhc7oFDnBc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）在 Spac؜eUserAuthManager 中新增获取权限列表的方法，注意要区分公共图库、私有空间和团队空间，对于有权限的情况，可以返回 “管理员权限” 列表。o6Yj84zW69d0E4h5Ip3Pjn74ic7hr+Ptx1j+Cm21k9g=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"MSUmdp5YkojE8jxFyEVcItFunsh","block_type":14,"code":{"elements":[{"text_run":{"content":"public List<String> getPermissionList(Space space, User loginUser) {\n    if (loginUser == null) {\n        return new ArrayList<>();\n    }\n    // 管理员权限\n    List<String> ADMIN_PERMISSIONS = getPermissionsByRole(SpaceRoleEnum.ADMIN.getValue());\n    // 公共图库if (space == null) {\n        if (userService.isAdmin(loginUser)) {\n            return ADMIN_PERMISSIONS;\n        }\n        return new ArrayList<>();\n    }\n    SpaceTypeEnum spaceTypeEnum = SpaceTypeEnum.getEnumByValue(space.getSpaceType());\n    if (spaceTypeEnum == null) {\n        return new ArrayList<>();\n    }\n    // 根据空间获取对应的权限switch (spaceTypeEnum) {\n        case PRIVATE:\n            // 私有空间，仅本人或管理员有所有权限if (space.getUserId().equals(loginUser.getId()) || userService.isAdmin(loginUser)) {\n                return ADMIN_PERMISSIONS;\n            } else {\n                return new ArrayList<>();\n            }\n        case TEAM:\n            // 团队空间，查询 SpaceUser 并获取角色和权限SpaceUser spaceUser = spaceUserService.lambdaQuery()\n                    .eq(SpaceUser::getSpaceId, space.getId())\n                    .eq(SpaceUser::getUserId, loginUser.getId())\n                    .one();\n            if (spaceUser == null) {\n                return new ArrayList<>();\n            } else {\n                return getPermissionsByRole(spaceUser.getSpaceRole());\n            }\n    }\n    return new ArrayList<>();\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Ar5fdJJlKosYnyxIb82cm6n6n0c","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）修改获取؜空间详情和图片详情的接口 getSpaceVOById、getPictureVOById，增加获取权限列表的逻辑。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"VdrvdNTXRov87axsXLXc4sJVnrc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"获取空间详情接口：OV4I80kv0cP2dox35o771C+j0cD0caQ3fcjbjWSOsKU=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Ao5BdcQkVopwGHxlA59cDDC0ncd","block_type":14,"code":{"elements":[{"text_run":{"content":"@GetMapping(\"/get/vo\")public BaseResponse<SpaceVO> getSpaceVOById(long id, HttpServletRequest request) {\n    ThrowUtils.throwIf(id <= 0, ErrorCode.PARAMS_ERROR);\n    // 查询数据库Space space = spaceService.getById(id);\n    ThrowUtils.throwIf(space == null, ErrorCode.NOT_FOUND_ERROR);\n    SpaceVO spaceVO = spaceService.getSpaceVO(space, request);\n    User loginUser = userService.getLoginUser(request);\n    List<String> permissionList = spaceUserAuthManager.getPermissionList(space, loginUser);\n    spaceVO.setPermissionList(permissionList);\n    // 获取封装类return ResultUtils.success(spaceVO);\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"WYk7d9RyVoutJMxeBeKcvDA0nqf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"获取图片详情؜接口，注意即使空间 id 不存在（公共图库）也要获取权限列表，管理员会获取到全部权限，这样前端才能顺利展示出操作按钮：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GNY6duTyJoBBOkxFedEckLUGnFL","block_type":14,"code":{"elements":[{"text_run":{"content":"@GetMapping(\"/get/vo\")public BaseResponse<PictureVO> getPictureVOById(long id, HttpServletRequest request) {\n    ThrowUtils.throwIf(id <= 0, ErrorCode.PARAMS_ERROR);\n    // 查询数据库Picture picture = pictureService.getById(id);\n    ThrowUtils.throwIf(picture == null, ErrorCode.NOT_FOUND_ERROR);\n    // 空间的图片，需要校验权限Space space = null;\n    Long spaceId = picture.getSpaceId();\n    if (spaceId != null) {\n        boolean hasPermission = StpKit.SPACE.hasPermission(SpaceUserPermissionConstant.PICTURE_VIEW);\n        ThrowUtils.throwIf(!hasPermission, ErrorCode.NO_AUTH_ERROR);\n        space = spaceService.getById(spaceId);\n        ThrowUtils.throwIf(space == null, ErrorCode.NOT_FOUND_ERROR, \"空间不存在\");\n    }\n    // 获取权限列表User loginUser = userService.getLoginUser(request);\n    List<String> permissionList = spaceUserAuthManager.getPermissionList(space, loginUser);\n    PictureVO pictureVO = pictureService.getPictureVO(picture, request);\n    pictureVO.setPermissionList(permissionList);\n    // 获取封装类return ResultUtils.success(pictureVO);\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"PSPUdOW2JoqiVKxHeb1ccqJ7nIb","block_type":4,"heading2":{"elements":[{"text_run":{"content":"空间数据管理","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Y4JWdWfNioaIZexJUA5cLDE5nmd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"根据需求和方案设计，我们要将旗舰版团队空间的图片数据进行单独管理，每个团队空间的图片数据存储到一张单独的表中，也就是 分表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OtP6dUop7oNLXlxKRYscotgynwh","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、什么是分库分表？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"I5ZTdmogNoeIIBxHmnmcXVHinhX","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"分库分表是؜一种将数据拆分到多个数据库或数据表中的设计策略，主要用于解决随着业务数据量和访问量增长带来的数据库性能问题。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"KWtkd87Lyo3AfYxDOcccQ2nKnGA","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"通过分库分表，可؜以减小单库或单表的数据量和访问压力，从而提高查询和写入效率、增强系统的高并发能力、优化大数据量下的性能表现；同时降低单点故障风险，实现更好的系统扩展性和容灾能力。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"VkYfdw5apopWOzxOsEzcRbyHnic","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、分库分表实现","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"PW7ndu1r2oW7SSxoaBtchTZondh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"如果让我们自己实现分库分表，应该怎么做呢？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"HEYOdWT8yoF0jpxFF4ccEIrCndb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"思路主要是基于业务需求设计 数据分片规则，将数据按一定策略（如取模、哈希、范围或时间）分散存储到多个库或表中，同时开发路由逻辑来决定查询或写入操作的目标库表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"RSrVdAu7boiN9OxPc9PcTq4WnQe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"简单来说，؜就是将数据写到不同的表、并且从相同的表读取数据，其实通过给 SQL 表名拼接动态参数就能实现：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"EGTzdseyBo0P4OxiB3Scxr1EnjF","block_type":14,"code":{"elements":[{"text_run":{"content":"select * from table_${分片唯一标识}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":56,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"AOyFdM88poUYEUxWOVVcrHFWnjl","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"但这只是最简单؜的情况，实际上，分库分表还涉及跨库表查询、事务一致性、分页聚合等复杂场景，还可能需要配套设计监控、扩容和迁移方案以确保系统的可维护性和扩展性。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"WTE6d1b7HoQrRAxvaxfc91vUnKf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"所以，不建议自己实现分库分表。本项目中，鱼皮将使用主流的分库分表框架 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"Apache ShardingSphere","text_element_style":{"bold":false,"inline_code":false,"italic":false,"link":{"url":"https%3A%2F%2Fshardingsphere.apache.org%2F"},"strikethrough":false,"underline":false}}},{"text_run":{"content":" 带大家实现。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IPH6dfEDSoAFfrxiLIScLCVYnZb","block_type":5,"heading3":{"elements":[{"text_run":{"content":"3、ShardingSphere 分库分表","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"DOokdJG20o2vl7xCYeNcc54TnBc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"Apache ؜ShardingSphere 提供了开箱即用的分片策略、灵活的配置能力以及对跨库查询、事务一致性、读写分离等复杂功能的全面支持。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OWqtdjwwboLe1LxvIknc5oLVnfb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"它又分为 2 ؜大核心模块 ShardingSphere-JDBC 和 ShardingSphere-Proxy，我用一张表格来列举 2 者的区别：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"UTNydF03Po5fPTx7IjXclf4fnAh","block_type":30,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","sheet":{"token":"MyYvs08R6hOeLktIeLjciQv1nnh_zl2mKx"}},{"block_id":"PPf6dnUz8oJRKuxMSwJclNSnn8f","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"对大多数 Java ؜项目来说，选择 ShardingSphere-JDBC 就足够了；对于跨语言的大型分布式项目、或者公司内有技术部门统一管理基础设施的情况下，再考虑使用 ShardingSphere-Proxy。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"AueCdRWRmoQ7JWxOuXSc1UM1nJg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"本项目也将؜使用 ShardingSphere-JDBC，在依赖文件中引入：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZINodnYj9opI0xxXhnUc1aIfnvf","block_type":14,"code":{"elements":[{"text_run":{"content":"<!-- 分库分表 --><dependency><groupId>org.apache.shardingsphere</groupId><artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId><version>5.2.0</version></dependency>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":66,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"KV5QdpyilomYd1x0NPEctM0Mnbf","block_type":5,"heading3":{"elements":[{"text_run":{"content":"4、分库分表策略 - 静态分表","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"RtdPdYIsCoH67UxjJ0Mcx7lfnne","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"分库分表的؜策略总体分为 2 类：静态分表和动态分表，下面先讲静态分表。Dlfw8NwnEDAWu8E/AQcY7dm3A98behgssP1uNM9pOf8=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"UvZrd0bjUo2BqLxjuNNcfM2VnIe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"在设计阶段，分表的数量和规则就是固定的，不会根据业务增长动态调整，比如 picture_0、picture_1。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SPMadVHKMoh42yxujuPcghf8nFf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"分片规则通؜常基于某一字段（如图片 id）通过简单规则（如取模、范围）来决定数据存储在哪个表或库中。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IjfRdCpyfo5Q5oxII4BcK0lQnnd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"这种方式的؜优点是简单、好理解；缺点是不利于扩展，随着数据量增长，可能需要手动调整分表数量并迁移数据。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OkV7d6DWuoqezgxDwogc74UZnPb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"举个例子，图片表按图片 id 对 4 取模拆分：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"RFWqdHN0QoLU4nxVf6Xc4msCnkM","block_type":14,"code":{"elements":[{"text_run":{"content":"String tableName = \"picture_\" + (pictureId % 4); // picture_0 ~ picture_3","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Z0IzdWrHMocga4xIz26cQZXunlh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"静态分表的实现很简单，直接在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"application.yml","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 中编写 ShardingSphere 的配置就能完成分库分表，比如：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"URSxdAbc4oSHNNxWdbWcA9cVnSd","block_type":14,"code":{"elements":[{"text_run":{"content":"rules:sharding:tables:picture:actualDataNodes: ds0.picture_${0..2} # 3张分表：picture_0, picture_1, picture_2tableStrategy:standard:shardingColumn: pictureId       # 按 pictureId 分片shardingAlgorithmName: pictureIdModshardingAlgorithms:pictureIdMod:type: INLINEprops:algorithm-expression: picture_${pictureId % 3} # 分片表达式","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":67,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"FZrcdgtEdoxdBQxPEejcTQE7nme","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"你甚至不需要修改任何业؜务代码，在查询 picture 表（一般叫逻辑表）时，框架会自动帮你修改 SQL，根据 pictureId 将查询请求路由到不同的表中。如果要进行分页多条数据查询，你只需要写一条查询逻辑表的 SQL 语句即可：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"WCNJdwtRTo9s8Dx5guXcmtXDnhf","block_type":14,"code":{"elements":[{"text_run":{"content":"SELECT * FROM picture;","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"C1awdejv3oFl4pxpXI8cjRufnhe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"实际上，ShardingSphere 将查询逻辑表 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 的请求自动路由到所有实际分表 picture_1、picture_2 ... picture_N，获取到数据后，在中间件层自动合并结果并返回给应用程序。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Dxjud5xyTo4MzWxVlpZce9WwnIc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"5、分库分表策略 - 动态分表","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"TUqcd6PDJoATZAxFuAecaWBDn2g","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"动态分表是指分表的数量可以根据业务需求或数据量动态增加，表的结构和规则是运行时动态生成的。举个例子，根据时间动态创建 picture_2025_01、picture_2025_02。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"O2hVdHSjQoZTx8xZ6gVcIQG9n3b","block_type":14,"code":{"elements":[{"text_run":{"content":"String tableName = \"picture_\" + LocalDate.now().format(\n    DateTimeFormatter.ofPattern(\"yyyy_MM\")\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":");","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"COG9dyYk3ouXN9xFRiecHoV8nBb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"显然，动态分表更؜灵活、扩展性强，适合数据量快速增长的场景；但缺点是实现更复杂，需要动态生成表并维护表的元信息。如果没有控制好，说不定分表特别多，反而影响了数据库的性能。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"O1FJdM2FroyKtkxenhwcn0xNngb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"动态分表的؜实现就比较麻烦了，首先要自定义分表算法类，还要在代码中编写动态创建表的逻辑。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Eyovdf5yHoblYFxoawyccKCSn7f","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"自定义分表算法类：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"NxpcdIGXloWwB9xUGarczempndf","block_type":14,"code":{"elements":[{"text_run":{"content":"public class PictureShardingAlgorithm implements StandardShardingAlgorithm<Long> {\n\n    @Overridepublic String doSharding(Collection<String> availableTargetNames, PreciseShardingValue<Long> preciseShardingValue) {\n        // 编写分表逻辑，返回实际要查询的表名// picture_0 物理表，picture 逻辑表\n    }\n\n    @Overridepublic Collection<String> doSharding(Collection<String> collection, RangeShardingValue<Long> rangeShardingValue) {\n        return new ArrayList<>();\n    }\n\n    @Overridepublic Properties getProps() {\n        return null;\n    }\n\n    @Overridepublic void init(Properties properties) {\n\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"WTrSdOyVVoeQorxSpnPcgONVnof","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"对于我们的؜项目，由于空间是用户动态创建的，显然要使用动态分表，下面来实现。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"QHWFdkU6VoywzJxvywPcxNdXnFg","block_type":5,"heading3":{"elements":[{"text_run":{"content":"6、动态分表算法开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"SNBadDtWAodMtnxf58ac5KTQnob","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"根据需求，我们希望将每个旗舰版空间的图片单独存放在一起，显然是按照 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"spaceId","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 分表，那么分表的名称规则为 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture_${spaceId}","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"CB8Td2cp1oyd1bx7yitc4PpUnMg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）首先编؜写动态分表的配置，包括数据库连接、分表规则、分表算法：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"U3qZd3iPHohc7PxBog5ckFh6nGK","block_type":14,"code":{"elements":[{"text_run":{"content":"spring:# 空间图片分表shardingsphere:datasource:names: yu_pictureyu_picture:type: com.zaxxer.hikari.HikariDataSourcedriver-class-name: com.mysql.cj.jdbc.Driverurl: jdbc:mysql://localhost:3306/yu_pictureusername: rootpassword: 123456rules:sharding:tables:picture:actual-data-nodes: yu_picture.picture  # 动态分表table-strategy:standard:sharding-column: spaceIdsharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法sharding-algorithms:picture_sharding_algorithm:type: CLASS_BASEDprops:strategy: standardalgorithmClassName: com.yupi.yupicturebackend.manager.sharding.PictureShardingAlgorithmprops:sql-show: true","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":67,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"G7fYdSv7voFv50xA8R7cRkmenRb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"其中，有几个细节需要注意：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"UrvQdFrQ9o1oQ1xA2lmcuRzfnKe","block_type":13,"ordered":{"elements":[{"text_run":{"content":"actual-data-nodes","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 一般情况下是指定一段分表的范围，比如 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"yu_picture.picture_${0..9999}","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 表示有 picture_0 ~ picture_9999 这 10000 张分表。ShardingSphere 在执行分表查询时会校验要查询的表（比如 picture_123456789）是否在 actual-data-nodes 的配置范围内。但是由于 spaceId 是长整型，范围太大，无法通过指定范围将所有分表名称包含，导致无法通过框架内置的校验。所以此处将 actual-data-nodes 的值设置为逻辑表 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"yu_picture.picture","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"1"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"U5OKdpSXcoYqwgxnay7clKOGnKd","block_type":13,"ordered":{"elements":[{"text_run":{"content":"指定分表字段为 spaceId、分表算法为自定义的分片算法 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture_sharding_algorithm","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"GgJcdp9KyoHwtSxp5hEcm1x6nLc","block_type":13,"ordered":{"elements":[{"text_run":{"content":"配置自定义分片算法，采用基于自定义类的方式实现，算法的类名配置必须为类的绝对路径。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Z0WmdMNEhocMZmxPDOscNs5YnEf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）编写图片分表算法类，必须实现 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"StandardShardingAlgorithm","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 接口。核心是编写 doSharding 方法，根据 spaceId 获取到实际要查询的分表名，如果 spaceId 不存在分表（比如是私有空间）或者 spaceId 为空（公共图库），那么就从原表（逻辑表）picture 查询。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"E70QdmDxlozDc8xW2QwcxcnjnbP","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"之所以要做兼؜容，是因为虽然我们设计上只对团队空间进行分库分表，但是一旦引入了分库分表框架，查询 picture 表时就会触发分表逻辑。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"RxI1dyvGxoj1OgxxoXHcNVsAn6c","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"manager.sharding","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包下新建分表算法类：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"W7dId26JSo1KRnxJctocopAQnsg","block_type":14,"code":{"elements":[{"text_run":{"content":"public class PictureShardingAlgorithm implements StandardShardingAlgorithm<Long> {\n\n    @Overridepublic String doSharding(Collection<String> availableTargetNames, PreciseShardingValue<Long> preciseShardingValue) {\n        Long spaceId = preciseShardingValue.getValue();\n        String logicTableName = preciseShardingValue.getLogicTableName();\n        // spaceId 为 null 表示查询所有图片if (spaceId == null) {\n            return logicTableName;\n        }\n        // 根据 spaceId 动态生成分表名String realTableName = \"picture_\" + spaceId;\n        if (availableTargetNames.contains(realTableName)) {\n            return realTableName;\n        } else {\n            return logicTableName;\n        }\n    }\n\n    @Overridepublic Collection<String> doSharding(Collection<String> collection, RangeShardingValue<Long> rangeShardingValue) {\n        return new ArrayList<>();\n    }\n\n    @Overridepublic Properties getProps() {\n        return null;\n    }\n\n    @Overridepublic void init(Properties properties) {\n\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"KXmfdBi8dobmExxsBPRck1iMned","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）光有上述代码还不能完成动态分表，因为 availableTargetNames（可用的分表）始终为逻辑表名 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"！原因在于 ShardingSphere 在分片逻辑初始化时默认获取的是配置的 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"actual-data-nodes","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 中的目标表名，也就是我们写的固定值。这样还是无法通过 ShardingSphere 的查询校验，我们也没办法判断 spaceId 是否要分表：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"KEtAdKDlMoyylWx3O9kckFzGnGh","block_type":14,"code":{"elements":[{"text_run":{"content":"// availableTargetNames 始终为 picture，无法返回真实的分表if (availableTargetNames.contains(realTableName)) {\n    return realTableName;\n} else {\n    return logicTableName;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"GE35d7rdtoW14NxRJHrckSzvnQg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"既然框架自身不支持动态维护分表，那我们可以写一个分表管理器，自己来维护分表列表，并更新到 ShardingSphere 的 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"actual-data-nodes","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 配置中。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"LxxRdWhbboIz5JxL6KqcGUmenGg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"manager.sharding","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包下新建分表管理器类：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SDx6dH0BioQXYsxhbeoc7t7rnu1","block_type":14,"code":{"elements":[{"text_run":{"content":"@Component@Slf4jpublic class DynamicShardingManager {\n\n    @Resourceprivate DataSource dataSource;\n\n    @Resourceprivate SpaceService spaceService;\n\n    private static final String LOGIC_TABLE_NAME = \"picture\";\n\n    private static final String DATABASE_NAME = \"logic_db\"; // 配置文件中的数据库名称@PostConstructpublic void initialize() {\n        log.info(\"初始化动态分表配置...\");\n        updateShardingTableNodes();\n    }\n\n    /**\n     * 获取所有动态表名，包括初始表 picture 和分表 picture_{spaceId}\n     */private Set<String> fetchAllPictureTableNames() {\n        // 为了测试方便，直接对所有团队空间分表（实际上线改为仅对旗舰版生效）\n        Set<Long> spaceIds = spaceService.lambdaQuery()\n                .eq(Space::getSpaceType, SpaceTypeEnum.TEAM.getValue())\n                .list()\n                .stream()\n                .map(Space::getId)\n                .collect(Collectors.toSet());\n        Set<String> tableNames = spaceIds.stream()\n                .map(spaceId -> LOGIC_TABLE_NAME + \"_\" + spaceId)\n                .collect(Collectors.toSet());\n        tableNames.add(LOGIC_TABLE_NAME); // 添加初始逻辑表return tableNames;\n    }\n\n    /**\n     * 更新 ShardingSphere 的 actual-data-nodes 动态表名配置\n     */private void updateShardingTableNodes() {\n        Set<String> tableNames = fetchAllPictureTableNames();\n        String newActualDataNodes = tableNames.stream()\n                .map(tableName -> \"yu_picture.\" + tableName) // 确保前缀合法\n                .collect(Collectors.joining(\",\"));\n        log.info(\"动态分表 actual-data-nodes 配置: {}\", newActualDataNodes);\n\n        ContextManager contextManager = getContextManager();\n        ShardingSphereRuleMetaData ruleMetaData = contextManager.getMetaDataContexts()\n                .getMetaData()\n                .getDatabases()\n                .get(DATABASE_NAME)\n                .getRuleMetaData();\n\n        Optional<ShardingRule> shardingRule = ruleMetaData.findSingleRule(ShardingRule.class);\n        if (shardingRule.isPresent()) {\n            ShardingRuleConfiguration ruleConfig = (ShardingRuleConfiguration) shardingRule.get().getConfiguration();\n            List<ShardingTableRuleConfiguration> updatedRules = ruleConfig.getTables()\n                    .stream()\n                    .map(oldTableRule -> {\n                        if (LOGIC_TABLE_NAME.equals(oldTableRule.getLogicTable())) {\n                            ShardingTableRuleConfiguration newTableRuleConfig = new ShardingTableRuleConfiguration(LOGIC_TABLE_NAME, newActualDataNodes);\n                            newTableRuleConfig.setDatabaseShardingStrategy(oldTableRule.getDatabaseShardingStrategy());\n                            newTableRuleConfig.setTableShardingStrategy(oldTableRule.getTableShardingStrategy());\n                            newTableRuleConfig.setKeyGenerateStrategy(oldTableRule.getKeyGenerateStrategy());\n                            newTableRuleConfig.setAuditStrategy(oldTableRule.getAuditStrategy());\n                            return newTableRuleConfig;\n                        }\n                        return oldTableRule;\n                    })\n                    .collect(Collectors.toList());\n            ruleConfig.setTables(updatedRules);\n            contextManager.alterRuleConfiguration(DATABASE_NAME, Collections.singleton(ruleConfig));\n            contextManager.reloadDatabase(DATABASE_NAME);\n            log.info(\"动态分表规则更新成功！\");\n        } else {\n            log.error(\"未找到 ShardingSphere 的分片规则配置，动态分表更新失败。\");\n        }\n    }\n\n    /**\n     * 获取 ShardingSphere ContextManager\n     */private ContextManager getContextManager() {\n        try (ShardingSphereConnection connection = dataSource.getConnection().unwrap(ShardingSphereConnection.class)) {\n            return connection.getContextManager();\n        } catch (SQLException e) {\n            throw new RuntimeException(\"获取 ShardingSphere ContextManager 失败\", e);\n        }\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"DmU4dd8mJoreosxdUpecdJIfnCg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"上述代码虽؜然看起来比较复杂，但其实不难理解，主要做了这么几件事：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Q86GdehZaop1b7x8QuHcD9Ehnbc","block_type":13,"ordered":{"elements":[{"text_run":{"content":"将管理器注册为 Bean，通过 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"@PostConstruct","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 注解，在 Bean 加载后获取所有的分表并更新配置。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"1"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"BcRfdPfMRoyGivxuokTcey95n8c","block_type":13,"ordered":{"elements":[{"text_run":{"content":"编写获取分表列表的方法，从数据库中查询符合要求的空间列表，再补充上逻辑表，就得到了完整的分表列表。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"JYZSd1b1foNMbox8Cr8c9pQznce","block_type":13,"ordered":{"elements":[{"text_run":{"content":"更新 ShardingSphere 的 actual-data-nodes 动态表名配置。获取到 ShardingSphere 的 ContextManager，找到配置文件中的那条规则进行更新即可。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"LrP3dSw4dobtFxxy3xFcfquNnPb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"4）动态创建分表","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Xzigdi1Mpo2bD7x9WolcAk1pnKd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"在分表管理器中؜新增动态创建分表的方法，通过拼接 SQL 的方式创建出和 picture 表结构一样的分表，创建新的分表后记得更新分表节点。代码如下：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"NF8jdFvKcoXOrSxKTeucM8NPn1d","block_type":14,"code":{"elements":[{"text_run":{"content":"public void createSpacePictureTable(Space space) {\n    // 动态创建分表// 仅为旗舰版团队空间创建分表if (space.getSpaceType() == SpaceTypeEnum.TEAM.getValue() && space.getSpaceLevel() == SpaceLevelEnum.FLAGSHIP.getValue()) {\n        Long spaceId = space.getId();\n        String tableName = \"picture_\" + spaceId;\n        // 创建新表String createTableSql = \"CREATE TABLE \" + tableName + \" LIKE picture\";\n        try {\n            SqlRunner.db().update(createTableSql);\n            // 更新分表\n            updateShardingTableNodes();\n        } catch (Exception e) {\n            log.error(\"创建图片空间分表失败，空间 id = {}\", space.getId());\n        }\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"FrIgd2hliosAq5xfrhtcSRyMnhg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"注意，想要؜使用 MyBatis Plus 的 SqlRunner，必须要开启配置：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JB4IddLs9oeyTUxiTLecbBn3ndd","block_type":14,"code":{"elements":[{"text_run":{"content":"mybatis-plus:global-config:enable-sql-runner: true","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":67,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"WHY4dEsMxo25XBxjsqWch12Rn2g","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"然后在创建空间时，调用该方法：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"AKpidGEAuoDhv8x0RdBcJ1oInJe","block_type":14,"code":{"elements":[{"text_run":{"content":"// 如果是团队空间，关联新增团队成员记录if (SpaceTypeEnum.TEAM.getValue() == spaceAddRequest.getSpaceType()) {\n    SpaceUser spaceUser = new SpaceUser();\n    spaceUser.setSpaceId(space.getId());\n    spaceUser.setUserId(userId);\n    spaceUser.setSpaceRole(SpaceRoleEnum.ADMIN.getValue());\n    result = spaceUserService.save(spaceUser);\n    ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR, \"创建团队成员记录失败\");\n}\n// 创建分表\ndynamicShardingManager.createSpacePictureTable(space);\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"// 返回新写入的数据 idreturn space.getId();","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"WQypdQZdZorZpnxy840cFXolnRe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"至此，动态分表就开发完成了。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"EatHdu9UeoxhH2xzqLicTmninuh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"💡 其实 ShardingSphere 还提供了 hint 强制分表路由机制 来实现动态分表，允许在代码中强制指定具体的物理表，从而解决动态分表问题。但缺点是需要在每次查询或者操作数据时都显式设置表名，会给代码增加很多额外逻辑，不够优雅。所以不采用，大家了解一下即可。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"FLBVdCQcLoucYHxOcBpcV2aTnee","block_type":3,"heading1":{"elements":[{"text_run":{"content":"前端开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"SdqFdfILYoKUwOx5T3Tckr07n7d","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"团队空间的؜前端开发工作量不大，因为绝大多数页面都可以复用私有空间。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"YTUEdqxR1ocDVxxiPcpchzcMnLe","block_type":4,"heading2":{"elements":[{"text_run":{"content":"基础代码","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Mr4tdEEZWoyMERxUymqc5ig6nIb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"首先根据后؜端的枚举类和常量，定义空间类型相关常量、空间角色相关常量、空间权限常量：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"TGlcduaT8oj0LfxnOxDcArHEnVf","block_type":14,"code":{"elements":[{"text_run":{"content":"// 空间类型枚举export const SPACE_TYPE_ENUM = {\n  PRIVATE: 0,\n  TEAM: 1,\n}\n\n// 空间类型文本映射export const SPACE_TYPE_MAP: Record<number, string> = {\n  0: '私有空间',\n  1: '团队空间',\n}\n\n// 空间类型选项映射export const SPACE_TYPE_OPTIONS = Object.keys(SPACE_TYPE_MAP).map((key) => {\n  const value = Number(key) // 将字符串 key 转换为数字return {\n    label: SPACE_TYPE_MAP[value],\n    value,\n  }\n})\n\n// 空间角色枚举export const SPACE_ROLE_ENUM = {\n  VIEWER: \"viewer\",\n  EDITOR: \"editor\",\n  ADMIN: \"admin\",\n} as const;\n\n// 空间角色文本映射export const SPACE_ROLE_MAP: Record<string, string> = {\n  viewer: \"浏览者\",\n  editor: \"编辑者\",\n  admin: \"管理员\",\n};\n\n// 空间角色选项映射export const SPACE_ROLE_OPTIONS = Object.keys(SPACE_ROLE_MAP).map((key) => {\n  return {\n    label: SPACE_ROLE_MAP[key],\n    value: key,\n  };\n});\n\n/**\n * 空间权限常量\n */export const SPACE_PERMISSION_ENUM = {\n  SPACE_USER_MANAGE: \"spaceUser:manage\",\n  PICTURE_VIEW: \"picture:view\",\n  PICTURE_UPLOAD: \"picture:upload\",\n  PICTURE_EDIT: \"picture:edit\",\n  PICTURE_DELETE: \"picture:delete\",\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"} as const;","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"CpLRdjsGworsKuxOD3mcy5ann4N","block_type":4,"heading2":{"elements":[{"text_run":{"content":"创建团队空间","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"RRkSdUJ26oPiCexn43ZcrgZ3nxb","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、创建团队空间页面","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"D8QGd10troyQSXxWEorc898snkY","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"可以复用创建؜私有空间页面，通过请求参数的 type 字段来区分创建团队空间（type=1）还是私有空间（不传 type 或为 0）。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZAtpdNfv4owVvQxT7elc9UcUn3g","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）创建私有空间页面新增空间类别变量：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"MbgydKeNLo1wmMxLcWlcyr4unUe","block_type":14,"code":{"elements":[{"text_run":{"content":"// 空间类别const spaceType = computed(() => {\n  if (route.query?.type) {\n    return Number(route.query.type)\n  }\n  return SPACE_TYPE_ENUM.PRIVATE\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"})","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"UjQUd6HYvo34skxrIotcEgPNnEe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）提交表单时，额外传递 spaceType 字段：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BpUvd8Py6o1JAkxB8qecWzBAnLb","block_type":14,"code":{"elements":[{"text_run":{"content":"// 创建\nres = await addSpaceUsingPost({\n  ...formData,\n  spaceType: spaceType.value\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"})","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Ep5BdE0P0oHyw5xg4O1cXZY9nXd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）还可以修改标题的展示，体现出空间类别：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"J3R1dX8iKod3jExY10pcHGFVndd","block_type":14,"code":{"elements":[{"text_run":{"content":"<h2 style=\"margin-bottom: 16px\">\n  {{ route.query?.id ? '修改' : '创建' }}{{ SPACE_TYPE_MAP[spaceType] }}\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"</h2>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"KNcfdywIJowpGrxSKOfcrmllnN2","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"效果如图：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Q9dCd3JxSoV2M0xvdiscBhbTnP1","block_type":27,"image":{"align":2,"height":1010,"token":"QwzDbqcPuom9Vlxb0pTcPH0ZnVd","width":2139},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"JPKod0yumoorYNxIM7xcAYRPnZg","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、创建团队空间入口","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Ahxrd9u28osysnxW3duc05pXnCb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）给全局侧边栏增加创建团队按钮：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JQuXdpLTtoSKa0x4ScjcEqCtnzc","block_type":14,"code":{"elements":[{"text_run":{"content":"// 固定的菜单列表const fixedMenuItems = [\n  {\n    key: '/',\n    label: '公共图库',\n    icon: () => h(PictureOutlined),\n  },\n  {\n    key: '/my_space',\n    label: '我的空间',\n    icon: () => h(UserOutlined),\n  },\n  {\n    key: '/add_space?type=' + SPACE_TYPE_ENUM.TEAM,\n    label: '创建团队',\n    icon: () => h(TeamOutlined),\n  },\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"]","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Q4pzdmvNwol7xFx0xcLcQ1ZInef","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）点击菜单事件要改为 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"router.push(key)","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，否则无法携带参数跳转：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"XuoMdMvIqoSgQmx09zncNMFcnNf","block_type":14,"code":{"elements":[{"text_run":{"content":"// 路由跳转事件const doMenuClick = ({ key }: { key: string }) => {\n  router.push(key)\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Jrz7daOGioEdJExwEHkcKBIwntj","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）在全局侧؜边栏中加载 “我的团队空间列表”，每个团队空间作为一个菜单项展示。最终展示的菜单项 = 固定菜单 + 团队空间菜单，代码如下：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"NDRfdgQB7ocOeHxCHyecsGxxnKe","block_type":14,"code":{"elements":[{"text_run":{"content":"const teamSpaceList = ref<API.SpaceUserVO[]>([])\nconst menuItems = computed(() => {\n  // 没有团队空间，只展示固定菜单if (teamSpaceList.value.length < 1) {\n    return fixedMenuItems;\n  }\n  // 展示团队空间分组const teamSpaceSubMenus = teamSpaceList.value.map((spaceUser) => {\n    const space = spaceUser.spacereturn {\n      key: '/space/' + spaceUser.spaceId,\n      label: space?.spaceName,\n    }\n  })\n  const teamSpaceMenuGroup = {\n    type: 'group',\n    label: '我的团队',\n    key: 'teamSpace',\n    children: teamSpaceSubMenus,\n  }\n  return [...fixedMenuItems, teamSpaceMenuGroup]\n})\n\n// 加载团队空间列表const fetchTeamSpaceList = async () => {\n  const res = await listMyTeamSpaceUsingPost()\n  if (res.data.code === 0 && res.data.data) {\n    teamSpaceList.value = res.data.data\n  } else {\n    message.error('加载我的团队空间失败，' + res.data.message)\n  }\n}\n\n/**\n * 监听变量，改变时触发数据的重新加载\n */watchEffect(() => {\n  // 登录才加载if (loginUserStore.loginUser.id) {\n    fetchTeamSpaceList()\n  }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"})","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"NVRadfTpvoVBxFxDT7zcukeWn6e","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"效果如图：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Qg0zdKuzfo20y6xpmpfcXI6on3f","block_type":27,"image":{"align":2,"height":832,"token":"E5LKbO8AaoM98KxlCqTckuIMnsg","width":608},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"AbRKdSsPqoVpSwxpTeVcMaaan0e","block_type":4,"heading2":{"elements":[{"text_run":{"content":"空间成员管理","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"XdG3dN8NCoiZqTxXj2ycMrZUn9d","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、成员管理页面入口","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Q7ECdYR78otF8bxkKOXcxeYrnnf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"空间详情页؜的空间分析按钮左边增加成员管理按钮，点击后跳转到成员管理页面：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"T9IWdxmEyoKbjdx3gv8c8ilOnvd","block_type":14,"code":{"elements":[{"text_run":{"content":"<a-button\n  type=\"primary\"\n  ghost\n  :icon=\"h(TeamOutlined)\"\n  :href=\"`/spaceUserManage/${id}`\"\n  target=\"_blank\"\n>\n  成员管理\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"</a-button>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"UmaSd41gqoEqaLxBolrc7mt2nOe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"该页面还有؜一些细节可以优化，比如修改标题展示，区分空间类别：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"KOa3d72kfo0HpRx3vMDcWHkMnye","block_type":14,"code":{"elements":[{"text_run":{"content":"<h2>{{ space.spaceName }}（{{ SPACE_TYPE_MAP[space.spaceType] }}）</h2>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"TMVMd312qoexIJx9bVzcRsJgnFg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"切换空间时؜，应该重新获取空间信息和图片列表。可以使用 watch 来监听空间 id 变量实现：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"E8P0d7BPDoGNboxhOcxcfcuJnqf","block_type":14,"code":{"elements":[{"text_run":{"content":"watch(\n  () => props.id,\n  (newSpaceId) => {\n    fetchSpaceDetail()\n    fetchData()\n  },\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":")","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Gj3EdaZ2so1lWrxPdz1cxk9cn4B","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"效果如图：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"YWhOdAtXdow1StxlSADcYQzdnec","block_type":27,"image":{"align":2,"height":1127,"token":"UYDab5pd4ooWxyxPUZ2ccl6Vngc","width":2417},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"GOCTd21WyokoyyxPeWGc7us6nsd","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、空间成员管理页面","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"DwLldB9Pzo6XGqxfdUbcy4xDnlc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"参考语雀的؜空间成员管理，页面结构为添加成员表单 + 成员信息表格","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"YSV2dehf0oAp3SxlZA6cL9cUnBe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）复制空؜间管理页面，新建路由，该页面接受空间 id 作为动态参数，展示某个空间下的成员列表：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JwtGdQpvVotmH8xHS1vcP14pnJh","block_type":14,"code":{"elements":[{"text_run":{"content":"{\n  path: '/spaceUserManage/:id',\n  name: '空间成员管理',\n  component: SpaceUserManagePage,\n  props: true,\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"},","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"LIOZdCKhpozcGKxikwIcdarJn3f","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"该页面绝大؜多数代码都可以复用空间管理页面，只需要遵循流程修改即可。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GXScd86njo1h7rxrLnGcdrUTnDd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）定义表格列：o6Yj84zW69d0E4h5Ip3Pjn74ic7hr+Ptx1j+Cm21k9g=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GLhtdxikaoKXyWxE1SzcO2GAnfh","block_type":14,"code":{"elements":[{"text_run":{"content":"// 表格列const columns = [\n  {\n    title: '用户',\n    dataIndex: 'userInfo',\n  },\n  {\n    title: '角色',\n    dataIndex: 'spaceRole',\n  },\n  {\n    title: '创建时间',\n    dataIndex: 'createTime',\n  },\n  {\n    title: '操作',\n    key: 'action',\n  },\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"]","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"DJPpd1WSuoNqo2xVfFlcTS9mnHf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）调用接؜口以获取表格数据，此处不需要分页，直接展示所有成员：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Uec3dmq7hoEG5exczxbcTfsYnkb","block_type":14,"code":{"elements":[{"text_run":{"content":"// 定义属性interface Props {\n  id: string\n}\n\nconst props = defineProps<Props>()\n\n// 数据const dataList = ref([])\n\n// 获取数据const fetchData = async () => {\n  const spaceId = props.idif (!spaceId) {\n    return\n  }\n  const res = await listSpaceUserUsingPost({\n    spaceId,\n  })\n  if (res.data.data) {\n    dataList.value = res.data.data ?? []\n  } else {\n    message.error('获取数据失败，' + res.data.message)\n  }\n}\n\n// 页面加载时请求一次onMounted(() => {\n  fetchData()\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"})","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"AVI4dUJRJoFMAlxQlUycUWqZneg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"4）自定义表格列؜，展示用户信息、空间角色、创建时间和操作按钮。由于可修改的成员信息只有 “角色”，所以可以直接将空间角色渲染为下拉框选择器组件，便于管理员操作。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"LMkCdtlO3oa401xzATHcIseWnYb","block_type":14,"code":{"elements":[{"text_run":{"content":"<a-table :columns=\"columns\" :data-source=\"dataList\">\n  <template #bodyCell=\"{ column, record }\">\n    <template v-if=\"column.dataIndex === 'userInfo'\">\n      <a-space>\n        <a-avatar :src=\"record.user?.userAvatar\" />\n        {{ record.user?.userName }}\n      </a-space>\n    </template>\n    <template v-if=\"column.dataIndex === 'spaceRole'\">\n      <a-select\n        v-model:value=\"record.spaceRole\"\n        :options=\"SPACE_ROLE_OPTIONS\"\n        @change=\"(value) => editSpaceRole(value, record)\"\n      />\n    </template>\n    <template v-else-if=\"column.dataIndex === 'createTime'\">\n      {{ dayjs(record.createTime).format('YYYY-MM-DD HH:mm:ss') }}\n    </template>\n    <template v-else-if=\"column.key === 'action'\">\n      <a-space wrap>\n        <a-button type=\"link\" danger @click=\"doDelete(record.id)\">删除</a-button>\n      </a-space>\n    </template>\n  </template>\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"</a-table>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"RjjldbS2eoTtqrx22YAcOo7Un1c","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"编辑空间角色的函数：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"MnTodsEACoxaKYxs8lJcZeAQnoc","block_type":14,"code":{"elements":[{"text_run":{"content":"const editSpaceRole = async (value, record) => {\n  const res = await editSpaceUserUsingPost({\n    id: record.id,\n    spaceRole: value,\n  })\n  if (res.data.code === 0) {\n    message.success('修改成功')\n  } else {\n    message.error('修改失败，' + res.data.message)\n  }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Sl6GdB13IoO1srxcXIRcWX5JnGb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"删除成员的函数：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JzOHdZ1vVoiH6jxSAO5cmqtFnGc","block_type":14,"code":{"elements":[{"text_run":{"content":"const doDelete = async (id: string) => {\n  if (!id) {\n    return\n  }\n  const res = await deleteSpaceUserUsingPost({ id })\n  if (res.data.code === 0) {\n    message.success('删除成功')\n    // 刷新数据fetchData()\n  } else {\n    message.error('删除失败')\n  }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"LPQAdLsqDo86jxxMRe0cHBLYnfh","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"5）在表格上方编写添加成员表单，默认角色是 “浏览者”","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"NL3cdZxIToPsQFxDBAXcHj9WnQf","block_type":14,"code":{"elements":[{"text_run":{"content":"<a-form layout=\"inline\" :model=\"formData\" @finish=\"handleSubmit\">\n  <a-form-item label=\"用户 id\" name=\"userId\">\n    <a-input v-model:value=\"formData.userId\" placeholder=\"请输入用户 id\" allow-clear />\n  </a-form-item>\n  <a-form-item>\n    <a-button type=\"primary\" html-type=\"submit\">添加用户</a-button>\n  </a-form-item>\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"</a-form>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"PmlTdYjYionzRTxescEcS1xQneg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"编写表单项变量和提交函数：yi1IufxwB+DdOaJwwH8/l6alapeIALuCr05e5aD9zhc=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"E9c2dBYP7oueGWxBhyLcUKJknCe","block_type":14,"code":{"elements":[{"text_run":{"content":"// 添加用户const formData = reactive<API.SpaceUserAddRequest>({})\n\nconst handleSubmit = async () => {\n  const spaceId = props.idif (!spaceId) {\n    return\n  }\n  const res = await addSpaceUserUsingPost({\n    spaceId,\n    ...formData,\n  })\n  if (res.data.code === 0) {\n    message.success('添加成功')\n    // 刷新数据fetchData()\n  } else {\n    message.error('添加失败，' + res.data.message)\n  }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"KAEZd0panoI8RfxDV5acPA7lnHd","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"页面效果如؜图： ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GhyYdKG6qomGzixqXUIcYaFZnf5","block_type":27,"image":{"align":2,"height":884,"token":"WSuCbjs3YoE0aExAhdhcVkkjnRb","width":2209},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"K4GRdqdjtoJ6nQxV9xbc9jQBnec","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"      ‌         ‌         ﻿       ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BJZOdr74Oo8m0px6WWKcFcIDnsc","block_type":4,"heading2":{"elements":[{"text_run":{"content":"成员权限控制","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"IRHrdUASgo7Tgox945cc37rqnYd","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、需求梳理","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"M6drd3Lf5oEiT4xhPVgcKmYmn4e","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"需求：用户没有某个操作权限时，不应该看到对应的操作按钮。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"VAtld72ohonR92xW3CLcpZnjnVb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"首先梳理一下页面和需要控制权限的按钮，以及对应的权限：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OHVfdCOL2oYoMIxgJzGc9ziDnsc","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）空间详情页","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SVqwdGvVCoMyZBxLgmQc9UeAnab","block_type":12,"bullet":{"elements":[{"text_run":{"content":"图片编辑按钮：需要 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture:edit","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 权限","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"MXt0dHaJRoaWuoxxvo7cPTSynlg","block_type":12,"bullet":{"elements":[{"text_run":{"content":"图片删除按钮：需要 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture:delete","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 权限","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"RIBXds0iWoz9qCxHxGSch0NknEb","block_type":12,"bullet":{"elements":[{"text_run":{"content":"成员管理按钮：需要 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"spaceUser:manage","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 权限","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"UP2CdsPVPoZV7TxmjCDcNrImnKh","block_type":12,"bullet":{"elements":[{"text_run":{"content":"空间分析按钮：需要 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"spaceUser:manage","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 权限","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"XD4qd2XRwo6VgGxHTywcW0FZn1c","block_type":12,"bullet":{"elements":[{"text_run":{"content":"上传图片按钮：需要 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture:upload","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 权限","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"BHwEdc1m2o4ttLxnZ42crb7Sndf","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）图片详情页","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"YN4gdc0oJoXCQMx2Fqic92qYnud","block_type":12,"bullet":{"elements":[{"text_run":{"content":"图片编辑按钮：需要 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture:edit","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 权限","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"RZXNd0vSooiyHLxRnwycehtPndf","block_type":12,"bullet":{"elements":[{"text_run":{"content":"图片删除按钮：需要 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture:delete","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 权限","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"SN2Jd0BYXoVadHxOaw2cJlfwnXb","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、权限控制","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"TfHVdPOQBo8SXpxv7urcZoXCnUg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"1）空间详情؜页新增权限变量。由于每个权限检查的逻辑都是一致的（判断权限列表中是否包含需要的权限），可以编写一个通用的权限检查函数。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"C0mqdOOYYo1cKIxBpvUcSxtCnqb","block_type":14,"code":{"elements":[{"text_run":{"content":"// 通用权限检查函数function createPermissionChecker(permission: string) {\n  return computed(() => {\n    return (space.value.permissionList ?? []).includes(permission)\n  })\n}\n\n// 定义权限检查const canManageSpaceUser = createPermissionChecker(SPACE_PERMISSION_ENUM.SPACE_USER_MANAGE)\nconst canUploadPicture = createPermissionChecker(SPACE_PERMISSION_ENUM.PICTURE_UPLOAD)\nconst canEditPicture = createPermissionChecker(SPACE_PERMISSION_ENUM.PICTURE_EDIT)\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"const canDeletePicture = createPermissionChecker(SPACE_PERMISSION_ENUM.PICTURE_DELETE)","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"DzEDduBMooy25IxtlTtc9klvn6b","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"💡 其实也可以让后端计算好 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"canXXX","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，然后返回给前端直接用，不过差别不大。fSt6RG/C5xsLRBd3HLKO7bXpxIZZvsouo5hPOdlSe0g=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OmE4dRSTDoVY00x90RBcLEfvnoe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"2）给对应的操作按钮增加 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"v-if","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，比如创建图片按钮：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"D1kGdi92VoBUkOxk9skcBIrdnHf","block_type":14,"code":{"elements":[{"text_run":{"content":"<a-button\n  v-if=\"canUploadPicture\"\n  type=\"primary\"\n  :href=\"`/add_picture?spaceId=${id}`\"\n  target=\"_blank\"\n>\n  + 创建图片\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"</a-button>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"TmSvdju2vo7wAsxzbqmcdl9dnng","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"3）图片列؜表组件支持控制编辑和删除按钮的隐藏，由父组件传递属性：OV4I80kv0cP2dox35o771C+j0cD0caQ3fcjbjWSOsKU=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SXKSdzwHKoyWUjxYXozcIVBZn1c","block_type":14,"code":{"elements":[{"text_run":{"content":"interface Props {\n  dataList?: API.PictureVO[]\n  loading?: boolean\n  showOp?: boolean\n  onReload?: () => void\n  canEdit?: boolean\n  canDelete?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  dataList: () => [],\n  loading: false,\n  showOp: false,\n  canEdit: false,\n  canDelete: false,\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"})","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"KTOSd1CA4o8x9mxLcw9cl9byngg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"页面代码：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SAIydM1Zio73b8xsjTwctqjpnh3","block_type":14,"code":{"elements":[{"text_run":{"content":"<edit-outlined v-if=\"canEdit\" @click=\"(e) => doEdit(picture, e)\" />\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"<delete-outlined v-if=\"canDelete\" @click=\"(e) => doDelete(picture, e)\" />","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"J2fIdmRlIokCy3xZlllcT4p2nWe","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"空间详情页就可以将权限变量传递给该组件了：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"A1rtd4Kfio7IRKxVkogcw42cnUb","block_type":14,"code":{"elements":[{"text_run":{"content":"<!-- 图片列表 -->\n<PictureList\n  :dataList=\"dataList\"\n  :loading=\"loading\"\n  :onReload=\"fetchData\"\n  showOp\n  :canEdit=\"canEditPicture\"\n  :canDelete=\"canDeletePicture\"\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"/>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"XchfdM743oEJMjx6V6ucvqGxnse","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"4）图片详情页也按照上述方式进行修改，不再赘述：OV4I80kv0cP2dox35o771C+j0cD0caQ3fcjbjWSOsKU=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"K25tduiz2o9IHQxidBLcwwtOn4d","block_type":14,"code":{"elements":[{"text_run":{"content":"// 通用权限检查函数function createPermissionChecker(permission: string) {\n  return computed(() => {\n    return (picture.value.permissionList ?? []).includes(permission)\n  })\n}\n\n// 定义权限检查const canEdit = createPermissionChecker(SPACE_PERMISSION_ENUM.PICTURE_EDIT)\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"const canDelete = createPermissionChecker(SPACE_PERMISSION_ENUM.PICTURE_DELETE)","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"YiAgdqbj5olLZZxDzYqco2xpnHd","block_type":5,"heading3":{"elements":[{"text_run":{"content":"3、前端测试","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"EHc4dRk78ocojzxSEZ0cntc1nOb","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"涉及到权限的改动都要认真测试，可以主要测试以下情况：1jGyT1jdedQgDNFYA8T3BC8Rpod+tQXglYFmkZuCZXA=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"W4RCdcYEWovS2zxPQA7clcCGnNf","block_type":12,"bullet":{"elements":[{"text_run":{"content":"未登录操作公共图库、私有图库、团队图库","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"Wg2jdRKypoN5e8xnDgvc5gbqnXe","block_type":12,"bullet":{"elements":[{"text_run":{"content":"管理员操作公共图库、私有图库、团队图库","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"EWtNdL1vGoD0AqxgoHRc1m8PnGd","block_type":12,"bullet":{"elements":[{"text_run":{"content":"普通用户操作公共图库、私有图库、别人的私有图库","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"C4vhdtpHDoVfXjxCFvdciAYFnqe","block_type":12,"bullet":{"elements":[{"text_run":{"content":"协作者操作团队图库，可以看到编辑和删除按钮，但看不到成员管理按钮","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"FZQIdsYMIoCrEZxuxMIc19Bbnzb","block_type":12,"bullet":{"elements":[{"text_run":{"content":"浏览者操作团队图库，仅能查看图片，看不到编辑和删除按钮","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"FlBYdUnx8oJY1dxYKx6cXsYanNf","block_type":22,"divider":{},"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb"},{"block_id":"GjwOdDTCEoUx7pxkQSLcQEbqnAg","block_type":2,"parent_id":"VBtudRHNbosH8oxcBvIcbbk2nWb","text":{"elements":[{"text_run":{"content":"","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}}],"type":"docx"}