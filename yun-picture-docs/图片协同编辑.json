{"nodes":[{"block_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","block_type":1,"children":["H5w7d8V4fo7N5txldRocPhHhnkh","POnfd4grPofoyFxmJvxcPWh1nce","OVXDdCE37oqv3Kx8q0lcUbQFnoe","H47XdFkh6oM11IxHegtcVLK1nNc","MoLidieTqo4vW5xedOqc2ZTmntg","OtUpdv65Zo7RyZxcgxVc8KNqnnf","NDx6dUVPnoZf3hx0wKLcWjIWnqg","D819d9XlgoGSgSxpcPacEsOcnEd","Ww0Vd4bTjoSd26xvd85cxPMonUb","GFUPdPreOonU6nxAZ9QcolCNnne","MwCtd4DZvoTcMbxVbWscucSMnrd","QXKJdyGcpolcZtx6oT7c4Mkenzd","VCEpdZQOvoeANMxMCEucSuZdnFh","UjdId0vo6oqc10xipALcoSp9nLd","KYGadvAxrojVfzxS3X6cb6eZnlg","ZtH6dVwAQoWqEjxXfrCcg1xnnTd","HC7ydSjdQoTzMixMH5RcpcSln2f","Nq9zdhYp2op8iwxYUUEcu2iSnmh","DalYdlvmtoGo1wxOwYPc2WEjn5b","VHDpddaVnoYZZTxYVY6cS45MnFh","YYtHdlr5Do0YHZxSMyocgVPknqd","ZVcDdMI97oxRA9xKVYuc0A89nmb","Xyc7d2S5voAK1mxyckJcJr4gnwe","RUCwdbcM0orSqbxpE9yc7f92nEd","G2UDd4JlmoXwBZxFGRMcENxqnTg","C88mdQf2dodxJ9xZaD9cauSXnwc","NIA6dcv7YoVbjBx5jYccrdGvnue","Z3x6dh59HoEDP0xr9UDcuPgdnHc","OREId10V6oC8o1xHjLDcFgG0npf","F69sdqJS6o0LOHxzHpPcqjQgnaf","T07ud2XwroaBNPxvlK7cxsflnwc","RJhbdQLo9omeGTxWzeSc0Xsen3g","YbYvdeYZpoWRrVxAlEIcAZ58n0e","Uj7edkuybo3VFfxW0ldcTdqRnOI","LbNGder0OoTecFxLlshcSGm7nEf","JPhwd30O7o3UmuxWamDcVI94nSc","EqBWd8vpqokr2Xxlhy5cbgm7nle","JYtldRc41orDP1xMpBocaR9KnSc","KAcadVUQSoU0t1xpFSNcbGucnEe","OdLQdJyOZoHOS1xWhkAcAPTbnee","O3mHdzWJAonabsxIrzgcw6q8nog","CXqxdITbIofOnrxprafcPnK0nag","WDNGdrtFVorsAhxSmcncJonUnQg","OgmLdG2A6odbP9xRHu6cUAWDn5b","VgUjdizawoHL7vx4BSBcw8ggnWd","HAyldt5bSotubwxcmXkcQKgEnBf","JB3wdA1TkoYKyYxP9VCcxq8HnAb","IKyrd0jaFolwrnxCPiCcjX3Hnog","AFK7daPpYon3gTxy1FIcKmzInld","M3D5dZzGsoye6ZxYJgvcqq43n6g","UlLKdsFbLoTmgYxWgEyc9ybFnab","ZR2Jd1GU0owKC5xZEQecF7jqnHc","CcFkdyFuao4IbXxJCMKc2DWnnzd","YFrpdazW3o1hbNxGoVrczHcInuc","DiHnduBUcoo3ZtxHdS5cDcFVnYe","WYqZdn4e7oSkCRx0TgrcUvGlnxf","ZajKdBR2doJye2xrsnxcj70TnLg","L0sQdMrRqowMtaxWhRAcuVyOnWh","FyJtdjTYsoORmcxgMLQcLk4Sn4b","H803do62yo19hgxzNf4cDlwtnWq","OkXcd4Fa6o3blQxVylZcd4BanCf","Z3Dbdfrp6ooN1RxP32GcTqKanKd","JmWhd27LmoFfi8xuJaGcsc3snjg","IgEMd5Reuoubo7x4YEscsN9hnJh","NVMydcO9roCv53xZ4xGc7gIVnxu","XJ9qdVl80o9rAFxpyVyczLetnqe","QHRpdhn5GoiTUGxAEeucBHf4nwd","Tk7Wd4cCposVypxv5xOcVXewnHf","UTnkd84exoqntPxJeSOc72Xcnye","XMt8dyHh2ooDjXxAsyacGwQTnDg","Arv2de7nzoFAYaxgEsPcb8K2nAf","J3tLdqyMMoKvAexWKUpcHEtMn7c","Dd3hdyMqZo2o0pxnDZocdgfjnac","IX5Mdbnthoz71WxihzDcC2A9nDg","Q35wdpy3aoyou8x79xzc3I0HnCh","GynrdvID6octIvxBTEzcPovynVe","BJS3dR8EdojuzGxMdlVcbOxPnXr","IJw5do89moPwi2xzJ8KcPKf4nWh","Sir8dal1FoNRi2xEvOxcgs1BnGh","QLcwdTshfoxIwXx4cNscQGnlnSb","KZUOdAfsboVnqrxExSjc5Zs1nue","MudUdziEFoLtYBxwTCOcgd9qnr9","VqEtdvMgKoEsraxmBVPczMQSngb","UyVgda8EQoxe88xObRTcCx8JnHb","A3vyd2unfocQi7xkwAtcsxA0nWe","QPqDdQDC7oLYZfxcLuZceLpenqf","XeHedL56aoWrzZxvNqWccjq6nMe","FcKxdO7KmoUfmTxkf5JcuG1Tn8b","ESALdxctJoljS0xlMBEcoBq2nKg","EsaMdUgzXooGCzxMnAEcTvbMnUg","E6lzdMMSmoewwuxffiOceYlFnzh","Q5lUdT3VvoCIrxx9B4McwBFAn9b","Uh5tdRyUVoHau1xN6DFcd0bPntT","Pwy6dwx00oQDwOx6LjYciMrCnQf","JjBcdM8fSokrOdxjGvyc9ThanTh","ZBo4dckpuotMYjxmH2OcAMhGnOg","H6VZdo3Zoo7yLFxD1oTcw9cSnUc","CJM6dFESJoRgzNxWKg4cHeVYnje","MXUld7gn0obO0dxm3OmcI8nqnhf","LrRyd1m58oSABhxNWRGcDVmKnbg","ZcGCdf7A1odb9YxMem9cYq2ZnIf","DOZqdftoTojdD3xaYnBcnFVPnxc","MoJsdoKahovt6zxnBE8cL6aWnuc","OHLkdJM6soLb3bxaL4CcmmvcnBc","TZBMd7HZcoxjEtxF2pgcs9ZqnRe","T38RdVl1EoNP5yxFzeacwu7knrh","HL9adpRMxoT7Wxx196WcTPGPnvh","CeE3d5GNto9JGfxfHgBcAwEFnEf","L84adNqFvo7VC3xfAjHcQxQyndf","VcaudqaHrozv5XxdAB1cVsrrniw","DzPedRniiookNmxrrAIc2SqEnEc","Mdo7dXtA4oRIyqxP87qcFIyZnNb","Ta1Vdmjn0oPgHkxvebBcZ8jhnaf","CjpZdOnTYorZi3xPnbSc9k8rnuh","JlBvdiMldoHxFGx4O4Xcjih7nih","MYeZdogXjoG2g8xivXjcmYqynrg","CA3hdF2eCo5M7WxFdkScyu7InZL","LYt0dWqLQofxTaxgkU1cATLunnR","Iddvd6nwvo4htXxmGzIc2M1inYd","SYZCdkUNNoqsyrxYB7Lc9ioinuf","BUT8dPySNov2H9xWG0bc7twRn2e","M1Mbd5bEZoKufextB5vcdpJDnFf","Lsl6dDtXEoHOESx6XavcT9BQn7d","DZFTd5XTIogAnCx6pRQcOOHgnXb","DitDdlWiUoP2ukxXlr2cJNDBnBk","VyITdhG48ov7P0xf3Sbc9kFqnhd","CYqYdCK7hoDhahxd6nZcfjVpn9b","TyfIdSol4oRGVox4pZCck183nhe","Ue10dRdIcodv4AxP4W3cAfDGneh","RAZNdeAokoAwpMxlO0rcfSMqnRe","JFjUdHt1oof9fMxwN6Sc5XS0nyK","T9F4dED6moT7sBxD0QIcZsYSnWb","WVLtdOs6ioWcb6xelGLcaEp9nTb","Rim8dYiq9oBLwdxc11mcfe1gn1f","Xg57dLWRjoSkHDxqDZtc6epWnKc","Fxu3d3u0Yoj7W9x2EumcPnG2nLg","XNbEdOB4qojgsAxc8pScGP2lnLb","Regxd1LKqo0TxsxzhlDcNYWrnlc","SCigdnSREobtdYxG3YYcDIJvntc","AUrpdkwZ3oCsjrxhoEtcZPJcnjc","MgyFdpsg8ocmp1xM1cEcmbTOnmb","IBBTdSGnvosV3rxzktbcXKMYnsg","LjV0dKqAMoZs4zxB8k8cvDTSnPd","QgVSduN6Zo0FNoxUu7lckEplnod","BnehdeiCfoJJrxxiDwvceD4Anyp","GLFYdLeSbo81UAxq3b4cVRLrn1c","Al9PdvmskoQdBrxNNw9cAUuHn1e","IniQdT1NEoFDkZxYG20ccoj2nih","X2tOdAhj0oDtUux7Lo8c1tIAnsc","VETndpNIGoM2BaxFdFycwxYJnyh","GPZCd2UeaocLwKxy0UGcqOFKncv","VUi7dxyfXo5mGUxqVHQcCSuhnCe","QJe4d9AUPoYmpoxODVlcqvoanyb","ZY0pdKzSio6j15xTD6gcOeg9nph","KffPddZZxoQWccxU8g4cmRxOnfZ","FYIKdFGUEot8RfxDcrUcz2xunnb","AuSEdxjAzoo1vnxYlgAc2JtHnfY","S7kTdIoM4ojtlvxLFYMcK6prnJf","ROfBdUBQMok6FExY6EAc0cc0nRh","AfDOdX4Reoy5x6xMePDcQo3Unrh","G99TdfqA9oPODixCIKdchxMfn1b","CsRhdp76goA1iaxarXmca6pbnco","WFMsdSQIRo0FflxWhxwcrIQyn0f","Qglvd2guCoGILqxgUWOcFiOjnYn","KNvodIvSLo41w3x4d4kchQs1nTb","OuXbdbVWSoYwuixFEAXcSOhsnBb","IPzOdXv0xompnWx6V09cAtRun7e","XDbldy9g6oWTYyxNFB2cmuEhnPd","Bdlhd1oMToNGzfxe4gQcRIOinmN","NteedeGsvoIbBxx1dKnc9PO2ndg","OzUTdmev7oGdmExLoJucSvFDnYg","DCxAdVuWOof5K8x0vIAc8kwGnHg","Xb7AdQzYSovnObxMCwKcjdyqnHg","ZTYFd4q0NoV4qixEupfc5RQJnUb","A2gcdcNZVojweRx2oXucLII8nmd","Xnq5dUfOsoyin7xwRugcw1PonEf","YUBmdoBfxomc6mx4VP6cE4xAnSe","J6MMd0avsoB2DLxe1ZbcyEfXn9d","PGnGdpm3Ro6HiZxD0P6cn4AxnOh","ZtE0dtCProfmBXxUXcBcLR7lnIh","TozbdAo03oDuFexRlilctEMjnkc","BWugdIWjqouBHbxXiCtc6xKJnfe","RfnZd2qIxoAq19xBrcHcynF1nKG","Lfkld5LDPo4yQxxVK6JcVZfVnug","YWVld3Av0oaRpixB38ycN85hnCg","Mb0udVNQAojrIJxMsHmcdxy9n4c","ByCpdLZzZok6DfxMC9jcpkbjnPb","GtaddDYVaoE1tMxj8YpcHBWrnzf","NoV0dqqH5oIUKixtx9rcO19znje","Js84dX7xXoTtukxxMRHclRlpnnb","KBiKdjyHToPOqmxswxncQQV4ntd"],"page":{"elements":[{"text_run":{"content":"图片协同编辑","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1}},"parent_id":""},{"block_id":"H5w7d8V4fo7N5txldRocPhHhnkh","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"上一节我们已؜经完成了团队空间的创建、成员管理和权限控制等功能。为了提高项目的商业价值，本节来完成本项目的亮点功能 —— 图片协同编辑。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"POnfd4grPofoyFxmJvxcPWh1nce","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"大纲：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OVXDdCE37oqv3Kx8q0lcUbQFnoe","block_type":12,"bullet":{"elements":[{"text_run":{"content":"图片协同编辑需求分析","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"H47XdFkh6oM11IxHegtcVLK1nNc","block_type":12,"bullet":{"elements":[{"text_run":{"content":"图片协同编辑方案设计","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"MoLidieTqo4vW5xedOqc2ZTmntg","block_type":12,"bullet":{"elements":[{"text_run":{"content":"图片协同编辑后端开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"OtUpdv65Zo7RyZxcgxVc8KNqnnf","block_type":12,"bullet":{"elements":[{"text_run":{"content":"图片协同编辑前端开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"NDx6dUVPnoZf3hx0wKLcWjIWnqg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"通过本节，你将学؜习到多人实时协作功能的设计开发，涉及 WebSocket、事件驱动设计、Disruptor 无锁队列等技术知识。学会后再去开发聊天室之类的业务，都会轻松很多。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"D819d9XlgoGSgSxpcPacEsOcnEd","block_type":3,"heading1":{"elements":[{"text_run":{"content":"需求分析","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Ww0Vd4bTjoSd26xvd85cxPMonUb","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"现在很多产؜品都有多人协作功能，比如协同文档、协同素材设计、协同代码编辑器等等，可以提高协作的效率。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GFUPdPreOonU6nxAZ9QcolCNnne","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"对于我们的项目，所谓的图片协同编辑功能，是在图片编辑的基础上增加了 “协同” 的概念。当用户编辑某张图片时，其他用户可以 实时 看到编辑效果和操作提示。如图：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"MwCtd4DZvoTcMbxVbWscucSMnrd","block_type":27,"image":{"align":2,"height":1006,"token":"HZRobpOkkoJZOpxaW83cF1a3n4v","width":1119},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"QXKJdyGcpolcZtx6oT7c4Mkenzd","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"注意，因为只有؜团队空间才会有多个用户编辑同一张图片，所以该功能只对团队空间开放，需要成员具有编辑权限。协同的图片编辑操作包括左旋、右旋、放大、缩小。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"VCEpdZQOvoeANMxMCEucSuZdnFh","block_type":22,"divider":{},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"UjdId0vo6oqc10xipALcoSp9nLd","block_type":3,"heading1":{"elements":[{"text_run":{"content":"方案设计","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"KYGadvAxrojVfzxS3X6cb6eZnlg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"虽然需求介؜绍很简单，但是涉及到多人协作的业务，有很多问题需要考虑，比如：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZtH6dVwAQoWqEjxXfrCcg1xnnTd","block_type":12,"bullet":{"elements":[{"text_run":{"content":"多个用户之间如何进行交互？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"HC7ydSjdQoTzMixMH5RcpcSln2f","block_type":12,"bullet":{"elements":[{"text_run":{"content":"如何防止协作编辑时出现冲突？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Nq9zdhYp2op8iwxYUUEcu2iSnmh","block_type":12,"bullet":{"elements":[{"text_run":{"content":"如何提高协作的实时性？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"DalYdlvmtoGo1wxOwYPc2WEjn5b","block_type":4,"heading2":{"elements":[{"text_run":{"content":"协作交互流程","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"VHDpddaVnoYZZTxYVY6cS45MnFh","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"多人协作时؜，每个用户的动作都需要通知到其他用户，收到通知消息的用户需要进行相应的处理。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"YYtHdlr5Do0YHZxSMyocgVPknqd","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"比如用户 A؜ 放大了图片，就需要给其他正在编辑的用户发送 “图片放大” 消息，其他用户收到这个消息后，需要同步放大自己界面上的图片。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZVcDdMI97oxRA9xKVYuc0A89nmb","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"这其实是一种 事件驱动 的架构设计思想，协作编辑中的每个用户动作本质上是一个 事件，执行动作时会产生事件并提交给服务器；服务器收到事件后，会转发给其他用户；其他用户收到事件后，就要作为事件的消费者来处理事件。流程如图：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Xyc7d2S5voAK1mxyckJcJr4gnwe","block_type":27,"image":{"align":2,"height":275,"token":"FbeqbmTBto4XRpx8LOzcgrNZnhb","width":1224},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"RUCwdbcM0orSqbxpE9yc7f92nEd","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"相比于生产者直接调用消费者，事件驱动模型的主要优点在于 解耦 和 异步性。在事件驱动模型中，生产者和消费者不需要直接依赖于彼此的实现，生产者只需触发事件并将其发送到事件分发器，消费者则根据事件类型处理逻辑。这样多个消费者可以独立响应同一事件（比如一个用户旋转了图片，其他用户都能同步），系统更加灵活，可扩展性更强。此外，事件驱动还可以提升系统的 并发性PVHq6NW9Nt5fXkQO/a1pmCEpMMQkmAtku92aHSjiX4c= 和 实时性，可以理解为多引入了一个中介来帮忙，通过异步消息传递，减少了阻塞和等待，能够更高效地处理多个并发任务。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"G2UDd4JlmoXwBZxFGRMcENxqnTg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"下面我们按照事件驱动的设计，来详细列举协作编辑的交互流程：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"C88mdQf2dodxJ9xZaD9cauSXnwc","block_type":30,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","sheet":{"token":"VoLfsSfPch4pX8tvVfkcQ5qtnIc_rMhEyP"}},{"block_id":"NIA6dcv7YoVbjBx5jYccrdGvnue","block_type":4,"heading2":{"elements":[{"text_run":{"content":"解决协作冲突","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Z3x6dh59HoEDP0xr9UDcuPgdnHc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、解决方案","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"OREId10V6oC8o1xHjLDcFgG0npf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"假设这样一؜种场景：张三和李四同时快速点击了十次旋转，最终的结果会是怎样的呢？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"F69sdqJS6o0LOHxzHpPcqjQgnaf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"如果所有事件都是按顺序处理的，那结果就很清晰了，但事实上，为了提高性能和响应速度，事件通常是 并发 的，而不是严格的顺序执行。这种并发操作会引发 协作冲突，导致其他用户看到的旋转效果是乱序的。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"T07ud2XwroaBNPxvlK7cxsflnwc","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"那么你会怎؜么解决协作冲突的问题呢？      ‌         ﻿         ‍        ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"RJhbdQLo9omeGTxWzeSc0Xsen3g","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"我们可以通过业务设计来减少开发成本，比如约定 同一时刻只允许一位用户进入编辑图片的状态，此时其他用户只能实时浏览到修改效果，但不能参与编辑；进入编辑状态的用户可以退出编辑，其他用户才可以进入编辑状态。类似于给图片编辑这个动作加了一把锁，直接从源头上解决了编辑冲突的问题。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"YbYvdeYZpoWRrVxAlEIcAZ58n0e","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"此时，协作؜编辑的交互流程又要增加 2 个动作 —— 进入编辑状态和退出编辑状态：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Uj7edkuybo3VFfxW0ldcTdqRnOI","block_type":30,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","sheet":{"token":"VoLfsSfPch4pX8tvVfkcQ5qtnIc_BL3Gyh"}},{"block_id":"LbNGder0OoTecFxLlshcSGm7nEf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"其实核心流程是前 5 行，但是考虑到前端传递了错误参数的情况，我们新增一种 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"ERROR","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 事件类型，可用于展示错误提示信息。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JPhwd30O7o3UmuxWamDcVI94nSc","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"在本项目中؜，我们就采用这种方案，不仅实现简单、流程清晰，也尽最大可能减少了编辑冲突的风险。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"EqBWd8vpqokr2Xxlhy5cbgm7nle","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"但这种方案的缺点也؜很明显，减少了实时协作的便利性，对于协作设计、协作编码、协作文档的场景，同一时间只能有一个用户编辑，提高的效率有限。所以这里再分享另外一种实时协同算法作为扩展知识。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JYtldRc41orDP1xMpBocaR9KnSc","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、扩展知识 - OT 算法","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"KAcadVUQSoU0t1xpFSNcbGucnEe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"实时协同 OT 算法（Operational Transformation）是一种支持分布式系统中多个用户实时协作编辑的核心算法，广泛应用于在线文档协作等场景。OT 算法的主要功能是解决并发编辑冲突，确保编辑结果在所有用户终端一致。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OdLQdJyOZoHOS1xWhkAcAPTbnee","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"OT 算法其实很好理解，先看下 3 个核心概念：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"O3mHdzWJAonabsxIrzgcw6q8nog","block_type":12,"bullet":{"elements":[{"text_run":{"content":"操作 (Operation)：表示用户对协作内容的修改，比如插入字符、删除字符等。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"CXqxdITbIofOnrxprafcPnK0nag","block_type":12,"bullet":{"elements":[{"text_run":{"content":"转化 (Transformation)：当多个用户同时编辑内容时，OT 会根据操作的上下文将它们转化，使得这些操作可以按照不同的顺序应用而结果保持一致。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"WDNGdrtFVorsAhxSmcncJonUnQg","block_type":12,"bullet":{"elements":[{"text_run":{"content":"因果一致性：OT 算法确保操作按照用户看到的顺序被正确执行，即每个用户的操作基于最新的内容状态。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"OgmLdG2A6odbP9xRHu6cUAWDn5b","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"其中，最重要的就是 转化 步骤了，相当于有一个负责人统一收集大家的操作，然后按照设定的规则和信息进行排序与合并，最终给大家一个统一的结果。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"VgUjdizawoHL7vx4BSBcw8ggnWd","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"举一个简单的例子，假设初始内容是 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"abc\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，用户 A 和 B 同时进行编辑：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"HAyldt5bSotubwxcmXkcQKgEnBf","block_type":12,"bullet":{"elements":[{"text_run":{"content":"用户 A 在位置 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"1","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 插入 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"x\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"JB3wdA1TkoYKyYxP9VCcxq8HnAb","block_type":12,"bullet":{"elements":[{"text_run":{"content":"用户 B 在位置 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"2","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 删除 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"b\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"IKyrd0jaFolwrnxCPiCcjX3Hnog","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"如果不使用 OT 算法，结果是：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"AFK7daPpYon3gTxy1FIcKmzInld","block_type":13,"ordered":{"elements":[{"text_run":{"content":"用户 A 操作后，内容变为 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"axbc\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"1"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"M3D5dZzGsoye6ZxYJgvcqq43n6g","block_type":13,"ordered":{"elements":[{"text_run":{"content":"用户 B 操作后，内容变为 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"ac\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"UlLKdsFbLoTmgYxWgEyc9ybFnab","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"如果直接应用 B 的操作到 A 的结果，得到的是 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"ac\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，对于 A 来说，相当于删除了 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"b\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，A 会感到一脸懵逼。1jGyT1jdedQgDNFYA8T3BC8Rpod+tQXglYFmkZuCZXA=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZR2Jd1GU0owKC5xZEQecF7jqnHc","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"如果使用 OT 算法，结果是：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"CcFkdyFuao4IbXxJCMKc2DWnnzd","block_type":13,"ordered":{"elements":[{"text_run":{"content":"用户 A 的操作，应用后内容为 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"axbc\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"1"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"YFrpdazW3o1hbNxGoVrczHcInuc","block_type":13,"ordered":{"elements":[{"text_run":{"content":"用户 B 的操作经过 OT 转化为删除 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"b\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"axbc\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 中的新位置","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"DiHnduBUcoo3ZtxHdS5cDcFVnYe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"最终用户 A 和 B 的内容都一致为 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"\"axc\"","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，符合预期。OT 算法确保无论用户编辑的顺序如何，最终内容是一致的。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"WYqZdn4e7oSkCRx0TgrcUvGlnxf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"当然，具体؜的 OT 算法还是要根据需求来设计了，协作密度越高，算法设计难度越大。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZajKdBR2doJye2xrsnxcj70TnLg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"此外，还有一种与 O؜T 类似的协同算法 CRDT（Conflict-free Replicated Data Type），其通过数学模型实现无需中心化转化的冲突解决，在离线协作场景中更具优势，感兴趣的同学可以自行了解。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"L0sQdMrRqowMtaxWhRAcuVyOnWh","block_type":4,"heading2":{"elements":[{"text_run":{"content":"提高协作实时性","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"FyJtdjTYsoORmcxgMLQcLk4Sn4b","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"在实时通讯的业务场؜景中，常用的技术方案包括长轮询、SSE 和 WebSocket。由于我们的业务需求需要实现频繁且高效的双向通信，因此我们选用 WebSocket 来实现即时通讯。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"H803do62yo19hgxzNf4cDlwtnWq","block_type":5,"heading3":{"elements":[{"text_run":{"content":"1、什么是 WebSocket？","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"OkXcd4Fa6o3blQxVylZcd4BanCf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"WebSocket 是一种 全双工通信协议，让客户端（比如浏览器）和服务器之间能够保持实时、持续的连接。和传统的 HTTP 请求-响应模式不同，WebSocket 是一条","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"“常开的隧道”","text_element_style":{"bold":true,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" ，连接的双方可以随时发送和接收数据，而不需要不断建立和关闭连接。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Z3Dbdfrp6ooN1RxP32GcTqKanKd","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"打个比方：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JmWhd27LmoFfi8xuJaGcsc3snjg","block_type":12,"bullet":{"elements":[{"text_run":{"content":"HTTP 就像点外卖： 每次下单（请求）- 到货（响应）都是一次独立的操作，完成后连接关闭。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"IgEMd5Reuoubo7x4YEscsN9hnJh","block_type":12,"bullet":{"elements":[{"text_run":{"content":"WebSocket 像是打电话：你打通了电话（建立连接），可以随时聊天（双向通信），直到挂断（关闭连接）。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"NVMydcO9roCv53xZ4xGc7gIVnxu","block_type":5,"heading3":{"elements":[{"text_run":{"content":"2、WebSocket 的应用场景","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"XJ9qdVl80o9rAFxpyVyczLetnqe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"WebSocket 的主要作用是 实现实时数据传输，适用于需要频繁交互或者实时更新数据的场景。比如：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"QHRpdhn5GoiTUGxAEeucBHf4nwd","block_type":12,"bullet":{"elements":[{"text_run":{"content":"即时通讯（聊天软件、实时协作工具）","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Tk7Wd4cCposVypxv5xOcVXewnHf","block_type":12,"bullet":{"elements":[{"text_run":{"content":"实时数据更新（股票行情、体育比赛比分）","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"UTnkd84exoqntPxJeSOc72Xcnye","block_type":12,"bullet":{"elements":[{"text_run":{"content":"在线游戏（多人实时互动）","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"XMt8dyHh2ooDjXxAsyacGwQTnDg","block_type":12,"bullet":{"elements":[{"text_run":{"content":"物联网（设备状态实时传输）","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Arv2de7nzoFAYaxgEsPcb8K2nAf","block_type":12,"bullet":{"elements":[{"text_run":{"content":"协同编辑（像语雀这样的多人协作编辑）","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"J3tLdqyMMoKvAexWKUpcHEtMn7c","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"通过 We؜bSocket，客户端与服务器之间能够显著减少消息传输的延迟，提高通信效率，同时降低数据传输的开销。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Dd3hdyMqZo2o0pxnDZocdgfjnac","block_type":5,"heading3":{"elements":[{"text_run":{"content":"3、WebSocket 和 HTTP 的关系","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"IX5Mdbnthoz71WxihzDcC2A9nDg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"WebSock؜et 和 HTTP 是两种不同的通信协议，但它们是紧密相关的，都是基于 TCP 协议、都可以在同样的端口上工作（比如 80 和 443）。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Q35wdpy3aoyou8x79xzc3I0HnCh","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"首先要明确，WebSocket 是建立在 HTTP 基础之上的！","text_element_style":{"bold":true,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" WebSocket 的连接需要通过 HTTP 协议发起一个握手（称为 HTTP Upgrade 请求），这个握手请求是 WebSocket 建立连接的前提，表明希望切换协议；服务器如果支持 WebSocket，会返回一个 HTTP 101 状态码，表示协议切换成功。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GynrdvID6octIvxBTEzcPovynVe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"握手完成后؜，HTTP 协议的作用结束，通信会切换为 WebSocket 协议，双方可以开始全双工通信。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BJS3dR8EdojuzGxMdlVcbOxPnXr","block_type":5,"heading3":{"elements":[{"text_run":{"content":"4、WebSocket 协作编辑的流程","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"IJw5do89moPwi2xzJ8KcPKf4nWh","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"通过 WebSo؜cket 实时通信的能力，可以将用户的编辑操作发给 WebSocket 服务器，再由服务器转发给其他连接服务器的用户前端，前端就可以根据操作处理图片。Dlfw8NwnEDAWu8E/AQcY7dm3A98behgssP1uNM9pOf8=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Sir8dal1FoNRi2xEvOxcgs1BnGh","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"具体的业务流程：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"QLcwdTshfoxIwXx4cNscQGnlnSb","block_type":13,"ordered":{"elements":[{"text_run":{"content":"建立连接之前，先进行用户权限校验；校验通过后，将登录用户信息、要编辑的图片信息保存到要建立的 WebSocket 连接的会话属性中。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"1"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"KZUOdAfsboVnqrxExSjc5Zs1nue","block_type":13,"ordered":{"elements":[{"text_run":{"content":"建立连接成功后，将 WebSocket 会话保存到该图片对应的会话集合中，便于后续分发消息给其他会话。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"MudUdziEFoLtYBxwTCOcgd9qnr9","block_type":13,"ordered":{"elements":[{"text_run":{"content":"前端将消息发送到后端，后端根据消息类型分发到对应的处理器。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"VqEtdvMgKoEsraxmBVPczMQSngb","block_type":13,"ordered":{"elements":[{"text_run":{"content":"处理器处理消息，将处理结果作为消息发送给需要的 WebSocket 客户端。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"UyVgda8EQoxe88xObRTcCx8JnHb","block_type":13,"ordered":{"elements":[{"text_run":{"content":"当前端断开连接时，删除会话集合中的 WebSocket 会话，释放资源。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"A3vyd2unfocQi7xkwAtcsxA0nWe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"和 HTT؜P 请求一样，前端和 WebSocket 服务器之间传输信息时，也可以通过 JSON 格式对数据进行序列化。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"QPqDdQDC7oLYZfxcLuZceLpenqf","block_type":5,"heading3":{"elements":[{"text_run":{"content":"5、WebSocket 的实现方式","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"XeHedL56aoWrzZxvNqWccjq6nMe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"对于 Java Spring 项目，主要有原生 WebSocket（基于","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"WebSocketHandler","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 实现）、STOMP、WebFlux 这 3 种实现方式。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"FcKxdO7KmoUfmTxkf5JcuG1Tn8b","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"对于大多数简单实时推送，选用原生 WebSocket；对于复杂的聊天室和协同系统，选用 WebSocket + STOMP + SockJS；对于高并发、低延迟数据流推送，选用 WebFlux + Reactive WebSocket。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ESALdxctJoljS0xlMBEcoBq2nKg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"对于我们的؜项目，并发要求不高，选择 Spring 原生的 WebSocket 来降低开发成本。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"EsaMdUgzXooGCzxMnAEcTvbMnUg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"明确方案后，我们进入后端开发。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"E6lzdMMSmoewwuxffiOceYlFnzh","block_type":22,"divider":{},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Q5lUdT3VvoCIrxx9B4McwBFAn9b","block_type":3,"heading1":{"elements":[{"text_run":{"content":"后端开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Uh5tdRyUVoHau1xN6DFcd0bPntT","block_type":4,"heading2":{"elements":[{"text_run":{"content":"1、引入 WebSocket 依赖","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Pwy6dwx00oQDwOx6LjYciMrCnQf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"引入依赖：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JjBcdM8fSokrOdxjGvyc9ThanTh","block_type":14,"code":{"elements":[{"text_run":{"content":"<!-- websocket --><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-websocket</artifactId></dependency>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":66,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"ZBo4dckpuotMYjxmH2OcAMhGnOg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"新建 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"manager.websocket","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包，所有和 WebSocket 相关的代码都放到该包下。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"H6VZdo3Zoo7yLFxD1oTcw9cSnUc","block_type":4,"heading2":{"elements":[{"text_run":{"content":"2、定义数据模型","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"CJM6dFESJoRgzNxWKg4cHeVYnje","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"新建 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"websocket.model","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 包，存放数据模型，包括请求类、响应类、枚举类。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"MXUld7gn0obO0dxm3OmcI8nqnhf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"1）定义图片编辑请求消息，也就是前端要发送给后端的参数：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"LrRyd1m58oSABhxNWRGcDVmKnbg","block_type":14,"code":{"elements":[{"text_run":{"content":"@Data@NoArgsConstructor@AllArgsConstructorpublic class PictureEditRequestMessage {\n\n    /**\n     * 消息类型，例如 \"ENTER_EDIT\", \"EXIT_EDIT\", \"EDIT_ACTION\"\n     */private String type;\n\n    /**\n     * 执行的编辑动作\n     */private String editAction;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"ZcGCdf7A1odb9YxMem9cYq2ZnIf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"2）定义图片编辑响应消息，也就是后端要发送给前端的信息：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"DOZqdftoTojdD3xaYnBcnFVPnxc","block_type":14,"code":{"elements":[{"text_run":{"content":"@Data@NoArgsConstructor@AllArgsConstructorpublic class PictureEditResponseMessage {\n\n    /**\n     * 消息类型，例如 \"INFO\", \"ERROR\", \"ENTER_EDIT\", \"EXIT_EDIT\", \"EDIT_ACTION\"\n     */private String type;\n\n    /**\n     * 信息\n     */private String message;\n\n    /**\n     * 执行的编辑动作\n     */private String editAction;\n\n    /**\n     * 用户信息\n     */private UserVO user;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"MoJsdoKahovt6zxnBE8cL6aWnuc","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"3）定义图؜片编辑消息类型枚举，便于后续根据消息类型进行相应的处理：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"OHLkdJM6soLb3bxaL4CcmmvcnBc","block_type":14,"code":{"elements":[{"text_run":{"content":"@Getterpublic enum PictureEditMessageTypeEnum {\n\n    INFO(\"发送通知\", \"INFO\"),\n    ERROR(\"发送错误\", \"ERROR\"),\n    ENTER_EDIT(\"进入编辑状态\", \"ENTER_EDIT\"),\n    EXIT_EDIT(\"退出编辑状态\", \"EXIT_EDIT\"),\n    EDIT_ACTION(\"执行编辑操作\", \"EDIT_ACTION\");\n\n    private final String text;\n    private final String value;\n\n    PictureEditMessageTypeEnum(String text, String value) {\n        this.text = text;\n        this.value = value;\n    }\n\n    /**\n     * 根据 value 获取枚举\n     */public static PictureEditMessageTypeEnum getEnumByValue(String value) {\n        if (value == null || value.isEmpty()) {\n            return null;\n        }\n        for (PictureEditMessageTypeEnum typeEnum : PictureEditMessageTypeEnum.values()) {\n            if (typeEnum.value.equals(value)) {\n                return typeEnum;\n            }\n        }\n        return null;\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"TZBMd7HZcoxjEtxF2pgcs9ZqnRe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"4）定义图片编辑操作类型枚举：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"T38RdVl1EoNP5yxFzeacwu7knrh","block_type":14,"code":{"elements":[{"text_run":{"content":"@Getterpublic enum PictureEditActionEnum {\n\n    ZOOM_IN(\"放大操作\", \"ZOOM_IN\"),\n    ZOOM_OUT(\"缩小操作\", \"ZOOM_OUT\"),\n    ROTATE_LEFT(\"左旋操作\", \"ROTATE_LEFT\"),\n    ROTATE_RIGHT(\"右旋操作\", \"ROTATE_RIGHT\");\n\n    private final String text;\n    private final String value;\n\n    PictureEditActionEnum(String text, String value) {\n        this.text = text;\n        this.value = value;\n    }\n\n    /**\n     * 根据 value 获取枚举\n     */public static PictureEditActionEnum getEnumByValue(String value) {\n        if (value == null || value.isEmpty()) {\n            return null;\n        }\n        for (PictureEditActionEnum actionEnum : PictureEditActionEnum.values()) {\n            if (actionEnum.value.equals(value)) {\n                return actionEnum;\n            }\n        }\n        return null;\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"HL9adpRMxoT7Wxx196WcTPGPnvh","block_type":4,"heading2":{"elements":[{"text_run":{"content":"3、WebSocket 拦截器 - 权限校验","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"CeE3d5GNto9JGfxfHgBcAwEFnEf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"在 WebSoc؜ket 连接前需要进行权限校验，如果发现用户没有团队空间内编辑图片的权限，则拒绝握手，可以通过定义一个 WebSocket 拦截器实现这个能力。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"L84adNqFvo7VC3xfAjHcQxQyndf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"此外，由于 HTTP 和 ؜WebSocket 的区别，我们不能在后续收到前端消息时直接从 request 对象中获取到登录用户信息，因此也需要通过 WebSocket 拦截器，为即将建立连接的 WebSocket 会话指定一些属性，比如登录用户信息、编辑的图片 id 等。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"VcaudqaHrozv5XxdAB1cVsrrniw","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"编写拦截器的代码，需要实现 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"HandshakeInterceptor","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 接口：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"DzPedRniiookNmxrrAIc2SqEnEc","block_type":14,"code":{"elements":[{"text_run":{"content":"@Component@Slf4jpublic class WsHandshakeInterceptor implements HandshakeInterceptor {\n\n    @Resourceprivate UserService userService;\n\n    @Resourceprivate PictureService pictureService;\n\n    @Resourceprivate SpaceService spaceService;\n\n    @Resourceprivate SpaceUserAuthManager spaceUserAuthManager;\n\n    @Overridepublic boolean beforeHandshake(@NotNull ServerHttpRequest request, @NotNull ServerHttpResponse response, @NotNull WebSocketHandler wsHandler, @NotNull Map<String, Object> attributes) {\n        if (request instanceof ServletServerHttpRequest) {\n            HttpServletRequest servletRequest = ((ServletServerHttpRequest) request).getServletRequest();\n            // 获取请求参数String pictureId = servletRequest.getParameter(\"pictureId\");\n            if (StrUtil.isBlank(pictureId)) {\n                log.error(\"缺少图片参数，拒绝握手\");\n                return false;\n            }\n            User loginUser = userService.getLoginUser(servletRequest);\n            if (ObjUtil.isEmpty(loginUser)) {\n                log.error(\"用户未登录，拒绝握手\");\n                return false;\n            }\n            // 校验用户是否有该图片的权限Picture picture = pictureService.getById(pictureId);\n            if (picture == null) {\n                log.error(\"图片不存在，拒绝握手\");\n                return false;\n            }\n            Long spaceId = picture.getSpaceId();\n            Space space = null;\n            if (spaceId != null) {\n                space = spaceService.getById(spaceId);\n                if (space == null) {\n                    log.error(\"空间不存在，拒绝握手\");\n                    return false;\n                }\n                if (space.getSpaceType() != SpaceTypeEnum.TEAM.getValue()) {\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"                    ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"log.info","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"(\"不是团队空间，拒绝握手\");\n                    return false;\n                }\n            }\n            List<String> permissionList = spaceUserAuthManager.getPermissionList(space, loginUser);\n            if (!permissionList.contains(SpaceUserPermissionConstant.PICTURE_EDIT)) {\n                log.error(\"没有图片编辑权限，拒绝握手\");\n                return false;\n            }\n            // 设置 attributes\n            attributes.put(\"user\", loginUser);\n            attributes.put(\"userId\", loginUser.getId());\n            attributes.put(\"pictureId\", Long.valueOf(pictureId)); // 记得转换为 Long 类型\n        }\n        return true;\n    }\n\n    @Overridepublic void afterHandshake(@NotNull ServerHttpRequest request, @NotNull ServerHttpResponse response, @NotNull WebSocketHandler wsHandler, Exception exception) {\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Mdo7dXtA4oRIyqxP87qcFIyZnNb","block_type":4,"heading2":{"elements":[{"text_run":{"content":"4、WebSocket 处理器","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Ta1Vdmjn0oPgHkxvebBcZ8jhnaf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"我们需要定؜义 WebSocket 处理器类，在连接成功、连接关闭、接收到客户端消息时进行相应的处理。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"CjpZdOnTYorZi3xPnbSc9k8rnuh","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"可以实现 ؜TextWebSocketHandler 接口，这样就能以字符串的方式发送和接受消息了：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JlBvdiMldoHxFGx4O4Xcjih7nih","block_type":14,"code":{"elements":[{"text_run":{"content":"@Componentpublic class PictureEditHandler extends TextWebSocketHandler {\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"MYeZdogXjoG2g8xivXjcmYqynrg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"1）首先在处理器类中定义 2 个常量，分别为：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"CA3hdF2eCo5M7WxFdkScyu7InZL","block_type":12,"bullet":{"elements":[{"text_run":{"content":"保存当前正在编辑的用户 id，执行编辑操作、进入或退出编辑时都会校验。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"LYt0dWqLQofxTaxgkU1cATLunnR","block_type":12,"bullet":{"elements":[{"text_run":{"content":"保存参与编辑图片的用户 WebSocket 会话的集合。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Iddvd6nwvo4htXxmGzIc2M1inYd","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"由于每个图؜片的协作编辑都是相互独立的，所以需要用 Map 来区分每个图片 id 对应的数据。代码如下：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SYZCdkUNNoqsyrxYB7Lc9ioinuf","block_type":14,"code":{"elements":[{"text_run":{"content":"// 每张图片的编辑状态，key: pictureId, value: 当前正在编辑的用户 IDprivate final Map<Long, Long> pictureEditingUsers = new ConcurrentHashMap<>();\n\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"// 保存所有连接的会话，key: pictureId, value: 用户会话集合private final Map<Long, Set<WebSocketSession>> pictureSessions = new ConcurrentHashMap<>();","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"BUT8dPySNov2H9xWG0bc7twRn2e","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"注意，由于可能同时有多个 WebSocket 客户端建立连接和发送消息，集合要使用并发包（JUC）中的 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"ConcurrentHashMap","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"，来保证线程安全。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"M1Mbd5bEZoKufextB5vcdpJDnFf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"2）由于接下来很多消息都需要传递给所有协作者，所以先编写一个 广播消息 的方法。该方法会根据 pictureId，将响应消息发送给编辑该图片的所有会话。考虑到可能会有消息不需要发送给编辑者本人的情况，该方法还可以接受 excludeSession 参数，支持排除掉向某个会话发送消息。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Lsl6dDtXEoHOESx6XavcT9BQn7d","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"代码如下：؜         ‌         ‌         ﻿     ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"DZFTd5XTIogAnCx6pRQcOOHgnXb","block_type":14,"code":{"elements":[{"text_run":{"content":"private void broadcastToPicture(Long pictureId, PictureEditResponseMessage pictureEditResponseMessage, WebSocketSession excludeSession) throws Exception {\n    Set<WebSocketSession> sessionSet = pictureSessions.get(pictureId);\n    if (CollUtil.isNotEmpty(sessionSet)) {\n        // 创建 ObjectMapperObjectMapper objectMapper = new ObjectMapper();\n        // 配置序列化：将 Long 类型转为 String，解决丢失精度问题SimpleModule module = new SimpleModule();\n        module.addSerializer(Long.class, ToStringSerializer.instance);\n        module.addSerializer(Long.TYPE, ToStringSerializer.instance); // 支持 long 基本类型\n        objectMapper.registerModule(module);\n        // 序列化为 JSON 字符串String message = objectMapper.writeValueAsString(pictureEditResponseMessage);\n        TextMessage textMessage = new TextMessage(message);\n        for (WebSocketSession session : sessionSet) {\n            // 排除掉的 session 不发送if (excludeSession != null && excludeSession.equals(session)) {\n                continue;\n            }\n            if (session.isOpen()) {\n                session.sendMessage(textMessage);\n            }\n        }\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"DitDdlWiUoP2ukxXlr2cJNDBnBk","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"上述代码中有个小细؜节，由于前端 JS 的长整数可能会丢失精度，所以使用 Jackson 自定义序列化器，在将对象转换为 JSON 字符串时，将 Long 类型转换为 String 类型。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"VyITdhG48ov7P0xf3Sbc9kFqnhd","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"再编写一个不排除 Session，给所有会话广播的方法：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"CYqYdCK7hoDhahxd6nZcfjVpn9b","block_type":14,"code":{"elements":[{"text_run":{"content":"// 全部广播private void broadcastToPicture(Long pictureId, PictureEditResponseMessage pictureEditResponseMessage) throws Exception {\n    broadcastToPicture(pictureId, pictureEditResponseMessage, null);\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"TyfIdSol4oRGVox4pZCck183nhe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"3）实现连؜接建立成功后执行的方法，保存会话到集合中，并且给其他会话发送消息：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Ue10dRdIcodv4AxP4W3cAfDGneh","block_type":14,"code":{"elements":[{"text_run":{"content":"@Overridepublic void afterConnectionEstablished(WebSocketSession session) throws Exception {\n    // 保存会话到集合中User user = (User) session.getAttributes().get(\"user\");\n    Long pictureId = (Long) session.getAttributes().get(\"pictureId\");\n    pictureSessions.putIfAbsent(pictureId, ConcurrentHashMap.newKeySet());\n    pictureSessions.get(pictureId).add(session);\n\n    // 构造响应PictureEditResponseMessage pictureEditResponseMessage = new PictureEditResponseMessage();\n    pictureEditResponseMessage.setType(PictureEditMessageTypeEnum.INFO.getValue());\n    String message = String.format(\"%s加入编辑\", user.getUserName());\n    pictureEditResponseMessage.setMessage(message);\n    pictureEditResponseMessage.setUser(userService.getUserVO(user));\n    // 广播给同一张图片的用户\n    broadcastToPicture(pictureId, pictureEditResponseMessage);\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"RAZNdeAokoAwpMxlO0rcfSMqnRe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"4）编写接收客户端消息的方法，根据消息类别执行不同的处理：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"JFjUdHt1oof9fMxwN6Sc5XS0nyK","block_type":14,"code":{"elements":[{"text_run":{"content":"@Overrideprotected void handleTextMessage(WebSocketSession session, TextMessage message) throws Exception {\n    // 将消息解析为 PictureEditMessagePictureEditRequestMessage pictureEditRequestMessage = JSONUtil.toBean(message.getPayload(), PictureEditRequestMessage.class);\n    String type = pictureEditRequestMessage.getType();\n    PictureEditMessageTypeEnum pictureEditMessageTypeEnum = PictureEditMessageTypeEnum.valueOf(type);\n\n    // 从 Session 属性中获取公共参数\n    Map<String, Object> attributes = session.getAttributes();\n    User user = (User) attributes.get(\"user\");\n    Long pictureId = (Long) attributes.get(\"pictureId\");\n\n    // 调用对应的消息处理方法switch (pictureEditMessageTypeEnum) {\n        case ENTER_EDIT:\n            handleEnterEditMessage(pictureEditRequestMessage, session, user, pictureId);\n            break;\n        case EDIT_ACTION:\n            handleEditActionMessage(pictureEditRequestMessage, session, user, pictureId);\n            break;\n        case EXIT_EDIT:\n            handleExitEditMessage(pictureEditRequestMessage, session, user, pictureId);\n            break;\n        default:\n            PictureEditResponseMessage pictureEditResponseMessage = new PictureEditResponseMessage();\n            pictureEditResponseMessage.setType(PictureEditMessageTypeEnum.ERROR.getValue());\n            pictureEditResponseMessage.setMessage(\"消息类型错误\");\n            pictureEditResponseMessage.setUser(userService.getUserVO(user));\n            session.sendMessage(new TextMessage(JSONUtil.toJsonStr(pictureEditResponseMessage)));\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"T9F4dED6moT7sBxD0QIcZsYSnWb","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"接下来依次؜编写每个处理消息的方法。首先是用户进入编辑状态，要设置当前用户为编辑用户，并且向其他客户端发送消息：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"WVLtdOs6ioWcb6xelGLcaEp9nTb","block_type":14,"code":{"elements":[{"text_run":{"content":"public void handleEnterEditMessage(PictureEditRequestMessage pictureEditRequestMessage, WebSocketSession session, User user, Long pictureId) throws Exception {\n    // 没有用户正在编辑该图片，才能进入编辑if (!pictureEditingUsers.containsKey(pictureId)) {\n        // 设置当前用户为编辑用户\n        pictureEditingUsers.put(pictureId, user.getId());\n        PictureEditResponseMessage pictureEditResponseMessage = new PictureEditResponseMessage();\n        pictureEditResponseMessage.setType(PictureEditMessageTypeEnum.ENTER_EDIT.getValue());\n        String message = String.format(\"%s开始编辑图片\", user.getUserName());\n        pictureEditResponseMessage.setMessage(message);\n        pictureEditResponseMessage.setUser(userService.getUserVO(user));\n        broadcastToPicture(pictureId, pictureEditResponseMessage);\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Rim8dYiq9oBLwdxc11mcfe1gn1f","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"用户执行编辑操作时，将该操作同步给 除了当前用户之外 的其他客户端，也就是说编辑操作不用再同步给自己：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Xg57dLWRjoSkHDxqDZtc6epWnKc","block_type":14,"code":{"elements":[{"text_run":{"content":"public void handleEditActionMessage(PictureEditRequestMessage pictureEditRequestMessage, WebSocketSession session, User user, Long pictureId) throws Exception {\n    Long editingUserId = pictureEditingUsers.get(pictureId);\n    String editAction = pictureEditRequestMessage.getEditAction();\n    PictureEditActionEnum actionEnum = PictureEditActionEnum.getEnumByValue(editAction);\n    if (actionEnum == null) {\n        return;\n    }\n    // 确认是当前编辑者if (editingUserId != null && editingUserId.equals(user.getId())) {\n        PictureEditResponseMessage pictureEditResponseMessage = new PictureEditResponseMessage();\n        pictureEditResponseMessage.setType(PictureEditMessageTypeEnum.EDIT_ACTION.getValue());\n        String message = String.format(\"%s执行%s\", user.getUserName(), actionEnum.getText());\n        pictureEditResponseMessage.setMessage(message);\n        pictureEditResponseMessage.setEditAction(editAction);\n        pictureEditResponseMessage.setUser(userService.getUserVO(user));\n        // 广播给除了当前客户端之外的其他用户，否则会造成重复编辑\n        broadcastToPicture(pictureId, pictureEditResponseMessage, session);\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Fxu3d3u0Yoj7W9x2EumcPnG2nLg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"用户退出编؜辑操作时，移除当前用户的编辑状态，并且向其他客户端发送消息：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"XNbEdOB4qojgsAxc8pScGP2lnLb","block_type":14,"code":{"elements":[{"text_run":{"content":"public void handleExitEditMessage(PictureEditRequestMessage pictureEditRequestMessage, WebSocketSession session, User user, Long pictureId) throws Exception {\n    Long editingUserId = pictureEditingUsers.get(pictureId);\n    if (editingUserId != null && editingUserId.equals(user.getId())) {\n        // 移除当前用户的编辑状态\n        pictureEditingUsers.remove(pictureId);\n        // 构造响应，发送退出编辑的消息通知PictureEditResponseMessage pictureEditResponseMessage = new PictureEditResponseMessage();\n        pictureEditResponseMessage.setType(PictureEditMessageTypeEnum.EXIT_EDIT.getValue());\n        String message = String.format(\"%s退出编辑图片\", user.getUserName());\n        pictureEditResponseMessage.setMessage(message);\n        pictureEditResponseMessage.setUser(userService.getUserVO(user));\n        broadcastToPicture(pictureId, pictureEditResponseMessage);\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Regxd1LKqo0TxsxzhlDcNYWrnlc","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"5）WebS؜ocket 连接关闭时，需要移除当前用户的编辑状态、并且从集合中删除当前会话，还可以给其他客户端发送消息通知：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"SCigdnSREobtdYxG3YYcDIJvntc","block_type":14,"code":{"elements":[{"text_run":{"content":"@Overridepublic void afterConnectionClosed(WebSocketSession session, @NotNull CloseStatus status) throws Exception {\n    Map<String, Object> attributes = session.getAttributes();\n    Long pictureId = (Long) attributes.get(\"pictureId\");\n    User user = (User) attributes.get(\"user\");\n    // 移除当前用户的编辑状态\n    handleExitEditMessage(null, session, user, pictureId);\n\n    // 删除会话\n    Set<WebSocketSession> sessionSet = pictureSessions.get(pictureId);\n    if (sessionSet != null) {\n        sessionSet.remove(session);\n        if (sessionSet.isEmpty()) {\n            pictureSessions.remove(pictureId);\n        }\n    }\n\n    // 响应PictureEditResponseMessage pictureEditResponseMessage = new PictureEditResponseMessage();\n    pictureEditResponseMessage.setType(PictureEditMessageTypeEnum.INFO.getValue());\n    String message = String.format(\"%s离开编辑\", user.getUserName());\n    pictureEditResponseMessage.setMessage(message);\n    pictureEditResponseMessage.setUser(userService.getUserVO(user));\n    broadcastToPicture(pictureId, pictureEditResponseMessage);\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"AUrpdkwZ3oCsjrxhoEtcZPJcnjc","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"💡 由于处理器的代码؜并不复杂，而且处理逻辑中使用到了当前类的全局变量，所以没有选择将每个处理器封装为单独的类。大家也可以将每个处理器封装为单独的类（相当于设计模式中的策略模式），并且根据消息类别调","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"MgyFdpsg8ocmp1xM1cEcmbTOnmb","block_type":4,"heading2":{"elements":[{"text_run":{"content":"5、WebSocket 配置","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"IBBTdSGnvosV3rxzktbcXKMYnsg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"类似于编写؜ Spring MVC 的 Controller 接口，可以为指定的路径配置处理器和拦截器：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"LjV0dKqAMoZs4zxB8k8cvDTSnPd","block_type":14,"code":{"elements":[{"text_run":{"content":"@Configuration@EnableWebSocketpublic class WebSocketConfig implements WebSocketConfigurer {\n\n    @Resourceprivate PictureEditHandler pictureEditHandler;\n\n    @Resourceprivate WsHandshakeInterceptor wsHandshakeInterceptor;\n\n    @Overridepublic void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {\n        // websocket\n        registry.addHandler(pictureEditHandler, \"/ws/picture/edit\")\n                .addInterceptors(wsHandshakeInterceptor)\n                .setAllowedOrigins(\"*\");\n    }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":29,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"QgVSduN6Zo0FNoxUu7lckEplnod","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"之后，前端就可以通过 WebSocket 连接项目启动端口的 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"/ws/picture/edit","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 路径了。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BnehdeiCfoJJrxxiDwvceD4Anyp","block_type":22,"divider":{},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"GLFYdLeSbo81UAxq3b4cVRLrn1c","block_type":3,"heading1":{"elements":[{"text_run":{"content":"前端开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Al9PdvmskoQdBrxNNw9cAUuHn1e","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"前端开发主要集中在基础图片编辑组件 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"ImageCropper.vue","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 中。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IniQdT1NEoFDkZxYG20ccoj2nih","block_type":4,"heading2":{"elements":[{"text_run":{"content":"1、基础代码","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"X2tOdAhj0oDtUux7Lo8c1tIAnsc","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"首先根据后端的枚举类和常量，在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"picture.ts","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 中定义图片编辑消息类型、图片编辑动作：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"VETndpNIGoM2BaxFdFycwxYJnyh","block_type":14,"code":{"elements":[{"text_run":{"content":"export const PICTURE_EDIT_MESSAGE_TYPE_ENUM = {\n  INFO: 'INFO',\n  ERROR: 'ERROR',\n  ENTER_EDIT: 'ENTER_EDIT',\n  EXIT_EDIT: 'EXIT_EDIT',\n  EDIT_ACTION: 'EDIT_ACTION',\n};\n\nexport const PICTURE_EDIT_MESSAGE_TYPE_MAP = {\n  INFO: '发送通知',\n  ERROR: '发送错误',\n  ENTER_EDIT: '进入编辑状态',\n  EXIT_EDIT: '退出编辑状态',\n  EDIT_ACTION: '执行编辑操作',\n};\n\nexport const PICTURE_EDIT_ACTION_ENUM = {\n  ZOOM_IN: 'ZOOM_IN',\n  ZOOM_OUT: 'ZOOM_OUT',\n  ROTATE_LEFT: 'ROTATE_LEFT',\n  ROTATE_RIGHT: 'ROTATE_RIGHT',\n};\n\nexport const PICTURE_EDIT_ACTION_MAP = {\n  ZOOM_IN: '放大操作',\n  ZOOM_OUT: '缩小操作',\n  ROTATE_LEFT: '左旋操作',\n  ROTATE_RIGHT: '右旋操作',\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"};","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"GPZCd2UeaocLwKxy0UGcqOFKncv","block_type":4,"heading2":{"elements":[{"text_run":{"content":"2、WebSocket 前端基础代码","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"VUi7dxyfXo5mGUxqVHQcCSuhnCe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"为了让页面或组件的代码中能够更方便地使用 WebSocket 连接，我们可以先在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"utils","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 目录下编写适用于图片编辑 WebSocket 连接的工具类。定义了：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"QJe4d9AUPoYmpoxODVlcqvoanyb","block_type":12,"bullet":{"elements":[{"text_run":{"content":"连接 WebSocket 的地址","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"ZY0pdKzSio6j15xTD6gcOeg9nph","block_type":12,"bullet":{"elements":[{"text_run":{"content":"WebSocket 各个事件的处理函数，比如连接成功和连接关闭事件，跟后端对应","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"KffPddZZxoQWccxU8g4cmRxOnfZ","block_type":12,"bullet":{"elements":[{"text_run":{"content":"向 WebSocket 服务端发送消息的函数等","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"FYIKdFGUEot8RfxDcrUcz2xunnb","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"代码如下，这段属于样板代码，大家了解一下即可，不必自己敲：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"AuSEdxjAzoo1vnxYlgAc2JtHnfY","block_type":14,"code":{"elements":[{"text_run":{"content":"export default class PictureEditWebSocket {\n  private pictureId: numberprivate socket: WebSocket | nullprivate eventHandlers: anyconstructor(pictureId: number) {\n    this.pictureId = pictureId // 当前编辑的图片 IDthis.socket = null // WebSocket 实例this.eventHandlers = {} // 自定义事件处理器\n  }\n\n  /**\n   * 初始化 WebSocket 连接\n   */connect() {\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"    const url = `ws://","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"localhost:8123/api/ws/picture/edit?pictureId=${this.pictureId}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"`this.socket = new WebSocket(url)\n\n    // 设置携带 cookiethis.socket.binaryType = 'blob'// 监听连接成功事件this.socket.onopen = () => {\n      console.log('WebSocket 连接已建立')\n      this.triggerEvent('open')\n    }\n\n    // 监听消息事件this.socket.onmessage = (event) => {\n      const message = JSON.parse(event.data)\n      console.log('收到消息:', message)\n\n      // 根据消息类型触发对应事件const type = message.typethis.triggerEvent(type, message)\n    }\n\n    // 监听连接关闭事件this.socket.onclose = (event) => {\n      console.log('WebSocket 连接已关闭:', event)\n      this.triggerEvent('close', event)\n    }\n\n    // 监听错误事件this.socket.onerror = (error) => {\n      console.error('WebSocket 发生错误:', error)\n      this.triggerEvent('error', error)\n    }\n  }\n\n  /**\n   * 关闭 WebSocket 连接\n   */disconnect() {\n    if (this.socket) {\n      this.socket.close()\n      console.log('WebSocket 连接已手动关闭')\n    }\n  }\n\n  /**\n   * 发送消息到后端\n   * @param {Object} message 消息对象\n   */sendMessage(message: object) {\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(message))\n      console.log('消息已发送:', message)\n    } else {\n      console.error('WebSocket 未连接，无法发送消息:', message)\n    }\n  }\n\n  /**\n   * 添加自定义事件监听\n   * @param {string} type 消息类型\n   * @param {Function} handler 消息处理函数\n   */on(type: string, handler: (data?: any) => void) {\n    if (!this.eventHandlers[type]) {\n      this.eventHandlers[type] = []\n    }\n    this.eventHandlers[type].push(handler)\n  }\n\n  /**\n   * 触发事件\n   * @param {string} type 消息类型\n   * @param {Object} data 消息数据\n   */triggerEvent(type: string, data?: any) {\n    const handlers = this.eventHandlers[type]\n    if (handlers) {\n      handlers.forEach((handler: any) => handler(data))\n    }\n  }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"S7kTdIoM4ojtlvxLFYMcK6prnJf","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"上述代码中比较巧妙的是，我们自定义了一套事件监听机制，使用工具类的组件可以通过 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"on","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 方法注册事件处理函数，然后通过 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"triggerEvent","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 函数触发事件处理函数。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ROfBdUBQMok6FExY6EAc0cc0nRh","block_type":4,"heading2":{"elements":[{"text_run":{"content":"3、图片编辑组件开发","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"AfDOdX4Reoy5x6xMePDcQo3Unrh","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"1）定义响应؜式变量，包括正在编辑的用户、用户是否可以进入编辑、用户是否可以退出编辑，这些变量会用于控制页面的展示和编辑按钮是否可点击：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"G99TdfqA9oPODixCIKdchxMfn1b","block_type":14,"code":{"elements":[{"text_run":{"content":"// --------- 实时编辑 ---------const loginUserStore = useLoginUserStore()\nlet loginUser = loginUserStore.loginUser// 正在编辑的用户const editingUser = ref<API.UserVO>()\n// 没有用户正在编辑中，可进入编辑const canEnterEdit = computed(() => {\n  return !editingUser.value\n})\n// 正在编辑的用户是本人，可退出编辑const canExitEdit = computed(() => {\n  return editingUser.value?.id === loginUser.id\n})\n// 可以编辑const canEdit = computed(() => {\n  return editingUser.value?.id === loginUser.id\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"})","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"CsRhdp76goA1iaxarXmca6pbnco","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"2）开发协同编辑操作相关的按钮元素：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"WFMsdSQIRo0FflxWhxwcrIQyn0f","block_type":14,"code":{"elements":[{"text_run":{"content":"<!-- 协同编辑操作 -->\n<div class=\"image-edit-actions\">\n  <a-space>\n    <a-button v-if=\"editingUser\" disabled> {{ editingUser.userName }}正在编辑</a-button>\n    <a-button v-if=\"canEnterEdit\" type=\"primary\" ghost @click=\"enterEdit\">进入编辑</a-button>\n    <a-button v-if=\"canExitEdit\" danger ghost @click=\"exitEdit\">退出编辑</a-button>\n  </a-space>\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"</div>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Qglvd2guCoGILqxgUWOcFiOjnYn","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"给所有的图؜片编辑操作按钮补充禁用状态，如果有其他人在编辑，则禁用按钮：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"KNvodIvSLo41w3x4d4kchQs1nTb","block_type":14,"code":{"elements":[{"text_run":{"content":"<a-space>\n  <a-button @click=\"rotateLeft\" :disabled=\"!canEdit\">向左旋转</a-button>\n  <a-button @click=\"rotateRight\" :disabled=\"!canEdit\">向右旋转</a-button>\n  <a-button @click=\"changeScale(1)\" :disabled=\"!canEdit\">放大</a-button>\n  <a-button @click=\"changeScale(-1)\" :disabled=\"!canEdit\">缩小</a-button>\n  <a-button type=\"primary\" :loading=\"loading\" :disabled=\"!canEdit\" @click=\"handleConfirm\">\n    确认\n  </a-button>\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"</a-space>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"OuXbdbVWSoYwuixFEAXcSOhsnBb","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"效果如图：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"IPzOdXv0xompnWx6V09cAtRun7e","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"3）初始化 WebSocket 连接，绑定事件：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"XDbldy9g6oWTYyxNFB2cmuEhnPd","block_type":14,"code":{"elements":[{"text_run":{"content":"let websocket: PictureEditWebSocket | null// 初始化 WebSocket 连接，绑定事件const initWebsocket = () => {\n  const pictureId = props.picture?.idif (!pictureId || !visible.value) {\n    return\n  }\n  // 防止之前的连接未释放if (websocket) {\n    websocket.disconnect()\n  }\n  // 创建 WebSocket 实例\n  websocket = new PictureEditWebSocket(pictureId)\n  // 建立 WebSocket 连接\n  websocket.connect()\n\n  // 监听通知消息\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"  websocket.on(","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"PICTURE_EDIT_MESSAGE_TYPE_ENUM.INFO","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":", (msg) => {\n    console.log('收到通知消息：', msg)\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"    ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"message.info","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"(msg.message)\n  })\n\n  // 监听错误消息\n  websocket.on(PICTURE_EDIT_MESSAGE_TYPE_ENUM.ERROR, (msg) => {\n    console.log('收到错误消息：', msg)\n    message.error(msg.message)\n  })\n\n  // 监听进入编辑状态消息\n  websocket.on(PICTURE_EDIT_MESSAGE_TYPE_ENUM.ENTER_EDIT, (msg) => {\n    console.log('收到进入编辑状态消息：', msg)\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"    ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"message.info","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"(msg.message)\n    editingUser.value = msg.user\n  })\n\n  // 监听编辑操作消息\n  websocket.on(PICTURE_EDIT_MESSAGE_TYPE_ENUM.EDIT_ACTION, (msg) => {\n    console.log('收到编辑操作消息：', msg)\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"    ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"message.info","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"(msg.message)\n    switch (msg.editAction) {\n      case PICTURE_EDIT_ACTION_ENUM.ROTATE_LEFT:\n        cropperRef.value.rotateLeft()\n        breakcase PICTURE_EDIT_ACTION_ENUM.ROTATE_RIGHT:\n        cropperRef.value.rotateRight()\n        breakcase PICTURE_EDIT_ACTION_ENUM.ZOOM_IN:\n        cropperRef.value.changeScale(1)\n        breakcase PICTURE_EDIT_ACTION_ENUM.ZOOM_OUT:\n        cropperRef.value.changeScale(-1)\n        break\n    }\n  })\n\n  // 监听退出编辑状态消息\n  websocket.on(PICTURE_EDIT_MESSAGE_TYPE_ENUM.EXIT_EDIT, (msg) => {\n    console.log('收到退出编辑状态消息：', msg)\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"    ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"message.info","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"(msg.message)\n    editingUser.value = undefined\n  })\n}\n\nwatchEffect(() => {\n  initWebsocket()\n})\n\nonUnmounted(() => {\n  // 断开连接if (websocket) {\n    websocket.disconnect()\n  }\n  editingUser.value = undefined\n})\n\n// 关闭弹窗const closeModal = () => {\n  visible.value = false// 断开连接if (websocket) {\n    websocket.disconnect()\n  }\n  editingUser.value = undefined\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Bdlhd1oMToNGzfxe4gQcRIOinmN","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"上述代码中的几个注意事项：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"NteedeGsvoIbBxx1dKnc9PO2ndg","block_type":13,"ordered":{"elements":[{"text_run":{"content":"定义了收到消息后的事件处理函数，比如收到编辑操作消息时，调用图片编辑器组件的对应操作方法，来同步编辑结果。收到有用户进入编辑状态的消息时，设置 editingUser 的值；收到有用户退出编辑状态的消息时，清空 editingUser 的值。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"1"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"OzUTdmev7oGdmExLoJucSvFDnYg","block_type":13,"ordered":{"elements":[{"text_run":{"content":"及时释放 WebSocket 连接和资源：在组件销毁时（onUnmounted 函数）、弹窗关闭时（closeModal 函数）、重新连接时（initWebsocket 函数开头）都要释放连接并重置正在编辑的用户。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false,"sequence":"auto"}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"DCxAdVuWOof5K8x0vIAc8kwGnHg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"4）编辑发送 W؜ebSocket 消息的函数，包括进入编辑状态、退出编辑状态、执行编辑图片操作：     ﻿               ‍            ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Xb7AdQzYSovnObxMCwKcjdyqnHg","block_type":14,"code":{"elements":[{"text_run":{"content":"// 进入编辑状态const enterEdit = () => {\n  if (websocket) {\n    // 发送进入编辑状态的消息\n    websocket.sendMessage({\n      type: PICTURE_EDIT_MESSAGE_TYPE_ENUM.ENTER_EDIT,\n    })\n  }\n}\n\n// 退出编辑状态const exitEdit = () => {\n  if (websocket) {\n    // 发送退出编辑状态的消息\n    websocket.sendMessage({\n      type: PICTURE_EDIT_MESSAGE_TYPE_ENUM.EXIT_EDIT,\n    })\n  }\n}\n\n// 编辑图片操作const editAction = (action: string) => {\n  if (websocket) {\n    // 发送编辑操作的请求\n    websocket.sendMessage({\n      type: PICTURE_EDIT_MESSAGE_TYPE_ENUM.EDIT_ACTION,\n      editAction: action,\n    })\n  }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"ZTYFd4q0NoV4qixEupfc5RQJnUb","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"所有编辑图؜片的操作都要补充上发送 WebSocket 消息：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"A2gcdcNZVojweRx2oXucLII8nmd","block_type":14,"code":{"elements":[{"text_run":{"content":"// 向左旋转const rotateLeft = () => {\n  cropperRef.value.rotateLeft()\n  editAction(PICTURE_EDIT_ACTION_ENUM.ROTATE_LEFT)\n}\n\n// 向右旋转const rotateRight = () => {\n  cropperRef.value.rotateRight()\n  editAction(PICTURE_EDIT_ACTION_ENUM.ROTATE_RIGHT)\n}\n\n// 缩放const changeScale = (num: number) => {\n  cropperRef.value.changeScale(num)\n  if (num > 0) {\n    editAction(PICTURE_EDIT_ACTION_ENUM.ZOOM_IN)\n  } else {\n    editAction(PICTURE_EDIT_ACTION_ENUM.ZOOM_OUT)\n  }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"Xnq5dUfOsoyin7xwRugcw1PonEf","block_type":4,"heading2":{"elements":[{"text_run":{"content":"4、协同编辑范围控制","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"YUBmdoBfxomc6mx4VP6cE4xAnSe","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"只有团队空؜间才支持协作编辑，否则还是跟之前一样，默认就进入可编辑状态。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"J6MMd0avsoB2DLxe1ZbcyEfXn9d","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"为此，我们需要在 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"ImageCropper","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 组件中获取到空间信息，并判断是否为团队空间。","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"PGnGdpm3Ro6HiZxD0P6cn4AxnOh","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"1）可以由引入该组件的父页面 ","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"AddPicturePage","text_element_style":{"bold":false,"inline_code":true,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":" 获取空间信息：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"ZtE0dtCProfmBXxUXcBcLR7lnIh","block_type":14,"code":{"elements":[{"text_run":{"content":"const space = ref<API.SpaceVO>()\n\n// 获取空间信息const fetchSpace = async () => {\n  // 获取数据if (spaceId.value) {\n    const res = await getSpaceVoByIdUsingGet({\n      id: spaceId.value,\n    })\n    if (res.data.code === 0 && res.data.data) {\n      space.value = res.data.data\n    }\n  }\n}\n\nwatchEffect(() => {\n  fetchSpace()\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"})","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"TozbdAo03oDuFexRlilctEMjnkc","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"然后传入给组件：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"BWugdIWjqouBHbxXiCtc6xKJnfe","block_type":14,"code":{"elements":[{"text_run":{"content":"<ImageCropper\n  ref=\"imageCropperRef\"\n  :imageUrl=\"picture?.url\"\n  :picture=\"picture\"\n  :spaceId=\"spaceId\"\n  :space=\"space\"\n  :onSuccess=\"onSuccess\"\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"/>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"RfnZd2qIxoAq19xBrcHcynF1nKG","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"2）在图片编辑组件中新增 space 属性：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Lfkld5LDPo4yQxxVK6JcVZfVnug","block_type":14,"code":{"elements":[{"text_run":{"content":"interface Props {\n  imageUrl?: string\n  picture?: API.PictureVO\n  spaceId?: number\n  space?: API.SpaceVO\n  onSuccess?: (newPicture: API.PictureVO) => void\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"}","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"YWVld3Av0oaRpixB38ycN85hnCg","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"然后就可以؜根据 space 判断是否为团队空间了，定义一个变量便于复用：R7zfQ2yjmCwaGmgYTa9cW+7DK0YPbs0kpW2reaJf93o=","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Mb0udVNQAojrIJxMsHmcdxy9n4c","block_type":14,"code":{"elements":[{"text_run":{"content":"// 是否为团队空间const isTeamSpace = computed(() => {\n  return props.space?.spaceType === SPACE_TYPE_ENUM.TEAM;\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"})","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"ByCpdLZzZok6DfxMC9jcpkbjnPb","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"3）使用该؜变量来控制协同编辑的范围，包括是否可编辑、是否初始化 WebSocket 连接：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"GtaddDYVaoE1tMxj8YpcHBWrnzf","block_type":14,"code":{"elements":[{"text_run":{"content":"// 可以编辑const canEdit = computed(() => {\n  // 不是团队空间，则默认可编辑if (!isTeamSpace.value) {\n    return true\n  }\n  return editingUser.value?.id === loginUser.id\n})\n\nwatchEffect(() => {\n  // 团队空间才初始化if (isTeamSpace.value) {\n    initWebsocket()\n  }\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"})","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":63,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"NoV0dqqH5oIUKixtx9rcO19znje","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"以及是否展示协同编辑操作的按钮：","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}},{"block_id":"Js84dX7xXoTtukxxMRHclRlpnnb","block_type":14,"code":{"elements":[{"text_run":{"content":"<!-- 协同编辑操作 -->\n<div class=\"image-edit-actions\" v-if=\"isTeamSpace\">\n","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}},{"text_run":{"content":"</div>","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"language":1,"wrap":false}},"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme"},{"block_id":"KBiKdjyHToPOqmxswxncQQV4ntd","block_type":2,"parent_id":"ZBBhdJrYxomtGhxEZPRcyoGdnme","text":{"elements":[{"text_run":{"content":"","text_element_style":{"bold":false,"inline_code":false,"italic":false,"strikethrough":false,"underline":false}}}],"style":{"align":1,"folded":false}}}],"type":"docx"}